<!doctype html>
	<html lang="en" dir="ltr" class="">
	<head>
		<title>Modulo operation - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="robots" content="noindex,nofollow"/>		<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile%7Cmobile.production-only%2Cproduction-jquery%7Cmobile.device.default&amp;only=styles&amp;skin=mobile&amp;version=1352163471&amp;*" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile.site&amp;only=styles&amp;skin=mobile&amp;*" />		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />		<script type="text/javascript">
			var _mwStart = +new Date;
			window._evq = window._evq || [];
			if ( typeof console === 'undefined' ) {
				console = { log: function() {} };
			}
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"mobile-frontend-watchlist-add":"Added $1 to your watchlist","mobile-frontend-watchlist-removed":"Removed $1 from your watchlist","mobile-frontend-watchlist-view":"View your watchlist","mobile-frontend-ajax-random-heading":"Locating knowledge...","mobile-frontend-ajax-random-quote":"Intellectual growth should commence at birth and cease only at death","mobile-frontend-ajax-random-quote-author":"Albert Einstein","mobile-frontend-ajax-random-question":"Read this article?","mobile-frontend-ajax-random-yes":"Yes","mobile-frontend-ajax-random-retry":"Try again","mobile-frontend-ajax-page-loading":"Loading $1","mobile-frontend-page-saving":"Saving $1","mobile-frontend-ajax-page-error":"Whoops! Something went wrong there. Please try refreshing your browser window.","mobile-frontend-meta-data-issues":"This article has some issues","mobile-frontend-meta-data-issues-header":"Issues","expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-footer":"<a href="http://en.m.wikipedia.org/wiki/\&quot;\/wiki\/Special:MobileOptions\/Language\&quot;">Note: This article may not be written in your preferred language. You can see which languages Wikipedia supports by clicking here.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"action":"","authenticated":false,"scriptPath":"\/w","shim":"\/\/bits.wikimedia.org\/static-1.21wmf3\/extensions\/MobileFrontend\/stylesheets\/common\/images\/blank.gif","pageUrl":"\/wiki\/$1","beta":null,"title":"Modulo operation","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			function _mwLogEvent( data, additionalInformation ) {
				var timestamp = + new Date;
				var ev = { event_id: 'mobile', delta: timestamp - _mwStart, data: data, beta: mwMobileFrontendConfig.settings.beta,
					session: _mwStart, page: mwMobileFrontendConfig.settings.title, info: additionalInformation || '' };
				_evq.push( ev );
				console.log( typeof JSON === 'undefined' ? ev : JSON.stringify( ev ) );
			}
		</script>
				<link rel="canonical" href="http://en.wikipedia.org/wiki/Modulo_operation" >
	</head>
	<body class="mobile live">
				<div id="mw-mf-viewport">
		<div id="mw-mf-page-left">
		<div id='mw-mf-content-left'>
		<ul id="mw-mf-menu-main">
			<li class='icon'><a href="Main_Page"
				title="Home">
				Home</a></li>
			<li class='icon2'><a href="Special:Random#mw-mf-page-left" id="randomButton"
				title="Random"
				class="button">Random</a></li>
						<li class='icon5'>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions&amp;returnto=Modulo+operation"
					title="Settings">
				Settings				</a>
			</li>
					</ul>
		</div>
		</div>
		<div id='mw-mf-page-center'>
									<div id="mw-mf-header">
		<a title="Open main menu" href="Special:MobileMenu#mw-mf-page-left" id="mw-mf-main-menu-button">				<img alt="menu"
				src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif">
		</a>			<form id="mw-mf-searchForm" action="http://en.m.wikipedia.org/w/index.php" class="search_bar" method="get">
			<input type="hidden" value="Special:Search" name="title" />
			<div id="mw-mf-sq" class="divclearable">
				<input type="search" name="search" id="mw-mf-search" size="22" value="" autocomplete="off" maxlength="1024" class="search"
					placeholder="Search Wikipedia"
					/>
				<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear"/>
				<input class='searchSubmit' type="submit" value="Go">
			</div>
		</form>
	</div>
	<div id="results"></div>
		<div class='show ' id='content_wrapper'>
						<h1 id="firstHeading">Modulo operation</h1>			
<div class="thumb tright">
<div class="thumbinner" style="width:252px;">
<a href="http://en.m.wikipedia.org/w/index.php?title=File:Divmod.svg&amp;page=1" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/2/22/Divmod.svg/250px-Divmod.svg.png" width="250" height="417" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/en/thumb/2/22/Divmod.svg/375px-Divmod.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/2/22/Divmod.svg/500px-Divmod.svg.png 2x"></a>
<div class="thumbcaption">

Quotient (red) and remainder (green) functions using different algorithms</div>
</div>
</div>
<p>In <a href="Computing" title="Computing">computing</a>, the <b>modulo</b> operation finds the <a href="http://en.m.wikipedia.org/wiki/Remainder" title="Remainder">remainder</a> of <a href="Division_(mathematics)" title="Division (mathematics)">division</a> of one number by another.</p>
<p>Given two positive numbers, <span class="texhtml"><i>a</i></span> (the <a href="Division_(mathematics)" title="Division (mathematics)">dividend</a>) and <span class="texhtml"><i>n</i></span> (the <a href="http://en.m.wikipedia.org/wiki/Divisor" title="Divisor">divisor</a>), <i>a</i> <b>modulo</b> <i>n</i> (abbreviated as <i>a</i> mod <i>n</i>) is the remainder of the <a href="http://en.m.wikipedia.org/wiki/Euclidean_division" title="Euclidean division">Euclidean division</a> of <i>a</i> by <i>n</i>. For instance, the expression "5 mod 2" would evaluate to 1 because 5 divided by 2 leaves a <a href="http://en.m.wikipedia.org/wiki/Quotient" title="Quotient">quotient</a> of 2 and a remainder of 1, while "9 mod 3" would evaluate to 0 because the division of 9 by 3 has a quotient of 3 and leaves a remainder of 0; there is nothing to subtract from 9 after multiplying 3 times 3. (Notice that doing the division with a calculator won't show you the result referred to here by this operation, the quotient will be expressed as a decimal fraction.) When either <span class="texhtml"><i>a</i></span> or <span class="texhtml"><i>n</i></span> is negative, this naive definition breaks down and programming languages differ in how these values are defined. Although typically performed with <i>a</i> and <i>n</i> both being integers, many computing systems allow other types of numeric operands. The range of numbers for an integer modulo of <i>n</i> is 0 to <i>n</i> − 1. (<i>n</i> mod 1 is always 0; <i>n</i> mod 0 is undefined, possibly resulting in a "Division by zero" error in computer programming languages) See <a href="http://en.m.wikipedia.org/wiki/Modular_arithmetic" title="Modular arithmetic">modular arithmetic</a> for an older and related convention applied in <a href="http://en.m.wikipedia.org/wiki/Number_theory" title="Number theory">number theory</a>.</p>
<div style="clear:both;"></div>
<h2> <span class="mw-headline" id="Remainder_calculation_for_the_modulo_operation">Remainder calculation for the modulo operation</span>
</h2>
<table class="wikitable" style="float:right; margin-left:1em; margin-right:0; width:30%;">
<caption>Integer modulo operators in various programming languages</caption>
<tr>
<th>Language</th>
<th>Operator</th>
<th abbr="Sign">Result has the same sign as</th>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/ActionScript" title="ActionScript">ActionScript</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/Ada_(programming_language)" title="Ada (programming language)">Ada</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>rem</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Active_Server_Page" title="Active Server Page" class="mw-redirect">ASP</a></td>
<td><tt>Mod</tt></td>
<td>Not defined</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/ALGOL-68" title="ALGOL-68" class="mw-redirect">ALGOL-68</a></td>
<td><tt>%×</tt></td>
<td>Always positive</td>
</tr>
<tr>
<td><a href="AMPL" title="AMPL">AMPL</a></td>
<td><tt>mod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/AppleScript" title="AppleScript">AppleScript</a></td>
<td><tt>mod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/BASIC" title="BASIC">BASIC</a></td>
<td><tt>Mod</tt></td>
<td>Not defined</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Bc_programming_language" title="Bc programming language">bc</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Bash_(Unix_shell)" title="Bash (Unix shell)">bash</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td>
<a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> (ISO 1990)</td>
<td><tt>%</tt></td>
<td>Implementation defined</td>
</tr>
<tr>
<td><a href="C99" title="C99">C (ISO 1999)</a></td>
<td><tt>%</tt></td>
<td>Dividend<sup id="cite_ref-C99_0-0" class="reference"><a href="Modulo_operation#cite_note-C99-0"><span>[</span>1<span>]</span></a></sup>
</td>
</tr>
<tr>
<td>
<a href="C++" title="C++">C++</a> (ISO 1998)</td>
<td><tt>%</tt></td>
<td>Implementation defined<sup id="cite_ref-1" class="reference"><a href="Modulo_operation#cite_note-1"><span>[</span>2<span>]</span></a></sup>
</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/C%2B%2B11" title="C++11">C++ (ISO 2011)</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Clarion_(programming_language)" title="Clarion (programming language)">CLARION</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Clojure" title="Clojure">Clojure</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td>
<a href="http://en.m.wikipedia.org/wiki/COBOL" title="COBOL">COBOL</a><sup class="reference plainlinks nourlexpansion" id="ref_4"><a class="external autonumber" href="http://en.wikipedia.org/wiki/Modulo_operation#endnote_4">[1]</a></sup>
</td>
<td><tt>FUNCTION MOD</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/ColdFusion" title="ColdFusion" class="mw-redirect">ColdFusion</a></td>
<td><tt>%, MOD</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>rem</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="D_(programming_language)" title="D (programming language)">D</a></td>
<td><tt>%</tt></td>
<td>Dividend<sup id="cite_ref-2" class="reference"><a href="Modulo_operation#cite_note-2"><span>[</span>3<span>]</span></a></sup>
</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Dart_(programming_language)" title="Dart (programming language)">Dart</a></td>
<td><tt>%</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Eiffel_(programming_language)" title="Eiffel (programming language)">Eiffel</a></td>
<td><tt>\\</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Erlang_(programming_language)" title="Erlang (programming language)">Erlang</a></td>
<td><tt>rem</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/Euphoria_(programming_language)" title="Euphoria (programming language)">Euphoria</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>remainder</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/F_Sharp_(programming_language)" title="F Sharp (programming language)">F#</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/FileMaker" title="FileMaker">FileMaker</a></td>
<td><tt>Mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td rowspan="2"><a href="Fortran" title="Fortran">Fortran</a></td>
<td><tt>mod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><tt>modulo</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Frink" title="Frink">Frink</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Game_Maker_Language" title="Game Maker Language">GML (Game Maker)</a></td>
<td><tt>mod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="Go_(programming_language)" title="Go (programming language)">Go</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>rem</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/J_(programming_language)" title="J (programming language)">J</a></td>
<td><tt>|~</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="Java_(programming_language)" title="Java (programming language)">Java</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="JavaScript" title="JavaScript">JavaScript</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Lua_(programming_language)" title="Lua (programming language)">Lua 5</a></td>
<td><tt>%</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Lua_(programming_language)" title="Lua (programming language)">Lua 4</a></td>
<td><tt>mod(x,y)</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Liberty_Basic" title="Liberty Basic" class="mw-redirect">Liberty Basic</a></td>
<td><tt>MOD</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/MathCad" title="MathCad" class="mw-redirect">MathCad</a></td>
<td><tt>mod(x,y)</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Maple_(software)" title="Maple (software)">Maple</a></td>
<td><tt>e mod m</tt></td>
<td>Always positive</td>
</tr>
<tr>
<td><a href="Mathematica" title="Mathematica">Mathematica</a></td>
<td><tt>Mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td rowspan="2"><a href="MATLAB" title="MATLAB">MATLAB</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>rem</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/Maxima_(software)" title="Maxima (software)">Maxima</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>remainder</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Microsoft_Excel" title="Microsoft Excel">Microsoft Excel</a></td>
<td><tt>=MOD()</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Minitab" title="Minitab">Minitab</a></td>
<td><tt>MOD</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/MUMPS" title="MUMPS">MUMPS</a></td>
<td><tt>#</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Oberon_(programming_language)" title="Oberon (programming language)">Oberon</a></td>
<td><tt>MOD</tt></td>
<td>Divisor<sup class="reference plainlinks nourlexpansion" id="ref_3"><a class="external autonumber" href="http://en.wikipedia.org/wiki/Modulo_operation#endnote_3">[2]</a></sup>
</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/OCaml" title="OCaml">OCaml</a></td>
<td><tt>mod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Occam_(programming_language)" title="Occam (programming language)">Occam</a></td>
<td><tt>\</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="Pascal_(programming_language)" title="Pascal (programming language)">Pascal (Delphi)</a></td>
<td><tt>mod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="Pascal_(programming_language)" title="Pascal (programming language)">Pascal (ISO-7185 and ISO-10206)</a></td>
<td><tt>mod</tt></td>
<td>Always positive</td>
</tr>
<tr>
<td><a href="Perl" title="Perl">Perl</a></td>
<td><tt>%</tt></td>
<td>Divisor<sup class="reference plainlinks nourlexpansion" id="ref_1"><a class="external autonumber" href="http://en.wikipedia.org/wiki/Modulo_operation#endnote_1">[3]</a></sup>
</td>
</tr>
<tr>
<td><a href="PHP" title="PHP">PHP</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><span class="new" title="PIC Basic Pro (page does not exist)">PIC Basic Pro</span></td>
<td><tt>\\</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="PL/I" title="PL/I">PL/I</a></td>
<td><tt>mod</tt></td>
<td>Divisor (ANSI PL/I)</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/PowerBuilder" title="PowerBuilder">PowerBuilder</a></td>
<td><tt>mod(x,y)</tt></td>
<td> ?</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/PowerShell" title="PowerShell" class="mw-redirect">PowerShell</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/OpenEdge_Advanced_Business_Language" title="OpenEdge Advanced Business Language">Progress</a></td>
<td><tt>modulo</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2">
<a href="http://en.m.wikipedia.org/wiki/Prolog" title="Prolog">Prolog</a> (ISO 1995)</td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>rem</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="Python_(programming_language)" title="Python (programming language)">Python</a></td>
<td><tt>%</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/RealBasic" title="RealBasic" class="mw-redirect">RealBasic</a></td>
<td><tt>MOD</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/R_(programming_language)" title="R (programming language)">R</a></td>
<td><tt>%%</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/RPG_(programming_language)" title="RPG (programming language)" class="mw-redirect">RPG</a></td>
<td><tt>%REM</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a></td>
<td><tt>%, modulo()</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>remainder()</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Scala_(programming_language)" title="Scala (programming language)">Scala</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a></td>
<td><tt>modulo</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>remainder</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2">
<a href="http://en.m.wikipedia.org/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> R<sup>6</sup>RS</td>
<td><tt>mod</tt></td>
<td>Always positive<sup id="cite_ref-r6rs_3-0" class="reference"><a href="Modulo_operation#cite_note-r6rs-3"><span>[</span>4<span>]</span></a></sup>
</td>
</tr>
<tr>
<td><tt>mod0</tt></td>
<td>Closest to zero<sup id="cite_ref-r6rs_3-1" class="reference"><a href="Modulo_operation#cite_note-r6rs-3"><span>[</span>4<span>]</span></a></sup>
</td>
</tr>
<tr>
<td rowspan="2"><a href="Seed7" title="Seed7">Seed7</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>rem</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/SenseTalk" title="SenseTalk">SenseTalk</a></td>
<td><tt>modulo</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>rem</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="Smalltalk" title="Smalltalk">Smalltalk</a></td>
<td><tt>\\</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td>
<a href="http://en.m.wikipedia.org/wiki/SQL" title="SQL">SQL</a> (<a href="http://en.m.wikipedia.org/wiki/SQL:1999" title="SQL:1999">SQL:1999</a>)</td>
<td><tt>mod(x,y)</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/Standard_ML" title="Standard ML">Standard ML</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>Int.rem</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Stata" title="Stata">Stata</a></td>
<td><tt>mod(x,y)</tt></td>
<td>Always positive</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Tcl" title="Tcl">Tcl</a></td>
<td><tt>%</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Torque_Game_Engine" title="Torque Game Engine" class="mw-redirect">Torque Game Engine</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Turing_(programming_language)" title="Turing (programming language)">Turing</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td>
<a href="http://en.m.wikipedia.org/wiki/Verilog" title="Verilog">Verilog</a> (2001)</td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/VHDL" title="VHDL">VHDL</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>rem</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Visual_Basic" title="Visual Basic">Visual Basic</a></td>
<td><tt>Mod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/X86_assembly_language" title="X86 assembly language">x86 Assembly</a></td>
<td><tt>IDIV</tt></td>
<td>Dividend</td>
</tr>
</table>
<table class="wikitable" style="float:right; clear:right; margin-left:1em; margin-right:0; width:30%;">
<caption>Floating-point modulo operators in various programming languages</caption>
<tr>
<th>Language</th>
<th>Operator</th>
<th abbr="Sign">Result has the same sign as</th>
</tr>
<tr>
<td>
<a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> (ISO 1990)</td>
<td><tt>fmod</tt></td>
<td> ?</td>
</tr>
<tr>
<td rowspan="2"><a href="C99" title="C99">C (ISO 1999)</a></td>
<td><tt>fmod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><tt>remainder</tt></td>
<td>Closest to zero</td>
</tr>
<tr>
<td>
<a href="C++" title="C++">C++</a> (ISO 1998)</td>
<td><tt>std::fmod</tt></td>
<td> ?</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/C%2B%2B11" title="C++11">C++ (ISO 2011)</a></td>
<td><tt>std::fmod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><tt>std::remainder</tt></td>
<td>Closest to zero</td>
</tr>
<tr>
<td><a href="C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a></td>
<td><tt>mod</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>rem</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="D_(programming_language)" title="D (programming language)">D</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/F_Sharp_(programming_language)" title="F Sharp (programming language)">F#</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="Fortran" title="Fortran">Fortran</a></td>
<td><tt>mod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><tt>modulo</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="Go_(programming_language)" title="Go (programming language)">Go</a></td>
<td><tt>math.Fmod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td>
<a href="http://en.m.wikipedia.org/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a> (GHC)</td>
<td><tt>Data.Fixed.mod'</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="Java_(programming_language)" title="Java (programming language)">Java</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="JavaScript" title="JavaScript">JavaScript</a></td>
<td><tt>%</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/OCaml" title="OCaml">OCaml</a></td>
<td><tt>mod_float</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="Perl" title="Perl">Perl</a></td>
<td><tt>POSIX::fmod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Perl6" title="Perl6" class="mw-redirect">Perl6</a></td>
<td><tt>%</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><a href="PHP" title="PHP">PHP</a></td>
<td><tt>fmod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="Python_(programming_language)" title="Python (programming language)">Python</a></td>
<td><tt>%</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>math.fmod</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a></td>
<td><tt>%, modulus()</tt></td>
<td>Divisor</td>
</tr>
<tr>
<td><tt>remainder()</tt></td>
<td>Dividend</td>
</tr>
<tr>
<td rowspan="2">
<a href="http://en.m.wikipedia.org/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> R<sup>6</sup>RS</td>
<td><tt>flmod</tt></td>
<td>Always positive</td>
</tr>
<tr>
<td><tt>flmod0</tt></td>
<td>Closest to zero</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Standard_ML" title="Standard ML">Standard ML</a></td>
<td><tt>Real.rem</tt></td>
<td>Dividend</td>
</tr>
</table>
<p>In <a href="http://en.m.wikipedia.org/wiki/Mathematics" title="Mathematics">mathematics</a> the result of the modulo operation is the remainder of the <a href="http://en.m.wikipedia.org/wiki/Euclidean_division" title="Euclidean division">Euclidean division</a>. However, other conventions are possible. Computers and calculators have various ways of storing and representing numbers; thus their definition of the modulo operation depends on the <a href="Programming_language" title="Programming language">programming language</a> and/or the underlying <a href="http://en.m.wikipedia.org/wiki/Computer_hardware" title="Computer hardware">hardware</a>.</p>
<p>In nearly all computing systems, the <a href="http://en.m.wikipedia.org/wiki/Quotient" title="Quotient">quotient</a> <span class="texhtml"><i>q</i></span> and the remainder <span class="texhtml"><i>r</i></span> satisfy</p>
<dl>
<dd><img class="tex" alt="q \in \mathbb{Z}" src="http://upload.wikimedia.org/math/4/7/d/47d11497f5a5058c8c5b37d03e4ae464.png"></dd>
<dd><img class="tex" alt="a = n \times q + r\," src="http://upload.wikimedia.org/math/b/0/5/b05f30e017c3322c956782799f650af8.png"></dd>
<dd><img class="tex" alt="\left| r \right| &lt; \left| n \right|." src="http://upload.wikimedia.org/math/0/a/b/0abf1a29a8b580c1bca03eea4c9c4756.png"></dd>
</dl>
<p>This means that, if the remainder is nonzero, there are two possible choices for the remainder, one negative and the other positive, and there are also two possible choices for the quotient. Usually, in number theory, the positive remainder is always chosen, but programming languages choose depending on the language and the signs of <i>a</i> and <i>n</i>.<sup class="reference plainlinks nourlexpansion" id="ref_2"><a class="external autonumber" href="http://en.wikipedia.org/wiki/Modulo_operation#endnote_2">[4]</a></sup> Pascal and Algol68 give a positive remainder (or 0) even for negative divisors, and some programming languages, such as C89, don't even define a result if either of <i>n</i> or <i>a</i> is negative. See the table for details. <i>a</i> modulo 0 is undefined in the majority of systems, although some do define it to be <i>a</i>.</p>
<p>Many implementations use <b>truncated division</b> where the quotient is defined by <a href="http://en.m.wikipedia.org/wiki/Truncation" title="Truncation">truncation</a> <i>q</i> = trunc(<i>a</i>/<i>n</i>), in other words it is the first integer in the direction of 0 from the exact rational quotient, and the remainder by <i>r</i>=<i>a</i> − <i>n</i> <i>q</i>. Informally speaking the quotient is "rounded towards zero", and the remainder therefore has the same sign as the dividend.</p>
<p><a href="http://en.m.wikipedia.org/wiki/Donald_Knuth" title="Donald Knuth">Knuth</a><sup id="cite_ref-4" class="reference"><a href="Modulo_operation#cite_note-4"><span>[</span>5<span>]</span></a></sup> described <b>floored division</b> where the quotient is defined by the <a href="http://en.m.wikipedia.org/wiki/Floor_function" title="Floor function" class="mw-redirect">floor function</a> <i>q</i>=floor(<i>a</i>/<i>n</i>) and the remainder <i>r</i> is</p>
<dl>
<dd><img class="tex" alt="r = a - nq = a - n \left\lfloor {a \over n} \right\rfloor." src="http://upload.wikimedia.org/math/c/f/4/cf474b4aac0321c0a7a662cc6d0bd385.png"></dd>
</dl>
<p>Here the quotient is always rounded downwards (even if it is already negative) and the remainder has the same sign as the divisor.</p>
<p>Raymond T. Boute<sup id="cite_ref-5" class="reference"><a href="Modulo_operation#cite_note-5"><span>[</span>6<span>]</span></a></sup> introduces the <b>Euclidean definition</b>, which is the one in which the remainder is always positive or 0, and is therefore consistent with the division algorithm (see <a href="http://en.m.wikipedia.org/wiki/Euclidean_division" title="Euclidean division">Euclidean division</a>). This definition is marked as "Always positive" in the table. Let <i>q</i> be the integer quotient of <i>a</i> and <i>n</i>, then:</p>
<dl>
<dd><img class="tex" alt="q \in \mathbb{Z}" src="http://upload.wikimedia.org/math/4/7/d/47d11497f5a5058c8c5b37d03e4ae464.png"></dd>
<dd><img class="tex" alt="a = n \times q + r\," src="http://upload.wikimedia.org/math/b/0/5/b05f30e017c3322c956782799f650af8.png"></dd>
<dd><img class="tex" alt="0 \leq r &lt; |n|." src="http://upload.wikimedia.org/math/f/b/b/fbb4fbe8a4bc08e64683d53f01bb522d.png"></dd>
</dl>
<p>Two corollaries are that</p>
<dl>
<dd><img class="tex" alt="n &gt; 0 \Rightarrow q = \left\lfloor \frac{a}{n} \right\rfloor" src="http://upload.wikimedia.org/math/0/7/9/0791c36f406dd443bc8457c466980195.png"></dd>
<dd><img class="tex" alt="n &lt; 0 \Rightarrow q = \left\lceil \frac{a}{n} \right\rceil," src="http://upload.wikimedia.org/math/b/5/4/b54c6d1e17d9d9413ab6172f2466d050.png"></dd>
</dl>
<p>or, equivalently,</p>
<dl>
<dd><img class="tex" alt="q = \sgn(n) \left\lfloor \frac{a}{\left|n\right|} \right\rfloor." src="http://upload.wikimedia.org/math/5/b/c/5bcc33e7f934d168a291717b779d95bc.png"></dd>
</dl>
<p>As described by Leijen,<sup id="cite_ref-6" class="reference"><a href="Modulo_operation#cite_note-6"><span>[</span>7<span>]</span></a></sup></p>
<dl>
<dd>Boute argues that Euclidean division is superior to the other ones in terms of regularity and useful mathematical properties, although floored division, promoted by Knuth, is also a good definition. Despite its widespread use, truncated division is shown to be inferior to the other definitions.</dd>
</dl>
<p>Common Lisp also defines round- and ceiling-division where the quotient is given by <span class="texhtml"><var>q</var>=round(<var>a</var>/<var>n</var>)</span>, <span class="texhtml">q=ceil(<var>a</var>/<var>n</var>)</span>. <a href="http://en.m.wikipedia.org/wiki/IEEE_754-1985" title="IEEE 754-1985">IEEE 754</a> defines a remainder function where the quotient is <span class="texhtml"><var>a</var>/<var>n</var></span> rounded according to the <a href="http://en.m.wikipedia.org/wiki/IEEE_754-1985#Rounding_floating-point_numbers" title="IEEE 754-1985">round to nearest convention</a>.</p>
<h2> <span class="mw-headline" id="Common_pitfalls">Common pitfalls</span>
</h2>
<p>When the result of a modulo operation has the sign of the dividend, it can sometimes lead to surprising mistakes:</p>
<p>For example, to test whether an integer is odd, one might be inclined to test whether the remainder by 2 is equal to 1:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cpp source-cpp">
<pre class="de1">
<span class="kw4">bool</span> is_odd<span class="br0">(</span><span class="kw4">int</span> n<span class="br0">)</span> <span class="br0">{</span>
    <span class="kw1">return</span> n <span class="sy2">%</span> <span class="nu0">2</span> <span class="sy1">==</span> <span class="nu0">1</span><span class="sy4">;</span>
<span class="br0">}</span>
</pre>
</div>
</div>
<p>But in a language where modulo has the sign of the dividend, that is incorrect, because when <i>n</i> (the dividend) is negative and odd, <i>n % 2</i> returns -1, and the function returns false.</p>
<p>One correct alternative is to test that it is not 0 (because remainder 0 is the same regardless of the signs):</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cpp source-cpp">
<pre class="de1">
<span class="kw4">bool</span> is_odd<span class="br0">(</span><span class="kw4">int</span> n<span class="br0">)</span> <span class="br0">{</span>
    <span class="kw1">return</span> n <span class="sy2">%</span> <span class="nu0">2</span> <span class="sy3">!</span><span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
<span class="br0">}</span>
</pre>
</div>
</div>
<h2> <span class="mw-headline" id="Modulo_operation_expression">Modulo operation expression</span>
</h2>
<p>Some calculators have a mod() function button, and many programming languages have a mod() function or similar, expressed as mod(<i>a</i>, <i>n</i>), for example. Some also support expressions that use "%", "mod", or "Mod" as a modulo or remainder <a href="Operator_(programming)" title="Operator (programming)" class="mw-redirect">operator</a>, such as</p>
<dl>
<dd><code>a % n</code></dd>
</dl>
<p>or</p>
<dl>
<dd><code>a mod n</code></dd>
</dl>
<p>or equivalent, for environments lacking a mod() function</p>
<dl>
<dd>
<code>a - (n * int(a/n))</code>.</dd>
</dl>
<h2> <span class="mw-headline" id="Performance_issues">Performance issues</span>
</h2>
<p>Modulo operations might be implemented such that a division with a remainder is calculated each time. For special cases, there are faster alternatives on some hardware. For example, the modulo of powers of 2 can alternatively be expressed as a <a href="Bitwise_operation" title="Bitwise operation">bitwise AND</a> operation:</p>
<dl>
<dd>
<code>x % 2<sup>n</sup> == x &amp; (2<sup>n</sup> - 1)</code>.</dd>
</dl>
<p>Examples (assuming x is a positive integer):</p>
<dl>
<dd><code>x % 2 == x &amp; 1</code></dd>
<dd><code>x % 4 == x &amp; 3</code></dd>
<dd>
<code>x % 8 == x &amp; 7</code>.</dd>
</dl>
<p>In devices and software that implement bitwise operations more efficiently than modulo, these alternative forms can result in faster calculations. <sup id="cite_ref-7" class="reference"><a href="Modulo_operation#cite_note-7"><span>[</span>8<span>]</span></a></sup></p>
<p><a href="http://en.m.wikipedia.org/wiki/Compiler_optimization" title="Compiler optimization" class="mw-redirect">Optimizing</a> <a href="Compiler" title="Compiler">compilers</a> may recognize expressions of the form <code>expression % constant</code> where <code>constant</code> is a power of two and automatically implement them as <code>expression &amp; (constant-1)</code>. This can allow the programmer to write clearer code without compromising performance. (Note: This will not work for the languages whose modulo have the sign of the dividend (including C), because if the dividend is negative, the modulo will be negative; however, <code>expression &amp; (constant-1)</code> will always produce a positive result. So special treatment has to be made when the dividend can be negative.)</p>
<p>In some compilers, the modulo operation is implemented as <code>mod(a, n) = a - n * floor(a / n)</code>. For example, <code>mod(7, 3) = 7 - 3 * floor(7 / 3) = 7 - 3 * floor(2.33) = 7 - 3 * 2 = 7 - 6 = 1.</code></p>
<h2> <span class="mw-headline" id="See_also">See also</span>
</h2>
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Modulo_(disambiguation)" title="Modulo (disambiguation)">Modulo (disambiguation)</a> and <a href="http://en.m.wikipedia.org/wiki/Modulo_(jargon)" title="Modulo (jargon)">modulo (jargon)</a> – many uses of the word "modulo", all of which grew out of <a href="http://en.m.wikipedia.org/wiki/Carl_F._Gauss" title="Carl F. Gauss" class="mw-redirect">Carl F. Gauss</a>'s introduction of <i><a href="http://en.m.wikipedia.org/wiki/Modular_arithmetic" title="Modular arithmetic">modular arithmetic</a></i> in 1801.</li>
</ul>
<h2> <span class="mw-headline" id="Notes">Notes</span>
</h2>
<ul>
<li>
<span class="citation wikicite" id="endnote_1"><b><a href="Modulo_operation#ref_1">^</a></b></span> Perl usually uses arithmetic modulo operator that is machine-independent. See the <a rel="nofollow" class="external text" href="http://perldoc.perl.org/perlop.html#Multiplicative-Operators">Perl documentation</a> for exceptions and examples.</li>
<li>
<span class="citation wikicite" id="endnote_2"><b><a href="Modulo_operation#ref_2">^</a></b></span> Mathematically, these two choices are but two of the infinite number of choices available for <a href="http://en.m.wikipedia.org/wiki/Remainder#The_inequality_satisfied_by_the_remainder" title="Remainder">the inequality satisfied by a remainder</a>.</li>
<li>
<span class="citation wikicite" id="endnote_3"><b><a href="Modulo_operation#ref_3">^</a></b></span> Divisor must be positive, otherwise not defined.</li>
<li>
<span class="citation wikicite" id="endnote_4"><b><a href="Modulo_operation#ref_4">^</a></b></span> As implemented in ACUCOBOL, Micro Focus COBOL, and possibly others.</li>
</ul>
<h2> <span class="mw-headline" id="References">References</span>
</h2>
<ol class="references">
<li id="cite_note-C99-0">
<span class="mw-cite-backlink"><b><a href="Modulo_operation#cite_ref-C99_0-0">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf">http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf</a>, section 6.5.5</span>
</li>
<li id="cite_note-1">
<span class="mw-cite-backlink"><b><a href="Modulo_operation#cite_ref-1">^</a></b></span> <span class="reference-text"><span class="citation Journal"><i>ISO/IEC 14882:2003 : Programming languages -- C++</i>. 5.6.4: <a href="International_Organization_for_Standardization" title="International Organization for Standardization">ISO</a>, <a href="http://en.m.wikipedia.org/wiki/International_Electrotechnical_Commission" title="International Electrotechnical Commission">IEC</a>. 2003</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=ISO%2FIEC+14882%3A2003+%3A+Programming+languages+--+C%2B%2B&amp;rft.date=2003&amp;rft.place=5.6.4&amp;rft.pub=%5B%5BInternational+Organization+for+Standardization%7CISO%5D%5D%2C+%5B%5BInternational+Electrotechnical+Commission%7CIEC%5D%5D&amp;rfr_id=info:sid/en.wikipedia.org:Modulo_operation"><span style="display: none;"> </span></span>. "the binary % operator yields the remainder from the division of the first expression by the second. .... If both operands are nonnegative then the remainder is nonnegative; if not, the sign of the remainder is implementation-defined".</span>
</li>
<li id="cite_note-2">
<span class="mw-cite-backlink"><b><a href="Modulo_operation#cite_ref-2">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://www.digitalmars.com/d/2.0/expression.html#MulExpression">"Expressions"</a>. <i>D Programming Language 2.0</i>. Digital Mars<span class="printonly">. <a rel="nofollow" class="external free" href="http://www.digitalmars.com/d/2.0/expression.html#MulExpression">http://www.digitalmars.com/d/2.0/expression.html#MulExpression</a></span><span class="reference-accessdate">. Retrieved 29 July 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Expressions&amp;rft.atitle=D+Programming+Language+2.0&amp;rft.pub=Digital+Mars&amp;rft_id=http%3A%2F%2Fwww.digitalmars.com%2Fd%2F2.0%2Fexpression.html%23MulExpression&amp;rfr_id=info:sid/en.wikipedia.org:Modulo_operation"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-r6rs-3">
<span class="mw-cite-backlink">^ <a href="Modulo_operation#cite_ref-r6rs_3-0"><sup><i><b>a</b></i></sup></a> <a href="Modulo_operation#cite_ref-r6rs_3-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.r6rs.org/final/html/r6rs/r6rs-Z-H-14.html#node_sec_11.7.3.1">http://www.r6rs.org/final/html/r6rs/r6rs-Z-H-14.html#node_sec_11.7.3.1</a></span>
</li>
<li id="cite_note-4">
<span class="mw-cite-backlink"><b><a href="Modulo_operation#cite_ref-4">^</a></b></span> <span class="reference-text"><span class="citation book">Knuth, Donald. E. (1972). <i>The Art of Computer Programming</i>. Addison-Wesley.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Art+of+Computer+Programming&amp;rft.aulast=Knuth&amp;rft.aufirst=Donald.+E.&amp;rft.au=Knuth%2C%26%2332%3BDonald.+E.&amp;rft.date=1972&amp;rft.pub=Addison-Wesley&amp;rfr_id=info:sid/en.wikipedia.org:Modulo_operation"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-5">
<span class="mw-cite-backlink"><b><a href="Modulo_operation#cite_ref-5">^</a></b></span> <span class="reference-text"><span class="citation Journal">Boute, Raymond T. (April 1992). <a rel="nofollow" class="external text" href="http://portal.acm.org/citation.cfm?id=128862&amp;coll=portal&amp;dl=ACM">"The Euclidean definition of the functions div and mod"</a>. <i>ACM Transactions on Programming Languages and Systems (TOPLAS)</i> (ACM Press (New York, NY, USA)) <b>14</b> (2): 127–144. <a href="Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1145%2F128861.128862">10.1145/128861.128862</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://portal.acm.org/citation.cfm?id=128862&amp;coll=portal&amp;dl=ACM">http://portal.acm.org/citation.cfm?id=128862&amp;coll=portal&amp;dl=ACM</a></span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=The+Euclidean+definition+of+the+functions+div+and+mod&amp;rft.jtitle=ACM+Transactions+on+Programming+Languages+and+Systems+%28TOPLAS%29&amp;rft.aulast=Boute&amp;rft.aufirst=Raymond+T.&amp;rft.au=Boute%2C%26%2332%3BRaymond+T.&amp;rft.date=April+1992&amp;rft.volume=14&amp;rft.issue=2&amp;rft.pages=127%E2%80%93144&amp;rft.pub=ACM+Press+%28New+York%2C+NY%2C+USA%29&amp;rft_id=info:doi/10.1145%2F128861.128862&amp;rft_id=http%3A%2F%2Fportal.acm.org%2Fcitation.cfm%3Fid%3D128862%26coll%3Dportal%26dl%3DACM&amp;rfr_id=info:sid/en.wikipedia.org:Modulo_operation"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-6">
<span class="mw-cite-backlink"><b><a href="Modulo_operation#cite_ref-6">^</a></b></span> <span class="reference-text"><span class="citation web">Leijen, Daan (December 3, 2001). <a rel="nofollow" class="external text" href="http://www.cs.uu.nl/~daan/download/papers/divmodnote.pdf">"Division and Modulus for Computer Scientists"</a> (PDF)<span class="printonly">. <a rel="nofollow" class="external free" href="http://www.cs.uu.nl/~daan/download/papers/divmodnote.pdf">http://www.cs.uu.nl/~daan/download/papers/divmodnote.pdf</a></span><span class="reference-accessdate">. Retrieved 2006-08-27</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Division+and+Modulus+for+Computer+Scientists&amp;rft.atitle=&amp;rft.aulast=Leijen&amp;rft.aufirst=Daan&amp;rft.au=Leijen%2C%26%2332%3BDaan&amp;rft.date=December+3%2C+2001&amp;rft_id=http%3A%2F%2Fwww.cs.uu.nl%2F%7Edaan%2Fdownload%2Fpapers%2Fdivmodnote.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Modulo_operation"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-7">
<span class="mw-cite-backlink"><b><a href="Modulo_operation#cite_ref-7">^</a></b></span> <span class="reference-text"><span class="citation web">Horvath, Adam (July 5, 2012). <a rel="nofollow" class="external text" href="http://blog.teamleadnet.com/2012/07/faster-division-and-modulo-operation.html">"Faster division and modulo operation - the power of two"</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://blog.teamleadnet.com/2012/07/faster-division-and-modulo-operation.html">http://blog.teamleadnet.com/2012/07/faster-division-and-modulo-operation.html</a></span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Faster+division+and+modulo+operation+-+the+power+of+two&amp;rft.atitle=&amp;rft.aulast=Horvath&amp;rft.aufirst=Adam&amp;rft.au=Horvath%2C%26%2332%3BAdam&amp;rft.date=July+5%2C+2012&amp;rft_id=http%3A%2F%2Fblog.teamleadnet.com%2F2012%2F07%2Ffaster-division-and-modulo-operation.html&amp;rfr_id=info:sid/en.wikipedia.org:Modulo_operation"><span style="display: none;"> </span></span></span>
</li>
</ol>
<h2> <span class="mw-headline" id="External_links">External links</span>
</h2>





						<div class="section" id="mw-mf-language-section">
				<h2 id="section_language" class="section_heading">Read in another language</h2>
				<div id="content_language" class="content_block">
					<p>This article is available in 13 languages</p>
					<ul id="mw-mf-language-selection"><li><a href="http://da.m.wikipedia.org/wiki/Modulo" lang="da" hreflang="da">dansk</a></li><li><a href="http://de.m.wikipedia.org/wiki/Division_mit_Rest#Modulo" lang="de" hreflang="de">Deutsch</a></li><li><a href="http://fr.m.wikipedia.org/wiki/Modulo_(informatique)" lang="fr" hreflang="fr">français</a></li><li><a href="http://id.m.wikipedia.org/wiki/Operasi_modulus" lang="id" hreflang="id">Bahasa Indonesia</a></li><li><a href="http://is.m.wikipedia.org/wiki/M%C3%B3dular" lang="is" hreflang="is">íslenska</a></li><li><a href="http://no.m.wikipedia.org/wiki/Modulo" lang="no" hreflang="no">norsk (bokmål)‎</a></li><li><a href="http://pl.m.wikipedia.org/wiki/Modulo" lang="pl" hreflang="pl">polski</a></li><li><a href="http://pt.m.wikipedia.org/wiki/Opera%C3%A7%C3%A3o_m%C3%B3dulo" lang="pt" hreflang="pt">português</a></li><li><a href="http://ro.m.wikipedia.org/wiki/Modulo" lang="ro" hreflang="ro">română</a></li><li><a href="http://ru.m.wikipedia.org/wiki/%D0%94%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_%D1%81_%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%BE%D0%BC" lang="ru" hreflang="ru">русский</a></li><li><a href="http://sl.m.wikipedia.org/wiki/Modulo" lang="sl" hreflang="sl">slovenščina</a></li><li><a href="http://tr.m.wikipedia.org/wiki/Modulo_i%C5%9Flemi" lang="tr" hreflang="tr">Türkçe</a></li><li><a href="http://zh.m.wikipedia.org/wiki/%E6%A8%A1%E9%99%A4" lang="zh" hreflang="zh">中文</a></li></ul>
				</div>
			</div>			</div><!-- close #content_wrapper -->
			<div id="footer">
			<h2 class="section_heading" id="section_footer">
		<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/logo-copyright-en.png" class="license" alt="Wikipedia ®" />	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Modulo_operation&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Modulo_operation&amp;action=history">contributors</a> like you<br>
				Content available under <a href="Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>				<span>| <a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span>
			</li>
		</ul>
		<ul class="links">
						<li>
			<a href='http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Modulo+operation&amp;feedbacksource=MobileFrontend'>
				Contact Wikipedia			</a>
			</li><li>
						<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div><!-- close footer.div / #content_footer -->
	</div><!-- close #footer -->
					</div><!-- close #mw-mf-page-center -->
		</div><!-- close #mw-mf-viewport -->
		
					</body>
	</html>