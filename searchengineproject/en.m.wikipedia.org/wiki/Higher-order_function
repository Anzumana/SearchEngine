<!doctype html>
	<html lang="en" dir="ltr" class="">
	<head>
		<title>Higher-order function - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="robots" content="noindex,nofollow"/>		<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile%7Cmobile.production-only%2Cproduction-jquery%7Cmobile.device.default&amp;only=styles&amp;skin=mobile&amp;version=1352163471&amp;*" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile.site&amp;only=styles&amp;skin=mobile&amp;*" />		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />		<script type="text/javascript">
			var _mwStart = +new Date;
			window._evq = window._evq || [];
			if ( typeof console === 'undefined' ) {
				console = { log: function() {} };
			}
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"mobile-frontend-watchlist-add":"Added $1 to your watchlist","mobile-frontend-watchlist-removed":"Removed $1 from your watchlist","mobile-frontend-watchlist-view":"View your watchlist","mobile-frontend-ajax-random-heading":"Locating knowledge...","mobile-frontend-ajax-random-quote":"Intellectual growth should commence at birth and cease only at death","mobile-frontend-ajax-random-quote-author":"Albert Einstein","mobile-frontend-ajax-random-question":"Read this article?","mobile-frontend-ajax-random-yes":"Yes","mobile-frontend-ajax-random-retry":"Try again","mobile-frontend-ajax-page-loading":"Loading $1","mobile-frontend-page-saving":"Saving $1","mobile-frontend-ajax-page-error":"Whoops! Something went wrong there. Please try refreshing your browser window.","mobile-frontend-meta-data-issues":"This article has some issues","mobile-frontend-meta-data-issues-header":"Issues","expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-footer":"<a href="http://en.m.wikipedia.org/wiki/\&quot;\/wiki\/Special:MobileOptions\/Language\&quot;">Note: This article may not be written in your preferred language. You can see which languages Wikipedia supports by clicking here.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"action":"","authenticated":false,"scriptPath":"\/w","shim":"\/\/bits.wikimedia.org\/static-1.21wmf3\/extensions\/MobileFrontend\/stylesheets\/common\/images\/blank.gif","pageUrl":"\/wiki\/$1","beta":null,"title":"Higher-order function","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			function _mwLogEvent( data, additionalInformation ) {
				var timestamp = + new Date;
				var ev = { event_id: 'mobile', delta: timestamp - _mwStart, data: data, beta: mwMobileFrontendConfig.settings.beta,
					session: _mwStart, page: mwMobileFrontendConfig.settings.title, info: additionalInformation || '' };
				_evq.push( ev );
				console.log( typeof JSON === 'undefined' ? ev : JSON.stringify( ev ) );
			}
		</script>
				<link rel="canonical" href="http://en.wikipedia.org/wiki/Higher-order_function" >
	</head>
	<body class="mobile live">
				<div id="mw-mf-viewport">
		<div id="mw-mf-page-left">
		<div id='mw-mf-content-left'>
		<ul id="mw-mf-menu-main">
			<li class='icon'><a href="Main_Page"
				title="Home">
				Home</a></li>
			<li class='icon2'><a href="Special:Random#mw-mf-page-left" id="randomButton"
				title="Random"
				class="button">Random</a></li>
						<li class='icon5'>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions&amp;returnto=Higher-order+function"
					title="Settings">
				Settings				</a>
			</li>
					</ul>
		</div>
		</div>
		<div id='mw-mf-page-center'>
									<div id="mw-mf-header">
		<a title="Open main menu" href="Special:MobileMenu#mw-mf-page-left" id="mw-mf-main-menu-button">				<img alt="menu"
				src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif">
		</a>			<form id="mw-mf-searchForm" action="http://en.m.wikipedia.org/w/index.php" class="search_bar" method="get">
			<input type="hidden" value="Special:Search" name="title" />
			<div id="mw-mf-sq" class="divclearable">
				<input type="search" name="search" id="mw-mf-search" size="22" value="" autocomplete="off" maxlength="1024" class="search"
					placeholder="Search Wikipedia"
					/>
				<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear"/>
				<input class='searchSubmit' type="submit" value="Go">
			</div>
		</form>
	</div>
	<div id="results"></div>
		<div class='show ' id='content_wrapper'>
						<h1 id="firstHeading">Higher-order function</h1>			
<p>In <a href="http://en.m.wikipedia.org/wiki/Mathematics" title="Mathematics">mathematics</a> and <a href="http://en.m.wikipedia.org/wiki/Computer_science" title="Computer science">computer science</a>, a <b>higher-order function</b> (also <b>functional form</b>, <b>functional</b> or <b>functor</b>) is a <a href="http://en.m.wikipedia.org/wiki/Function_(mathematics)" title="Function (mathematics)">function</a> that does at least one of the following:</p>
<ul>
<li>take one or more functions as an input</li>
<li>output a function</li>
</ul>
<p>All other functions are <i>first order functions</i>. In mathematics higher-order functions are also known as <i><a href="http://en.m.wikipedia.org/wiki/Operator_(mathematics)" title="Operator (mathematics)">operators</a></i> or <i><a href="http://en.m.wikipedia.org/wiki/Functional_(mathematics)" title="Functional (mathematics)">functionals</a></i>. The <a href="http://en.m.wikipedia.org/wiki/Derivative" title="Derivative">derivative</a> in <a href="http://en.m.wikipedia.org/wiki/Calculus" title="Calculus">calculus</a> is a common example, since it maps a function to another function.</p>
<p>In the <a href="http://en.m.wikipedia.org/wiki/Lambda_calculus" title="Lambda calculus">untyped lambda calculus</a>, all functions are higher-order; in a <a href="http://en.m.wikipedia.org/wiki/Typed_lambda_calculus" title="Typed lambda calculus">typed lambda calculus</a>, from which most <a href="Functional_programming" title="Functional programming">functional programming</a> languages are derived, higher-order functions are values with types of the form <img class="tex" alt="(\tau_1\to\tau_2)\to\tau_3" src="http://upload.wikimedia.org/math/c/a/6/ca67e9af1391034927199238107e65a0.png">.</p>
<p>The <code><a href="http://en.m.wikipedia.org/wiki/Map_(higher-order_function)" title="Map (higher-order function)">map</a></code> function found in many functional programming languages is one example of a higher-order function. It takes as arguments a function <i>f</i> and a list of elements, and as result, returns a new list with <i>f</i> applied to each element from the list. Another very common kind of higher-order function in those languages which support them are sorting functions which take a comparison function as a parameter, allowing the programmer to separate the sorting algorithm from the comparisons of the items being sorted. The <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> standard <a href="http://en.m.wikipedia.org/wiki/Function_(computer_science)" title="Function (computer science)" class="mw-redirect">function</a> <code>qsort</code> is an example of this.</p>
<p>Other examples of higher-order functions include <a href="http://en.m.wikipedia.org/wiki/Fold_(higher-order_function)" title="Fold (higher-order function)">fold</a>, <a href="http://en.m.wikipedia.org/wiki/Function_composition_(computer_science)" title="Function composition (computer science)">function composition</a>, <a href="http://en.m.wikipedia.org/wiki/Integral" title="Integral">integration</a>, and the constant-function function λ<i>x</i>.λ<i>y</i>.<i>x</i>.</p>
<h2> <span class="mw-headline" id="Example">Example</span>
</h2>
<p><i>The following examples are not intended to compare and contrast programming languages, since each program performs a different task. Also, the idea of a "scripting language" is beyond the scope of this article.</i></p>
<p>This <a href="Python_(programming_language)" title="Python (programming language)">Python</a> program contains the higher-order function g() which takes a function as its first argument and returns a number. This example prints 100 ( <i>g(f,7)=</i> (7+3)×(7+3) ).</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">def</span> f<span class="br0">(</span>x<span class="br0">)</span>:
    <span class="kw1">return</span> x + <span class="nu0">3</span>
 
<span class="kw1">def</span> g<span class="br0">(</span>function<span class="sy0">,</span> x<span class="br0">)</span>:
    <span class="kw1">return</span> function<span class="br0">(</span>x<span class="br0">)</span> * function<span class="br0">(</span>x<span class="br0">)</span>
 
<span class="kw1">print</span> g<span class="br0">(</span>f<span class="sy0">,</span> <span class="nu0">7</span><span class="br0">)</span>
</pre>
</div>
</div>
<p>In this <a href="http://en.m.wikipedia.org/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> example the higher-order function g() takes a number and returns a function. The function a() takes a number and returns that number plus 7. (e.g. a(3)=10).</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="scheme source-scheme">
<pre class="de1">
<span class="br0">(</span><span class="kw1">define</span> <span class="br0">(</span>g x<span class="br0">)</span>
  <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="sy0">+</span> x y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="br0">(</span><span class="kw1">define</span> a <span class="br0">(</span>g <span class="nu0">7</span><span class="br0">)</span><span class="br0">)</span>
<span class="br0">(</span><span class="kw1">display</span> <span class="br0">(</span>a <span class="nu0">3</span><span class="br0">)</span><span class="br0">)</span>
</pre>
</div>
</div>
<p>In this <a href="http://en.m.wikipedia.org/wiki/Erlang_(programming_language)" title="Erlang (programming language)">Erlang</a> example the higher-order function or_else/2 takes a list of functions (Fs) and argument (X). It evaluates the function F with the argument X as argument. If the function F returns false then the next function in Fs will be evaluated. If the function F returns {false,Y} then the next function in Fs with argument Y will be evaluated. If the function F returns R the higher-order function or_else/2 will return R. Note that X, Y and R can be functions. Example returns false.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="erlang source-erlang">
<pre class="de1">
<span class="re3">or_else</span><span class="br0">(</span><span class="br0">[</span><span class="br0">]</span><span class="sy1">,</span> <span class="re5">_</span><span class="br0">)</span> <span class="sy1">-&gt;</span> <span class="me1">false</span><span class="sy1">;</span>
<span class="re3">or_else</span><span class="br0">(</span><span class="br0">[</span><span class="re5">F</span> | <span class="re5">Fs</span><span class="br0">]</span><span class="sy1">,</span> <span class="re5">X</span><span class="br0">)</span> <span class="sy1">-&gt;</span> <span class="re3">or_else</span><span class="br0">(</span><span class="re5">Fs</span><span class="sy1">,</span> <span class="re5">X</span><span class="sy1">,</span> <span class="re5">F</span><span class="br0">(</span><span class="re5">X</span><span class="br0">)</span><span class="br0">)</span><span class="sy1">.</span>
 
<span class="re3">or_else</span><span class="br0">(</span><span class="re5">Fs</span><span class="sy1">,</span> <span class="re5">X</span><span class="sy1">,</span> false<span class="br0">)</span> <span class="sy1">-&gt;</span> <span class="re3">or_else</span><span class="br0">(</span><span class="re5">Fs</span><span class="sy1">,</span> <span class="re5">X</span><span class="br0">)</span><span class="sy1">;</span>
<span class="re3">or_else</span><span class="br0">(</span><span class="re5">Fs</span><span class="sy1">,</span> <span class="re5">_</span><span class="sy1">,</span> <span class="br0">{</span>false<span class="sy1">,</span> <span class="re5">Y</span><span class="br0">}</span><span class="br0">)</span> <span class="sy1">-&gt;</span> <span class="re3">or_else</span><span class="br0">(</span><span class="re5">Fs</span><span class="sy1">,</span> <span class="re5">Y</span><span class="br0">)</span><span class="sy1">;</span>
<span class="re3">or_else</span><span class="br0">(</span><span class="re5">_</span><span class="sy1">,</span> <span class="re5">_</span><span class="sy1">,</span> <span class="re5">R</span><span class="br0">)</span> <span class="sy1">-&gt;</span> <span class="re5">R</span><span class="sy1">.</span>
 
<span class="re3">or_else</span><span class="br0">(</span><span class="br0">[</span><span class="kw1">fun</span> <span class="kw5">erlang</span>:<span class="kw4">is_integer</span><span class="sy3">/</span><span class="nu0">1</span><span class="sy1">,</span> <span class="kw1">fun</span> <span class="kw5">erlang</span>:<span class="kw4">is_atom</span><span class="sy3">/</span><span class="nu0">1</span><span class="sy1">,</span> <span class="kw1">fun</span> <span class="kw5">erlang</span>:<span class="kw4">is_list</span><span class="sy3">/</span><span class="nu0">1</span><span class="br0">]</span><span class="sy1">,</span><span class="nu0">3.23</span><span class="br0">)</span><span class="sy1">.</span>
</pre>
</div>
</div>
<p>In this <a href="JavaScript" title="JavaScript">JavaScript</a> example the higher-order function ArrayForEach takes an array and a method in as arguments and calls the method on every element in the array.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="javascript source-javascript">
<pre class="de1">
<span class="kw1">function</span> ArrayForEach<span class="br0">(</span>array<span class="sy0">,</span> func<span class="br0">)</span> <span class="br0">{</span>
  <span class="kw1">var</span> i<span class="sy0">;</span>
  <span class="kw1">for</span><span class="br0">(</span>i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> array.<span class="me1">length</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span> <span class="br0">{</span>
    <span class="kw1">if</span><span class="br0">(</span>i <span class="kw1">in</span> array<span class="br0">)</span> <span class="br0">{</span>
      func<span class="br0">(</span>array<span class="br0">[</span>i<span class="br0">]</span><span class="br0">)</span><span class="sy0">;</span>
    <span class="br0">}</span>
  <span class="br0">}</span>
<span class="br0">}</span>
<span class="kw1">function</span> log<span class="br0">(</span>msg<span class="br0">)</span> <span class="br0">{</span>
  console.<span class="me1">log</span><span class="br0">(</span>msg<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
ArrayForEach<span class="br0">(</span><span class="br0">[</span><span class="nu0">1</span><span class="sy0">,</span><span class="nu0">2</span><span class="sy0">,</span><span class="nu0">3</span><span class="sy0">,</span><span class="nu0">4</span><span class="sy0">,</span><span class="nu0">5</span><span class="br0">]</span><span class="sy0">,</span>log<span class="br0">)</span><span class="sy0">;</span>
</pre>
</div>
</div>
<h2> <span class="mw-headline" id="Alternatives">Alternatives</span>
</h2>
<p>Programming languages that support <a href="Function_pointer" title="Function pointer">function pointers</a> as function parameters can emulate higher-order functions. Such languages include the <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> and <a href="C++" title="C++">C++</a> family. An example is the following C code which computes an approximation of the integral of an arbitrary function:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="co1">// Compute the integral of f() within the interval [a,b]</span>
<span class="kw4">double</span> integral<span class="br0">(</span><span class="kw4">double</span> <span class="br0">(</span><span class="sy0">*</span>f<span class="br0">)</span><span class="br0">(</span><span class="kw4">double</span> x<span class="br0">)</span><span class="sy0">,</span> <span class="kw4">double</span> a<span class="sy0">,</span> <span class="kw4">double</span> b<span class="br0">)</span>
<span class="br0">{</span>
    <span class="kw4">double</span>  sum<span class="sy0">,</span> dt<span class="sy0">;</span>
    <span class="kw4">int</span>     i<span class="sy0">;</span>
 
    <span class="co1">// Numerical integration: 0th order approximation</span>
    sum <span class="sy0">=</span> <span class="nu16">0.0</span><span class="sy0">;</span>
    dt <span class="sy0">=</span> <span class="br0">(</span>b <span class="sy0">-</span> a<span class="br0">)</span> <span class="sy0">/</span> <span class="nu16">100.0</span><span class="sy0">;</span>
    <span class="kw1">for</span> <span class="br0">(</span>i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>  i <span class="sy0">&lt;</span> <span class="nu0">100</span><span class="sy0">;</span>  i<span class="sy0">++</span><span class="br0">)</span>
        sum <span class="sy0">+=</span> <span class="br0">(</span><span class="sy0">*</span>f<span class="br0">)</span><span class="br0">(</span>i <span class="sy0">*</span> dt <span class="sy0">+</span> a<span class="br0">)</span> <span class="sy0">*</span> dt<span class="sy0">;</span>
 
    <span class="kw1">return</span> sum<span class="sy0">;</span>
<span class="br0">}</span>
</pre>
</div>
</div>
<p>Another example is the function <a href="Qsort" title="Qsort" class="mw-redirect">qsort</a> from C standard library.</p>
<p>In other <a href="Imperative_programming" title="Imperative programming">imperative programming</a> languages it is possible to achieve some of the same algorithmic results as are obtained through use of higher-order functions by dynamically executing code (sometimes called "Eval" or "Execute" operations) in the scope of evaluation. There can be significant drawbacks to this approach:</p>
<ul>
<li>The argument code to be executed is usually not <a href="Type_system#Static_typing" title="Type system">statically typed</a>; these languages generally rely on <a href="Type_system#Dynamic_typing" title="Type system">dynamic typing</a> to determine the well-formedness and safety of the code to be executed.</li>
<li>The argument is usually provided as a string, the value of which may not be known until run-time. This string must either be compiled during program execution (using <a href="http://en.m.wikipedia.org/wiki/Just-in-time_compilation" title="Just-in-time compilation">just-in-time compilation</a>) or evaluated by <a href="http://en.m.wikipedia.org/wiki/Interpreter_(computing)" title="Interpreter (computing)">interpretation</a>, causing some added overhead at run-time, and usually generating less efficient code.</li>
</ul>
<p><a href="Macro_(computer_science)" title="Macro (computer science)">macros</a> can also be used to achieve some of the effects of higher order functions. However, macros cannot easily avoid the problem of variable capture; they may also result in large amounts of duplicated code, which can be more difficult for a compiler to optimize. Macros are generally not strongly typed, although they may produce strongly typed code.</p>
<p>In <a href="Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a> languages that do not support higher-order functions, <a href="http://en.m.wikipedia.org/wiki/Object_(computer_science)" title="Object (computer science)">objects</a> can be an effective substitute. An object's <a href="http://en.m.wikipedia.org/wiki/Method_(computer_science)" title="Method (computer science)" class="mw-redirect">methods</a> act in essence like functions, and a method may accept objects as parameters and produce objects as return values. Objects often carry added run-time overhead compared to pure functions, however, and added <a href="http://en.m.wikipedia.org/wiki/Boilerplate_code" title="Boilerplate code">boilerplate code</a> for defining and instantiating an object and its method(s). Languages that permit <a href="http://en.m.wikipedia.org/wiki/Stack-based_memory_allocation" title="Stack-based memory allocation">stack</a>-based (versus <a href="Dynamic_memory_allocation" title="Dynamic memory allocation" class="mw-redirect">heap</a>-based) objects or <a href="http://en.m.wikipedia.org/wiki/Structs" title="Structs" class="mw-redirect">structs</a> can provide more flexibility with this method.</p>
<p>An example of using a simple stack based record in <a href="http://en.m.wikipedia.org/wiki/Free_Pascal" title="Free Pascal">Free Pascal</a> with a function that returns a function:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="pascal source-pascal">
<pre class="de1">
<span class="kw1">program</span> example<span class="sy1">;</span> 
 
<span class="kw1">type</span> 
  int <span class="sy3">=</span> <span class="kw4">integer</span><span class="sy1">;</span>
  Txy <span class="sy3">=</span> <span class="kw4">record</span> x<span class="sy1">,</span> y<span class="sy1">:</span> int<span class="sy1">;</span> <span class="kw1">end</span><span class="sy1">;</span>
  Tf <span class="sy3">=</span> <span class="kw1">function</span> <span class="br0">(</span>xy<span class="sy1">:</span> Txy<span class="br0">)</span><span class="sy1">:</span> int<span class="sy1">;</span>
 
<span class="kw1">function</span> f<span class="br0">(</span>xy<span class="sy1">:</span> Txy<span class="br0">)</span><span class="sy1">:</span> int<span class="sy1">;</span> 
<span class="kw1">begin</span> 
  Result <span class="sy1">:</span><span class="sy3">=</span> xy<span class="sy1">.</span><span class="me1">y</span> <span class="sy3">+</span> xy<span class="sy1">.</span><span class="me1">x</span><span class="sy1">;</span> 
<span class="kw1">end</span><span class="sy1">;</span>
 
<span class="kw1">function</span> g<span class="br0">(</span>func<span class="sy1">:</span> Tf<span class="br0">)</span><span class="sy1">:</span> Tf<span class="sy1">;</span> 
<span class="kw1">begin</span> 
  result <span class="sy1">:</span><span class="sy3">=</span> func<span class="sy1">;</span> 
<span class="kw1">end</span><span class="sy1">;</span>
 
<span class="kw1">var</span> 
  a<span class="sy1">:</span> Tf<span class="sy1">;</span>
  xy<span class="sy1">:</span> Txy <span class="sy3">=</span> <span class="br0">(</span>x<span class="sy1">:</span> <span class="nu0">3</span><span class="sy1">;</span> y<span class="sy1">:</span> <span class="nu0">7</span><span class="br0">)</span><span class="sy1">;</span>
 
<span class="kw1">begin</span>  
  a <span class="sy1">:</span><span class="sy3">=</span> g<span class="br0">(</span><span class="sy2">@</span>f<span class="br0">)</span><span class="sy1">;</span>      <span class="co1">// return a function to "a"</span>
  <span class="kw3">writeln</span><span class="br0">(</span>a<span class="br0">(</span>xy<span class="br0">)</span><span class="br0">)</span><span class="sy1">;</span> <span class="co1">// prints 10</span>
<span class="kw1">end</span><span class="sy1">.</span>
</pre>
</div>
</div>
<p>The function <code>a()</code> takes a <code>Txy</code> record as input and returns the integer value of the sum of the record's <code>x</code> and <code>y</code> fields (3 + 7).</p>
<h2> <span class="mw-headline" id="See_also">See also</span>
</h2>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/First-class_function" title="First-class function">First-class function</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Combinatory_logic" title="Combinatory logic">Combinatory logic</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Function-level_programming" title="Function-level programming">Function-level programming</a></li>
<li><a href="Functional_programming" title="Functional programming">Functional programming</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Kappa_calculus" title="Kappa calculus">Kappa calculus</a> - a formalism for functions which <i>excludes</i> higher-order functions</li>
<li><a href="http://en.m.wikipedia.org/wiki/Strategy_pattern" title="Strategy pattern">Strategy pattern</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Higher_order_message" title="Higher order message">Higher order messages</a></li>
</ul>
<h2> <span class="mw-headline" id="External_links">External links</span>
</h2>
<ul>
<li><a rel="nofollow" class="external text" href="http://ergodicity.iamganesh.com/2006/08/07/higher-order-functions/">Higher-order functions and variational calculus</a></li>
<li><a rel="nofollow" class="external text" href="http://boost.org/doc/html/lambda.html">Boost Lambda Library for C++</a></li>
<li><a rel="nofollow" class="external text" href="http://hop.perl.plover.com/book/">Higher Order Perl</a></li>
</ul>

						<div class="section" id="mw-mf-language-section">
				<h2 id="section_language" class="section_heading">Read in another language</h2>
				<div id="content_language" class="content_block">
					<p>This article is available in 12 languages</p>
					<ul id="mw-mf-language-selection"><li><a href="http://ca.m.wikipedia.org/wiki/Funci%C3%B3_d%27ordre_superior" lang="ca" hreflang="ca">català</a></li><li><a href="http://de.m.wikipedia.org/wiki/Funktion_h%C3%B6herer_Ordnung" lang="de" hreflang="de">Deutsch</a></li><li><a href="http://et.m.wikipedia.org/wiki/K%C3%B5rgemat_j%C3%A4rku_funktsioon" lang="et" hreflang="et">eesti</a></li><li><a href="http://es.m.wikipedia.org/wiki/Funci%C3%B3n_de_orden_superior" lang="es" hreflang="es">español</a></li><li><a href="http://fa.m.wikipedia.org/wiki/%D8%AA%D8%A7%D8%A8%D8%B9_%D9%85%D8%B1%D8%AA%D8%A8%D9%87_%D8%A8%D8%A7%D9%84%D8%A7%D8%AA%D8%B1" lang="fa" hreflang="fa">فارسی</a></li><li><a href="http://fr.m.wikipedia.org/wiki/Fonction_d%27ordre_sup%C3%A9rieur" lang="fr" hreflang="fr">français</a></li><li><a href="http://it.m.wikipedia.org/wiki/Funzione_di_ordine_superiore" lang="it" hreflang="it">italiano</a></li><li><a href="http://nl.m.wikipedia.org/wiki/Hogere-ordefunctie" lang="nl" hreflang="nl">Nederlands</a></li><li><a href="http://ja.m.wikipedia.org/wiki/%E9%AB%98%E9%9A%8E%E9%96%A2%E6%95%B0" lang="ja" hreflang="ja">日本語</a></li><li><a href="http://pl.m.wikipedia.org/wiki/Funkcja_wy%C5%BCszego_rz%C4%99du" lang="pl" hreflang="pl">polski</a></li><li><a href="http://ru.m.wikipedia.org/wiki/%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F_%D0%B2%D1%8B%D1%81%D1%88%D0%B5%D0%B3%D0%BE_%D0%BF%D0%BE%D1%80%D1%8F%D0%B4%D0%BA%D0%B0" lang="ru" hreflang="ru">русский</a></li><li><a href="http://zh.m.wikipedia.org/wiki/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0" lang="zh" hreflang="zh">中文</a></li></ul>
				</div>
			</div>			</div><!-- close #content_wrapper -->
			<div id="footer">
			<h2 class="section_heading" id="section_footer">
		<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/logo-copyright-en.png" class="license" alt="Wikipedia ®" />	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Higher-order_function&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Higher-order_function&amp;action=history">contributors</a> like you<br>
				Content available under <a href="Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>				<span>| <a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span>
			</li>
		</ul>
		<ul class="links">
						<li>
			<a href='http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Higher-order+function&amp;feedbacksource=MobileFrontend'>
				Contact Wikipedia			</a>
			</li><li>
						<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div><!-- close footer.div / #content_footer -->
	</div><!-- close #footer -->
					</div><!-- close #mw-mf-page-center -->
		</div><!-- close #mw-mf-viewport -->
		
					</body>
	</html>