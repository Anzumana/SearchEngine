<!doctype html>
	<html lang="en" dir="ltr" class="">
	<head>
		<title>Type punning - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="robots" content="noindex,nofollow"/>		<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile%7Cmobile.production-only%2Cproduction-jquery%7Cmobile.device.default&amp;only=styles&amp;skin=mobile&amp;version=1352163471&amp;*" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile.site&amp;only=styles&amp;skin=mobile&amp;*" />		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />		<script type="text/javascript">
			var _mwStart = +new Date;
			window._evq = window._evq || [];
			if ( typeof console === 'undefined' ) {
				console = { log: function() {} };
			}
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"mobile-frontend-watchlist-add":"Added $1 to your watchlist","mobile-frontend-watchlist-removed":"Removed $1 from your watchlist","mobile-frontend-watchlist-view":"View your watchlist","mobile-frontend-ajax-random-heading":"Locating knowledge...","mobile-frontend-ajax-random-quote":"Intellectual growth should commence at birth and cease only at death","mobile-frontend-ajax-random-quote-author":"Albert Einstein","mobile-frontend-ajax-random-question":"Read this article?","mobile-frontend-ajax-random-yes":"Yes","mobile-frontend-ajax-random-retry":"Try again","mobile-frontend-ajax-page-loading":"Loading $1","mobile-frontend-page-saving":"Saving $1","mobile-frontend-ajax-page-error":"Whoops! Something went wrong there. Please try refreshing your browser window.","mobile-frontend-meta-data-issues":"This article has some issues","mobile-frontend-meta-data-issues-header":"Issues","expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-footer":"<a href="http://en.m.wikipedia.org/wiki/\&quot;\/wiki\/Special:MobileOptions\/Language\&quot;">Note: This article may not be written in your preferred language. You can see which languages Wikipedia supports by clicking here.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"action":"","authenticated":false,"scriptPath":"\/w","shim":"\/\/bits.wikimedia.org\/static-1.21wmf3\/extensions\/MobileFrontend\/stylesheets\/common\/images\/blank.gif","pageUrl":"\/wiki\/$1","beta":null,"title":"Type punning","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			function _mwLogEvent( data, additionalInformation ) {
				var timestamp = + new Date;
				var ev = { event_id: 'mobile', delta: timestamp - _mwStart, data: data, beta: mwMobileFrontendConfig.settings.beta,
					session: _mwStart, page: mwMobileFrontendConfig.settings.title, info: additionalInformation || '' };
				_evq.push( ev );
				console.log( typeof JSON === 'undefined' ? ev : JSON.stringify( ev ) );
			}
		</script>
				<link rel="canonical" href="http://en.wikipedia.org/wiki/Type_punning" >
	</head>
	<body class="mobile live">
				<div id="mw-mf-viewport">
		<div id="mw-mf-page-left">
		<div id='mw-mf-content-left'>
		<ul id="mw-mf-menu-main">
			<li class='icon'><a href="Main_Page"
				title="Home">
				Home</a></li>
			<li class='icon2'><a href="Special:Random#mw-mf-page-left" id="randomButton"
				title="Random"
				class="button">Random</a></li>
						<li class='icon5'>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions&amp;returnto=Type+punning"
					title="Settings">
				Settings				</a>
			</li>
					</ul>
		</div>
		</div>
		<div id='mw-mf-page-center'>
									<div id="mw-mf-header">
		<a title="Open main menu" href="Special:MobileMenu#mw-mf-page-left" id="mw-mf-main-menu-button">				<img alt="menu"
				src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif">
		</a>			<form id="mw-mf-searchForm" action="http://en.m.wikipedia.org/w/index.php" class="search_bar" method="get">
			<input type="hidden" value="Special:Search" name="title" />
			<div id="mw-mf-sq" class="divclearable">
				<input type="search" name="search" id="mw-mf-search" size="22" value="" autocomplete="off" maxlength="1024" class="search"
					placeholder="Search Wikipedia"
					/>
				<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear"/>
				<input class='searchSubmit' type="submit" value="Go">
			</div>
		</form>
	</div>
	<div id="results"></div>
		<div class='show ' id='content_wrapper'>
						<h1 id="firstHeading">Type punning</h1>			
<table class="metadata plainlinks ambox ambox-content ambox-Refimprove" style=""><tr>
<td class="mbox-image">
<div style="width: 52px;"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x"></div>
</td>
<td class="mbox-text" style=""><span class="mbox-text-span">This article <b>needs additional <a href="Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">citations</a> for <a href="Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Type_punning&amp;action=edit">improve this article</a> by adding citations to <a href="http://en.m.wikipedia.org/wiki/Wikipedia:Identifying_reliable_sources" title="Wikipedia:Identifying reliable sources">reliable sources</a>. Unsourced material may be <a href="http://en.m.wikipedia.org/wiki/Template:Citation_needed" title="Template:Citation needed">challenged</a> and <a href="Wikipedia:Verifiability#Burden_of_evidence" title="Wikipedia:Verifiability">removed</a>.</span> <small><i>(October 2011)</i></small> </span></td>
</tr></table>
<p>In <a href="http://en.m.wikipedia.org/wiki/Computer_science" title="Computer science">computer science</a>, <b>type punning</b> is a common term for any programming technique that subverts or circumvents the <a href="Type_system" title="Type system">type system</a> of a <a href="Programming_language" title="Programming language">programming language</a> in order to achieve an effect that would be difficult or impossible to achieve within the bounds of the formal language.</p>
<p>In <a href="http://en.m.wikipedia.org/wiki/C_programming_language" title="C programming language" class="mw-redirect">C</a> and <a href="C++" title="C++">C++</a>, constructs such as <a href="Type_conversion" title="Type conversion">type conversion</a>, <code><a href="Union_(computer_science)" title="Union (computer science)">union</a></code>, and <code>reinterpret_cast</code> are provided in order to permit many kinds of <i>type punning</i>, although some kinds are not actually supported by the standard language.</p>
<p>In the <a href="Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a> programming language, the use of records with variants may be used to treat a particular data type in more than one manner, or in a manner not normally permitted.</p>
<h2> <span class="mw-headline" id="Sockets_example">Sockets example</span>
</h2>
<p>One classic example of <i>type punning</i> is found in the <a href="http://en.m.wikipedia.org/wiki/Berkeley_sockets" title="Berkeley sockets">Berkeley sockets</a> interface. The function to bind an opened but uninitialized socket to an <a href="http://en.m.wikipedia.org/wiki/IP_address" title="IP address">IP address</a> is declared as follows:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">int</span> bind<span class="br0">(</span><span class="kw4">int</span> sockfd<span class="sy0">,</span> <span class="kw4">struct</span> sockaddr <span class="sy0">*</span>my_addr<span class="sy0">,</span> socklen_t addrlen<span class="br0">)</span><span class="sy0">;</span>
</pre>
</div>
</div>
<p>The <code>bind</code> function is usually called as follows:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">struct</span> sockaddr_in sa <span class="sy0">=</span> <span class="br0">{</span><span class="nu0">0</span><span class="br0">}</span><span class="sy0">;</span>
<span class="kw4">int</span> sockfd <span class="sy0">=</span> ...<span class="sy0">;</span>
sa.<span class="me1">sin_family</span> <span class="sy0">=</span> AF_INET<span class="sy0">;</span>
sa.<span class="me1">sin_port</span> <span class="sy0">=</span> htons<span class="br0">(</span>port<span class="br0">)</span><span class="sy0">;</span>
bind<span class="br0">(</span>sockfd<span class="sy0">,</span> <span class="br0">(</span><span class="kw4">struct</span> sockaddr <span class="sy0">*</span><span class="br0">)</span><span class="sy0">&amp;</span>sa<span class="sy0">,</span> <span class="kw4">sizeof</span> sa<span class="br0">)</span><span class="sy0">;</span>
</pre>
</div>
</div>
<p>The Berkeley sockets library fundamentally relies on the fact that in <a href="http://en.m.wikipedia.org/wiki/C_programming_language" title="C programming language" class="mw-redirect">C</a>, a pointer to <code>struct sockaddr_in</code> is freely convertible to a pointer to <code>struct sockaddr</code>; and, in addition, that the two structure types share the same memory layout. Therefore, a reference to the structure field <code>my_addr-&gt;sin_family</code> (where <code>my_addr</code> is of type <code>struct sockaddr*</code>) will actually refer to the field <code>sa.sin_family</code> (where <code>sa</code> is of type <code>struct sockaddr_in</code>). In other words, the sockets library uses <i>type punning</i> to implement a rudimentary form of <a href="http://en.m.wikipedia.org/wiki/Inheritance_(computer_science)" title="Inheritance (computer science)" class="mw-redirect">inheritance</a>.</p>
<p>Often seen in the programming world is the use of "padded" data structures to allow for the storage of different kinds of values in what is effectively the same storage space. This is often seen when two structures are used in mutual exclusivity for optimization.</p>
<h2> <span class="mw-headline" id="Floating-point_example">Floating-point example</span>
</h2>
<p>Not all examples of <i>type punning</i> involve structures, as the previous example did. Suppose we want to determine whether a <a href="http://en.m.wikipedia.org/wiki/Floating-point" title="Floating-point" class="mw-redirect">floating-point</a> number is negative. We could write:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
bool is_negative<span class="br0">(</span><span class="kw4">float</span> x<span class="br0">)</span> <span class="br0">{</span>
    <span class="kw1">return</span> x <span class="sy0">&lt;</span> <span class="nu16">0.0</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre>
</div>
</div>
<p>However, supposing that floating-point comparisons are expensive, and also supposing that <code>float</code> is represented according to the <a href="http://en.m.wikipedia.org/wiki/IEEE_floating-point_standard" title="IEEE floating-point standard" class="mw-redirect">IEEE floating-point standard</a>, and integers are 32 bits wide, we could engage in <i>type punning</i> to extract the <a href="http://en.m.wikipedia.org/wiki/Sign_bit" title="Sign bit">sign bit</a> of the floating-point number using only integer operations:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
bool is_negative<span class="br0">(</span><span class="kw4">float</span> x<span class="br0">)</span> <span class="br0">{</span>
    <span class="kw4">unsigned</span> <span class="kw4">int</span> <span class="sy0">*</span>ui <span class="sy0">=</span> <span class="br0">(</span><span class="kw4">unsigned</span> <span class="kw4">int</span> <span class="sy0">*</span><span class="br0">)</span><span class="sy0">&amp;</span>x<span class="sy0">;</span>
    <span class="kw1">return</span> <span class="br0">(</span><span class="sy0">*</span>ui <span class="sy0">&amp;</span> <span class="nu12">0x80000000</span><span class="br0">)</span> <span class="sy0">!=</span> <span class="nu0">0</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre>
</div>
</div>
<p>This kind of <i>type punning</i> is more dangerous than most. Whereas the former example relied only on guarantees made by the C programming language about structure layout and pointer convertibility, the latter example relies on assumptions about a particular system's hardware. Some situations, such as <a href="http://en.m.wikipedia.org/wiki/Real-time_computing" title="Real-time computing">time-critical</a> code that the compiler otherwise fails to <a href="http://en.m.wikipedia.org/wiki/Compiler_optimization" title="Compiler optimization" class="mw-redirect">optimize</a>, may require dangerous code. In these cases, documenting all such assumptions in <a href="http://en.m.wikipedia.org/wiki/Comment_(computer_programming)" title="Comment (computer programming)">comments</a>, and introducing <a href="http://en.m.wikipedia.org/wiki/Assertion_(computing)#Static_assertions" title="Assertion (computing)">static assertions</a> to verify portability expectations, helps to keep the code <a href="http://en.m.wikipedia.org/wiki/Maintainability" title="Maintainability">maintainable</a>.</p>
<p>For a practical example from <a href="http://en.m.wikipedia.org/wiki/Quake_III" title="Quake III" class="mw-redirect">Quake III</a>, see <a href="http://en.m.wikipedia.org/wiki/Fast_inverse_square_root" title="Fast inverse square root">Fast inverse square root</a>.</p>
<h2> <span class="mw-headline" id="Use_of_union">Use of <code>union</code></span>
</h2>
<p>In addition to the assumption about bit-representation of floating-point numbers, the previous floating-point type-punning example also violates the C language's constraints on how objects are accessed<sup id="cite_ref-0" class="reference"><a href="Type_punning#cite_note-0"><span>[</span>1<span>]</span></a></sup>: the declared type of <code>x</code> is <code>float</code> but it is read through an expression of type <code>unsigned int</code>. On many common platforms, this use of pointer punning can create problems if different pointers are <a href="http://en.m.wikipedia.org/wiki/Data_structure_alignment" title="Data structure alignment">aligned in machine-specific ways</a>. Furthermore, pointers of different sizes can <a href="http://en.m.wikipedia.org/wiki/Aliasing_(computing)" title="Aliasing (computing)">alias accesses to the same memory</a>, causing problems that are unchecked by the compiler.</p>
<p>This aliasing problem can be fixed by the use of a <code>union</code> (though, this example still makes the assumption about IEEE-754 bit-representation of floating-point types):</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
bool is_negative<span class="br0">(</span><span class="kw4">float</span> x<span class="br0">)</span> <span class="br0">{</span>
    <span class="kw4">union</span> <span class="br0">{</span>
        <span class="kw4">unsigned</span> <span class="kw4">int</span> ui<span class="sy0">;</span>
        <span class="kw4">float</span> d<span class="sy0">;</span>
    <span class="br0">}</span> my_union <span class="sy0">=</span> <span class="br0">{</span> .<span class="me1">d</span> <span class="sy0">=</span> x <span class="br0">}</span><span class="sy0">;</span>
    <span class="kw1">return</span> <span class="br0">(</span>my_union.<span class="me1">ui</span> <span class="sy0">&amp;</span> <span class="nu12">0x80000000</span><span class="br0">)</span> <span class="sy0">!=</span> <span class="nu0">0</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre>
</div>
</div>
<p>Here the relevant declared type is <code>float</code> for the store and <code>unsigned</code> for the read, thus complying with the s6.5 rules.</p>
<p>For another example of <i>type punning</i>, see <a href="http://en.m.wikipedia.org/wiki/Stride_of_an_array" title="Stride of an array">Stride of an array</a>.</p>
<h2> <span class="mw-headline" id="Pascal">Pascal</span>
</h2>
<p>A variant record permits treating a data type as multiple kinds of data depending on which variant is being referenced. In the following example, <i>integer</i> is presumed to be 16 bits, while <i>longint</i> and <i>real</i> are presumed to be 32, while character is presumed to be 8 bits:</p>
<pre>
 type variant_record = record
    case rec_type : longint of
        1: ( I : array [1..2] of integer );
        2: ( L : longint );
        3: ( R : real );
        4: ( C : array [1..4] of character);
    end;
  Var V: Variant_record;
     K: Integer;
     LA: Longint;
     RA: Real;
     Ch: character;
 ...
  V.I := 1;
  Ch := V.C[1];   (* This would extract the first binary byte of V.I *)
  V.R := 8.3;   
  LA := V.L;     (* This would store a real into an integer *)
</pre>
<p>In Pascal, copying a real to an integer converts it to the truncated value. This method would translate the binary value of the floating-point number into whatever it is as a long integer (32 bits), which will not be the same and may be incompatible with the long integer value on some systems.</p>
<p>These examples could be used to create strange conversions, although, in some cases, there may be legitimate uses for these types of constructs, such as for determining locations of particular pieces of data. In the following example a pointer and a longint are both presumed to be 32 bits:</p>
<pre>
Type PA = ^Arec;

   Arec = record
     case rt : longint of
        1: (P: PA);
        2: (L: Longint);
   end;

 Var PP: PA;
  K: Longint;
 ...
  New(PP);
  PP^.P := PP;
  Writeln('Variable PP is located at address ', hex(PP^.L));
</pre>
<p>Where "new" is the standard routine in Pascal for allocating memory for a pointer, and "hex" is presumably a routine to print the hexadecimal string describing the value of an integer. This would allow the display of the address of a pointer, something which is not normally permitted. (Pointers cannot be read or written, only assigned .) Assigning a value to an integer variant of a pointer would allow examining or writing to any location in system memory:</p>
<pre>
PP^.L := 0;
PP := PP^.P;  (*PP now points to address 0 *)
K := PP^.L;   (*K contains the value of word 0 *)
Writeln('Word 0 of this machine contains ',K);
</pre>
<p>This construct may cause a program check or protection violation if address 0 is protected against reading on the machine the program is running upon or the operating system it is running under.</p>
<h2> <span class="mw-headline" id="References">References</span>
</h2>
<ol class="references">
<li id="cite_note-0">
<span class="mw-cite-backlink"><b><a href="Type_punning#cite_ref-0">^</a></b></span> <span class="reference-text">ISO/IEC 9899:1999 s6.5#7</span>
</li>
</ol>
<h2> <span class="mw-headline" id="External_links">External links</span>
</h2>
<ul>
<li>
<a rel="nofollow" class="external text" href="http://gcc.gnu.org/onlinedocs/gcc-4.1.1/gcc/Optimize-Options.html#index-fstrict_002daliasing-542">Section</a> of the <a href="GNU_Compiler_Collection" title="GNU Compiler Collection">GCC</a> manual on <tt>-fstrict-aliasing</tt>, which defeats some <i>type punning</i>
</li>
<li>
<a rel="nofollow" class="external text" href="http://www.open-std.org/jtc1/sc22/wg14/www/docs/dr_257.htm">Defect Report 257</a> to the <a href="C99" title="C99">C99</a> standard, incidentally defining "<i>type punning</i>" in terms of <code>union</code>, and discussing the issues surrounding the implementation-defined behavior of the last example above</li>
<li>
<a rel="nofollow" class="external text" href="http://www.open-std.org/jtc1/sc22/wg14/www/docs/dr_283.htm">Defect Report 283</a> on the use of unions for type punning</li>
</ul>

						</div><!-- close #content_wrapper -->
			<div id="footer">
			<h2 class="section_heading" id="section_footer">
		<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/logo-copyright-en.png" class="license" alt="Wikipedia ®" />	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Type_punning&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Type_punning&amp;action=history">contributors</a> like you<br>
				Content available under <a href="Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>				<span>| <a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span>
			</li>
		</ul>
		<ul class="links">
						<li>
			<a href='http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Type+punning&amp;feedbacksource=MobileFrontend'>
				Contact Wikipedia			</a>
			</li><li>
						<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div><!-- close footer.div / #content_footer -->
	</div><!-- close #footer -->
					</div><!-- close #mw-mf-page-center -->
		</div><!-- close #mw-mf-viewport -->
		
					</body>
	</html>