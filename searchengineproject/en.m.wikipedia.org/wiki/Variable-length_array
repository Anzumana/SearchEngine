<!doctype html>
	<html lang="en" dir="ltr" class="">
	<head>
		<title>Variable-length array - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="robots" content="noindex,nofollow"/>		<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile%7Cmobile.production-only%2Cproduction-jquery%7Cmobile.device.default&amp;only=styles&amp;skin=mobile&amp;version=1352163471&amp;*" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile.site&amp;only=styles&amp;skin=mobile&amp;*" />		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />		<script type="text/javascript">
			var _mwStart = +new Date;
			window._evq = window._evq || [];
			if ( typeof console === 'undefined' ) {
				console = { log: function() {} };
			}
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"mobile-frontend-watchlist-add":"Added $1 to your watchlist","mobile-frontend-watchlist-removed":"Removed $1 from your watchlist","mobile-frontend-watchlist-view":"View your watchlist","mobile-frontend-ajax-random-heading":"Locating knowledge...","mobile-frontend-ajax-random-quote":"Intellectual growth should commence at birth and cease only at death","mobile-frontend-ajax-random-quote-author":"Albert Einstein","mobile-frontend-ajax-random-question":"Read this article?","mobile-frontend-ajax-random-yes":"Yes","mobile-frontend-ajax-random-retry":"Try again","mobile-frontend-ajax-page-loading":"Loading $1","mobile-frontend-page-saving":"Saving $1","mobile-frontend-ajax-page-error":"Whoops! Something went wrong there. Please try refreshing your browser window.","mobile-frontend-meta-data-issues":"This article has some issues","mobile-frontend-meta-data-issues-header":"Issues","expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-footer":"<a href="http://en.m.wikipedia.org/wiki/\&quot;\/wiki\/Special:MobileOptions\/Language\&quot;">Note: This article may not be written in your preferred language. You can see which languages Wikipedia supports by clicking here.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"action":"","authenticated":false,"scriptPath":"\/w","shim":"\/\/bits.wikimedia.org\/static-1.21wmf3\/extensions\/MobileFrontend\/stylesheets\/common\/images\/blank.gif","pageUrl":"\/wiki\/$1","beta":null,"title":"Variable-length array","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			function _mwLogEvent( data, additionalInformation ) {
				var timestamp = + new Date;
				var ev = { event_id: 'mobile', delta: timestamp - _mwStart, data: data, beta: mwMobileFrontendConfig.settings.beta,
					session: _mwStart, page: mwMobileFrontendConfig.settings.title, info: additionalInformation || '' };
				_evq.push( ev );
				console.log( typeof JSON === 'undefined' ? ev : JSON.stringify( ev ) );
			}
		</script>
				<link rel="canonical" href="http://en.wikipedia.org/wiki/Variable-length_array" >
	</head>
	<body class="mobile live">
				<div id="mw-mf-viewport">
		<div id="mw-mf-page-left">
		<div id='mw-mf-content-left'>
		<ul id="mw-mf-menu-main">
			<li class='icon'><a href="Main_Page"
				title="Home">
				Home</a></li>
			<li class='icon2'><a href="Special:Random#mw-mf-page-left" id="randomButton"
				title="Random"
				class="button">Random</a></li>
						<li class='icon5'>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions&amp;returnto=Variable-length+array"
					title="Settings">
				Settings				</a>
			</li>
					</ul>
		</div>
		</div>
		<div id='mw-mf-page-center'>
									<div id="mw-mf-header">
		<a title="Open main menu" href="Special:MobileMenu#mw-mf-page-left" id="mw-mf-main-menu-button">				<img alt="menu"
				src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif">
		</a>			<form id="mw-mf-searchForm" action="http://en.m.wikipedia.org/w/index.php" class="search_bar" method="get">
			<input type="hidden" value="Special:Search" name="title" />
			<div id="mw-mf-sq" class="divclearable">
				<input type="search" name="search" id="mw-mf-search" size="22" value="" autocomplete="off" maxlength="1024" class="search"
					placeholder="Search Wikipedia"
					/>
				<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear"/>
				<input class='searchSubmit' type="submit" value="Go">
			</div>
		</form>
	</div>
	<div id="results"></div>
		<div class='show ' id='content_wrapper'>
						<h1 id="firstHeading">Variable-length array</h1>			
<table class="metadata plainlinks ambox ambox-content ambox-Refimprove" style=""><tr>
<td class="mbox-image">
<div style="width: 52px;"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39"></div>
</td>
<td class="mbox-text" style=""><span class="mbox-text-span">This article <b>needs additional <a href="Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">citations</a> for <a href="Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Variable-length_array&amp;action=edit">improve this article</a> by adding citations to <a href="http://en.m.wikipedia.org/wiki/Wikipedia:Identifying_reliable_sources" title="Wikipedia:Identifying reliable sources">reliable sources</a>. Unsourced material may be <a href="http://en.m.wikipedia.org/wiki/Template:Citation_needed" title="Template:Citation needed">challenged</a> and <a href="Wikipedia:Verifiability#Burden_of_evidence" title="Wikipedia:Verifiability">removed</a>.</span> <small><i>(December 2011)</i></small> </span></td>
</tr></table>
<p>In programming, a <b>variable-length array</b> (or <b>VLA</b>) is an <a href="http://en.m.wikipedia.org/wiki/Array_data_structure" title="Array data structure">array</a> <a href="http://en.m.wikipedia.org/wiki/Data_structure" title="Data structure">data structure</a> of <a href="http://en.m.wikipedia.org/wiki/Automatic_variable" title="Automatic variable">automatic storage duration</a> whose length is determined at run time (instead of at compile time).</p>
<p>Programming languages that support VLAs include <a href="http://en.m.wikipedia.org/wiki/Ada_(programming_language)" title="Ada (programming language)">Ada</a>, <a href="http://en.m.wikipedia.org/wiki/Algol_68" title="Algol 68" class="mw-redirect">Algol 68</a> (for non-flexible rows), <a href="http://en.m.wikipedia.org/wiki/APL_(programming_language)" title="APL (programming language)">APL</a>, <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> (added in <a href="C99" title="C99">C99</a> and subsequently in <a href="C11_(C_standard_revision)" title="C11 (C standard revision)">C11</a> relegated to a conditional feature which implementations aren't required to support;<sup id="cite_ref-0" class="reference"><a href="Variable-length_array#cite_note-0"><span>[</span>1<span>]</span></a></sup> on some platforms, could be implemented previously with <code>alloca()</code> or similar functions) and <a href="C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> (as unsafe-mode stack-allocated arrays), <a href="http://en.m.wikipedia.org/wiki/COBOL" title="COBOL">COBOL</a>, <a href="Fortran" title="Fortran">Fortran 90</a>.</p>
<h2> <span class="mw-headline" id="Memory_Allocation">Memory Allocation</span>
</h2>
<p>One problem that may be hidden by a language's support for VLAs is that of the underlying memory allocation: in environments where there is a clear distinction between a <a href="http://en.m.wikipedia.org/wiki/Heap_memory" title="Heap memory" class="mw-redirect">heap</a> and a <a href="http://en.m.wikipedia.org/wiki/Stack-based_memory_allocation" title="Stack-based memory allocation">stack</a>, it may not be clear which, if any, of those will store the VLA.</p>
<p>For example, the <a href="GNU_Compiler_Collection" title="GNU Compiler Collection">GNU C Compiler</a> allocates memory for VLAs on the stack. If a VLA is too large, no error occurs immediately; instead, attempts to use the VLA may lead to <a href="Segmentation_fault" title="Segmentation fault">segmentation faults</a> later in the execution of the program.</p>
<h2> <span class="mw-headline" id="Examples">Examples</span>
</h2>
<p>The following <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> function allocates a variable-length array of a specified size, fills it with floating-point values, then passes it to another function for processing. Because the array is declared as an automatic variable, its lifetime ends when the <code>read_and_process</code> function returns.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">float</span> read_and_process<span class="br0">(</span><span class="kw4">int</span> n<span class="br0">)</span>
<span class="br0">{</span>
    <span class="kw4">float</span> vals<span class="br0">[</span>n<span class="br0">]</span><span class="sy0">;</span>
 
    <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> n<span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span>
        vals<span class="br0">[</span>i<span class="br0">]</span> <span class="sy0">=</span> read_val<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
    <span class="kw1">return</span> process<span class="br0">(</span>vals<span class="sy0">,</span> n<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre>
</div>
</div>
<p>Following is the same example in <a href="http://en.m.wikipedia.org/wiki/Ada_(programming_language)" title="Ada (programming language)">Ada</a>. Note that Ada arrays carry their bounds with them, there is no need to pass the length to the Process function.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="ada source-ada">
<pre class="de1">
<span class="kw3">type</span> Vals_Type <span class="kw1">is</span> <span class="kw3">array</span> <span class="br0">(</span>Positive <span class="kw3">range</span> &lt;&gt;<span class="br0">)</span> <span class="kw3">of</span> Float;
 
<span class="kw3">function</span> Read_And_Process <span class="br0">(</span>N : Integer<span class="br0">)</span> <span class="kw1">return</span> Float <span class="kw1">is</span>
   Vals : Vals_Type <span class="br0">(</span><span class="nu0">1</span> .. <span class="me1">N</span><span class="br0">)</span>;
<span class="kw1">begin</span>
   <span class="kw1">for</span> I <span class="kw3">in</span> <span class="nu0">1</span> .. <span class="me1">N</span> <span class="kw1">loop</span>
      Vals <span class="br0">(</span>I<span class="br0">)</span> := Read_Val;
   <span class="kw1">end</span> <span class="kw1">loop</span>;
   <span class="kw1">return</span> Process <span class="br0">(</span>Vals<span class="br0">)</span>;
<span class="kw1">end</span> Read_And_Process;
</pre>
</div>
</div>
<p>The equivalent <a href="Fortran" title="Fortran">Fortran 90</a> function is:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="fortran source-fortran">
<pre class="de1">
<span class="kw1">function</span> read_and_process<span class="br0">(</span>n<span class="br0">)</span> <span class="kw3">result</span><span class="br0">(</span>o<span class="br0">)</span>
    <span class="kw3">integer</span>,<span class="kw3">intent</span><span class="br0">(</span><span class="kw3">in</span><span class="br0">)</span><span class="sy0">::</span><span class="me2">n</span>
    <span class="kw3">real</span><span class="sy0">::</span><span class="me2">o</span>
 
    <span class="kw3">real</span>,<span class="kw3">dimension</span><span class="br0">(</span>n<span class="br0">)</span><span class="sy0">::</span><span class="me2">vals</span>
    <span class="kw3">real</span><span class="sy0">::</span><span class="me2">read_val</span>, process
    <span class="kw3">integer</span><span class="sy0">::</span><span class="me2">i</span>
 
    <span class="kw1">do</span> i <span class="sy0">=</span> <span class="nu0">1</span>,n
       vals<span class="br0">(</span>i<span class="br0">)</span> <span class="sy0">=</span> read_val<span class="br0">(</span><span class="br0">)</span>
    <span class="kw1">end</span> <span class="kw1">do</span>
    o <span class="sy0">=</span> process<span class="br0">(</span>vals, n<span class="br0">)</span>
<span class="kw1">end</span> <span class="kw1">function</span> read_and_process
</pre>
</div>
</div>
<p>The following <a href="http://en.m.wikipedia.org/wiki/COBOL" title="COBOL">COBOL</a> fragment declares a variable-length array of records, <code>DEPT-PERSON</code>, having a length (number of members) specified by the value of <code>PEOPLE-CNT</code>.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="text source-text">
<pre class="de1">
DATA DIVISION.
WORKING-STORAGE SECTION.
01  DEPT-PEOPLE.
    05  PEOPLE-CNT          PIC S9(4) BINARY.
    05  DEPT-PERSON         OCCURS 0 TO 20 TIMES DEPENDING ON PEOPLE-CNT.
        10  PERSON-NAME     PIC X(20).
        10  PERSON-WAGE     PIC S9(7)V99 PACKED-DECIMAL.
</pre>
</div>
</div>
<p>The following <a href="C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> fragment declares a variable-length array of integers. Please note the "unsafe" keyword which would require assembly containing this code to be marked as unsafe.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="csharp source-csharp">
<pre class="de1">
<span class="kw1">unsafe</span> <span class="kw4">void</span> declareStackBasedArray<span class="br0">(</span><span class="kw4">int</span> size<span class="br0">)</span>
<span class="br0">{</span>
    <span class="kw4">int</span> <span class="sy0">*</span>pArray <span class="sy0">=</span> <span class="kw1">stackalloc</span> <span class="kw4">int</span><span class="br0">[</span>size<span class="br0">]</span><span class="sy0">;</span>
    pArray<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span> <span class="sy0">=</span> <span class="nu0">123</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre>
</div>
</div>
<h2> <span class="mw-headline" id="Dynamic_vs._automatic">Dynamic vs. automatic</span>
</h2>
<p>Languages such as <a href="Java_(programming_language)" title="Java (programming language)">Java</a> technically do not provide variable-length arrays, because all array objects in those languages are dynamically allocated on the <a href="Dynamic_memory_allocation" title="Dynamic memory allocation" class="mw-redirect">heap</a>, and therefore do not have <a href="http://en.m.wikipedia.org/wiki/Automatic_variable" title="Automatic variable">automatic storage</a> duration for arrays.</p>
<h2> <span class="mw-headline" id="References">References</span>
</h2>
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-0">
<span class="mw-cite-backlink"><b><a href="Variable-length_array#cite_ref-0">^</a></b></span> <span class="reference-text">ISO 9899:2011 Programming Languages - C 6.7.6.2 4</span>
</li>
</ol>
</div>





						</div><!-- close #content_wrapper -->
			<div id="footer">
			<h2 class="section_heading" id="section_footer">
		<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/logo-copyright-en.png" class="license" alt="Wikipedia ®" />	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Variable-length_array&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Variable-length_array&amp;action=history">contributors</a> like you<br>
				Content available under <a href="Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>				<span>| <a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span>
			</li>
		</ul>
		<ul class="links">
						<li>
			<a href='http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Variable-length+array&amp;feedbacksource=MobileFrontend'>
				Contact Wikipedia			</a>
			</li><li>
						<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div><!-- close footer.div / #content_footer -->
	</div><!-- close #footer -->
					</div><!-- close #mw-mf-page-center -->
		</div><!-- close #mw-mf-viewport -->
		
					</body>
	</html>