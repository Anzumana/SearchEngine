<!doctype html>
	<html lang="en" dir="ltr" class="">
	<head>
		<title>While loop - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="robots" content="noindex,nofollow"/>		<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile%7Cmobile.production-only%2Cproduction-jquery%7Cmobile.device.default&amp;only=styles&amp;skin=mobile&amp;version=1352163471&amp;*" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile.site&amp;only=styles&amp;skin=mobile&amp;*" />		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />		<script type="text/javascript">
			var _mwStart = +new Date;
			window._evq = window._evq || [];
			if ( typeof console === 'undefined' ) {
				console = { log: function() {} };
			}
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"mobile-frontend-watchlist-add":"Added $1 to your watchlist","mobile-frontend-watchlist-removed":"Removed $1 from your watchlist","mobile-frontend-watchlist-view":"View your watchlist","mobile-frontend-ajax-random-heading":"Locating knowledge...","mobile-frontend-ajax-random-quote":"Intellectual growth should commence at birth and cease only at death","mobile-frontend-ajax-random-quote-author":"Albert Einstein","mobile-frontend-ajax-random-question":"Read this article?","mobile-frontend-ajax-random-yes":"Yes","mobile-frontend-ajax-random-retry":"Try again","mobile-frontend-ajax-page-loading":"Loading $1","mobile-frontend-page-saving":"Saving $1","mobile-frontend-ajax-page-error":"Whoops! Something went wrong there. Please try refreshing your browser window.","mobile-frontend-meta-data-issues":"This article has some issues","mobile-frontend-meta-data-issues-header":"Issues","expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-footer":"<a href="http://en.m.wikipedia.org/wiki/\&quot;\/wiki\/Special:MobileOptions\/Language\&quot;">Note: This article may not be written in your preferred language. You can see which languages Wikipedia supports by clicking here.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"action":"","authenticated":false,"scriptPath":"\/w","shim":"\/\/bits.wikimedia.org\/static-1.21wmf3\/extensions\/MobileFrontend\/stylesheets\/common\/images\/blank.gif","pageUrl":"\/wiki\/$1","beta":null,"title":"While loop","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			function _mwLogEvent( data, additionalInformation ) {
				var timestamp = + new Date;
				var ev = { event_id: 'mobile', delta: timestamp - _mwStart, data: data, beta: mwMobileFrontendConfig.settings.beta,
					session: _mwStart, page: mwMobileFrontendConfig.settings.title, info: additionalInformation || '' };
				_evq.push( ev );
				console.log( typeof JSON === 'undefined' ? ev : JSON.stringify( ev ) );
			}
		</script>
				<link rel="canonical" href="http://en.wikipedia.org/wiki/While_loop" >
	</head>
	<body class="mobile live">
				<div id="mw-mf-viewport">
		<div id="mw-mf-page-left">
		<div id='mw-mf-content-left'>
		<ul id="mw-mf-menu-main">
			<li class='icon'><a href="Main_Page"
				title="Home">
				Home</a></li>
			<li class='icon2'><a href="Special:Random#mw-mf-page-left" id="randomButton"
				title="Random"
				class="button">Random</a></li>
						<li class='icon5'>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions&amp;returnto=While+loop"
					title="Settings">
				Settings				</a>
			</li>
					</ul>
		</div>
		</div>
		<div id='mw-mf-page-center'>
									<div id="mw-mf-header">
		<a title="Open main menu" href="Special:MobileMenu#mw-mf-page-left" id="mw-mf-main-menu-button">				<img alt="menu"
				src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif">
		</a>			<form id="mw-mf-searchForm" action="http://en.m.wikipedia.org/w/index.php" class="search_bar" method="get">
			<input type="hidden" value="Special:Search" name="title" />
			<div id="mw-mf-sq" class="divclearable">
				<input type="search" name="search" id="mw-mf-search" size="22" value="" autocomplete="off" maxlength="1024" class="search"
					placeholder="Search Wikipedia"
					/>
				<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear"/>
				<input class='searchSubmit' type="submit" value="Go">
			</div>
		</form>
	</div>
	<div id="results"></div>
		<div class='show ' id='content_wrapper'>
						<h1 id="firstHeading">While loop</h1>			<table class="metadata plainlinks ambox ambox-content ambox-Unreferenced" style=""><tr><td class="mbox-image">
<div style="width: 52px;"><a href="File:Question_book-new.svg" class="image"><img alt="Question book-new.svg" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x"></a></div>
</td>
<td class="mbox-text" style=""><span class="mbox-text-span">This article <b>does not <a href="Wikipedia:Citing_sources" title="Wikipedia:Citing sources">cite</a> any <a href="Wikipedia:Verifiability" title="Wikipedia:Verifiability">references or sources</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="http://en.wikipedia.org/w/index.php?title=While_loop&amp;action=edit">improve this article</a> by <a href="http://en.m.wikipedia.org/wiki/Help:Introduction_to_referencing/1" title="Help:Introduction to referencing/1">adding citations to reliable sources</a>. Unsourced material may be challenged and <a href="Wikipedia:Verifiability#Burden_of_evidence" title="Wikipedia:Verifiability">removed</a>.</span> <small><i>(December 2009)</i></small> </span></td>
</tr></table><div class="thumb tright">
<div class="thumbinner" style="width:222px;"><a href="http://en.m.wikipedia.org/wiki/File:While-loop-diagram.svg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/4/43/While-loop-diagram.svg/220px-While-loop-diagram.svg.png" width="220" height="278" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/4/43/While-loop-diagram.svg/330px-While-loop-diagram.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/4/43/While-loop-diagram.svg/440px-While-loop-diagram.svg.png 2x"></a>
<div class="thumbcaption">

While loop diagram</div>
</div>
</div>
<p>In most <a href="http://en.m.wikipedia.org/wiki/Computer_programming" title="Computer programming">computer programming</a> languages, a <b>while loop</b> is a <a href="http://en.m.wikipedia.org/wiki/Control_flow" title="Control flow">control flow</a> <a href="Statement_(programming)" title="Statement (programming)" class="mw-redirect">statement</a> that allows code to be executed repeatedly based on a given <a href="Boolean_datatype" title="Boolean datatype" class="mw-redirect">boolean</a> condition. The while loop can be thought of as a repeating <a href="Conditional_(programming)" title="Conditional (programming)">if statement</a>.</p>
<p>The <i>while</i> construct consists of a block of code and a condition. The condition is evaluated, and if the condition is <a href="http://en.m.wikipedia.org/wiki/Logical_value" title="Logical value" class="mw-redirect">true</a>, the code within the block is executed. This repeats until the condition becomes <a href="http://en.m.wikipedia.org/wiki/False" title="False">false</a>. Because <i>while</i> loop checks the condition before the block is executed, the control structure is often also known as a <b>pre-test loop</b>. Compare with the <a href="Do_while_loop" title="Do while loop">do while loop</a>, which tests the condition <i>after</i> the loop has executed.</p>
<p>For example, in the <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C programming language</a> (as well as <a href="Java_(programming_language)" title="Java (programming language)">Java</a> and <a href="C++" title="C++">C++</a>, which use the same syntax in this case), the code fragment</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">int</span> x <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
<span class="kw1">while</span> <span class="br0">(</span>x <span class="sy0">&lt;</span> <span class="nu0">5</span><span class="br0">)</span> <span class="br0">{</span>
    <span class="kw3">printf</span> <span class="br0">(</span><span class="st0">"x = %d<span class="es1">\n</span>"</span><span class="sy0">,</span> x<span class="br0">)</span><span class="sy0">;</span>
    x<span class="sy0">++;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>first checks whether x is less than 5, which it is, so then the {loop body} is entered, where the printf function is run and x is incremented by 1. After completing all the statements in the loop body, the condition, (x &lt; 5), is checked again, and the loop is executed again, this process repeating until the <a href="Variable_(programming)" title="Variable (programming)" class="mw-redirect">variable</a> x has the value 5.</p>
<p>Note that it is possible, and in some cases desirable, for the condition to <i>always</i> evaluate to true, creating an <a href="http://en.m.wikipedia.org/wiki/Infinite_loop" title="Infinite loop">infinite loop</a>. When such a loop is created intentionally, there is usually another control structure (such as a <a href="http://en.m.wikipedia.org/wiki/Control_flow" title="Control flow">break</a> statement) that controls termination of the loop. For example:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw1">while</span> <span class="br0">(</span><span class="kw2">true</span><span class="br0">)</span> <span class="br0">{</span>
    <span class="co1">//do complicated stuff</span>
    <span class="kw1">if</span> <span class="br0">(</span>someCondition<span class="br0">)</span>
        <span class="kw2">break</span><span class="sy0">;</span>
    <span class="co1">//more stuff</span>
<span class="br0">}</span>
</pre></div>
</div>
<p><br></p>
<h2> <span class="mw-headline" id="Equivalent_constructs">Equivalent constructs</span></h2>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw1">while</span> <span class="br0">(</span>condition<span class="br0">)</span> <span class="br0">{</span>
   statements<span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>is equivalent to</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw1">if</span> <span class="br0">(</span>condition<span class="br0">)</span> <span class="br0">{</span>
   <span class="kw1">do</span> <span class="br0">{</span>
      statements<span class="sy0">;</span>
   <span class="br0">}</span> <span class="kw1">while</span> <span class="br0">(</span>condition<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>or</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw1">while</span> <span class="br0">(</span><span class="kw2">true</span><span class="br0">)</span> <span class="br0">{</span>
   <span class="kw1">if</span> <span class="br0">(</span><span class="sy0">!</span>condition<span class="br0">)</span> <span class="kw2">break</span><span class="sy0">;</span>
   statements<span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>or</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
   <span class="kw1">goto</span> TEST<span class="sy0">;</span>
LOOPSTART<span class="sy0">:</span>
   statements<span class="sy0">;</span>
TEST<span class="sy0">:</span>
   <span class="kw1">if</span> <span class="br0">(</span>condition<span class="br0">)</span> <span class="kw1">goto</span> LOOPSTART<span class="sy0">;</span>
</pre></div>
</div>
<p>or</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
TEST<span class="sy0">:</span>
   <span class="kw1">if</span> <span class="br0">(</span><span class="sy0">!</span>condition<span class="br0">)</span> <span class="kw1">goto</span> LOOPEND<span class="sy0">;</span>
   statements
   <span class="kw1">goto</span> TEST<span class="sy0">;</span>
LOOPEND<span class="sy0">:</span>
</pre></div>
</div>
<p>Also, in <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> and its descendants, a while loop is a <a href="For_loop#Three-expression_for_loops" title="For loop">for loop</a> with no initialization or counting expressions, i.e.,</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw1">for</span> <span class="br0">(</span> <span class="sy0">;</span> condition<span class="sy0">;</span> <span class="br0">)</span>
<span class="br0">{</span>
   statements<span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>}</p>
<h2> <span class="mw-headline" id="Demonstrating_while_loops">Demonstrating while loops</span></h2>
<p>These while loops will calculate the <a href="http://en.m.wikipedia.org/wiki/Factorial" title="Factorial">factorial</a> of the number 5:</p>
<h3> <span class="mw-headline" id="ActionScript_3"><a href="http://en.m.wikipedia.org/wiki/ActionScript#ActionScript_3.0" title="ActionScript">ActionScript 3</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="actionscript source-actionscript">
<pre class="de1">
<span class="kw2">var</span> counter:<span class="kw3">int</span> = <span class="nu0">5</span>;
<span class="kw2">var</span> factorial:<span class="kw3">int</span> = <span class="nu0">1</span>;
 
<span class="kw1">while</span> <span class="br0">(</span> counter <span class="sy0">&gt;</span> <span class="nu0">1</span> <span class="br0">)</span>
<span class="br0">{</span>
  factorial <span class="sy0">*</span>= counter;
  counter--;
<span class="br0">}</span>
<span class="kw3">trace</span> <span class="br0">(</span><span class="st0">"Factorial "</span>, factorial<span class="br0">)</span>;
</pre></div>
</div>
<h3> <span class="mw-headline" id="Ada"><a href="http://en.m.wikipedia.org/wiki/Ada_(programming_language)" title="Ada (programming language)">Ada</a></span></h3>
<table class="metadata mbox-small plainlinks" style="border:1px solid #aaa; background-color:#f9f9f9;"><tr><td class="mbox-image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/60px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/80px-Wikibooks-logo-en-noslogan.svg.png 2x"></td>
<td class="mbox-text plainlist" style="">The Wikibook <i><a href="http://en.wikibooks.org/wiki/Ada_Programming" class="extiw" title="wikibooks:Ada Programming">Ada_Programming</a></i> has a page on the topic of: <i><b><a href="http://en.wikibooks.org/wiki/Ada_Programming/Control" class="extiw" title="wikibooks:Ada Programming/Control">Control</a></b></i></td>
</tr></table><div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="ada source-ada">
<pre class="de1">
<span class="kw3">with</span> Ada.<span class="me1">Integer_Text_IO</span>;
 
<span class="kw3">procedure</span> Factorial <span class="kw1">is</span>
  Counter   : Integer := <span class="nu0">5</span>;
  Factorial : Integer := <span class="nu0">1</span>;
<span class="kw1">begin</span>
  <span class="kw1">while</span> Counter &gt; <span class="nu0">0</span> <span class="kw1">loop</span>
    Factorial := Factorial * Counter;
    Counter   := Counter - <span class="nu0">1</span>;
  <span class="kw1">end</span> <span class="kw1">loop</span>;
 
  Ada.<span class="me1">Integer_Text_IO</span>.<span class="me1">Put</span> <span class="br0">(</span>Factorial<span class="br0">)</span>;
<span class="kw1">end</span> Factorial;
</pre></div>
</div>
<h3> <span class="mw-headline" id="Bash"><a href="http://en.m.wikipedia.org/wiki/Bash_(Unix_shell)" title="Bash (Unix shell)">Bash</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="bash source-bash">
<pre class="de1">
<span class="re2">counter</span>=<span class="nu0">5</span>
<span class="re2">factorial</span>=<span class="nu0">1</span>
<span class="kw1">while</span> <span class="br0">[</span> <span class="re1">$counter</span> <span class="re5">-gt</span> <span class="nu0">0</span> <span class="br0">]</span>; <span class="kw1">do</span>
    <span class="re2">factorial</span>=$<span class="br0">(</span><span class="br0">(</span>factorial <span class="sy0">*</span> counter<span class="br0">)</span><span class="br0">)</span>
    <span class="re2">counter</span>=$<span class="br0">(</span><span class="br0">(</span>counter - <span class="nu0">1</span><span class="br0">)</span><span class="br0">)</span>
<span class="kw1">done</span>
 
<span class="kw3">echo</span> <span class="re1">$factorial</span>
</pre></div>
</div>
<h3> <span class="mw-headline" id="QBasic_or_Visual_Basic"><a href="http://en.m.wikipedia.org/wiki/QBasic" title="QBasic">QBasic</a> or <a href="http://en.m.wikipedia.org/wiki/Visual_Basic" title="Visual Basic">Visual Basic</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="vb source-vb">
<pre class="de1">
    <span class="kw4">Dim</span> counter <span class="kw4">As</span> <span class="kw1">Integer</span> = 10    <span class="co1">' init variable and set value
</span>
    <span class="kw3">Do</span> <span class="kw3">While</span> counter &gt; 0
          counter = counter - 1
    <span class="kw3">Loop</span>     ' program goes here, <span class="kw3">until</span> counter = 0
</pre></div>
</div>
<pre>
                                                                                                 #include&lt;conio.h&gt;
</pre>
<p>void main () { clrscr (); int i,j; i=0; while (i&lt;8) { printf (" "); j=7; while(j&gt;i)</p>
<p><br>
{ printf ("* "); j--; }</p>
<p>printf ("\n"); i++; } getch(); }</p>
<h3> <span class="mw-headline" id="Fortran"><a href="Fortran" title="Fortran">Fortran</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="fortran source-fortran">
<pre class="de1">
<span class="kw1">program</span> FactorialProg
  <span class="kw3">integer</span> <span class="sy0">::</span> <span class="me2">counter</span> <span class="sy0">=</span> <span class="nu0">5</span>
  <span class="kw3">integer</span> <span class="sy0">::</span> <span class="me2">factorial</span> <span class="sy0">=</span> <span class="nu0">1</span>
  <span class="kw1">do</span> <span class="kw1">while</span> <span class="br0">(</span>counter &gt; <span class="nu0">0</span><span class="br0">)</span>
    factorial <span class="sy0">=</span> factorial <span class="sy0">*</span> counter
    counter <span class="sy0">=</span> counter <span class="sy0">-</span> <span class="nu0">1</span>
  <span class="kw1">end</span> <span class="kw1">do</span>
  print <span class="sy0">*</span>, factorial
<span class="kw1">end</span> <span class="kw1">program</span> FactorialProg
</pre></div>
</div>
<h3> <span class="mw-headline" id="Java.2C_C.23.2C_D"><a href="Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, <a href="D_(programming_language)" title="D (programming language)">D</a></span></h3>
<p>The code for the loop is the same for Java, C# and D:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="csharp source-csharp">
<pre class="de1">
<span class="kw4">int</span> counter <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">;</span>
<span class="kw4">long</span> factorial <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
 
<span class="kw1">while</span> <span class="br0">(</span>counter <span class="sy0">&gt;</span> <span class="nu0">1</span><span class="br0">)</span>
<span class="br0">{</span>
   factorial <span class="sy0">*=</span> counter<span class="sy0">--;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>For Java the result is printed as follows:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="java source-java">
<pre class="de1">
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span>factorial<span class="br0">)</span><span class="sy0">;</span>
</pre></div>
</div>
<p>The same in C#</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="csharp source-csharp">
<pre class="de1">
<span class="kw5">System</span><span class="sy0">.</span><span class="me1">Console</span><span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">(</span>factorial<span class="br0">)</span><span class="sy0">;</span>
</pre></div>
</div>
<p>And finally in D</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="d source-d">
<pre class="de1">
writefln<span class="br0">(</span>factorial<span class="br0">)</span><span class="sy0">;</span>
</pre></div>
</div>
<h3> <span class="mw-headline" id="JavaScript"><a href="JavaScript" title="JavaScript">JavaScript</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="javascript source-javascript">
<pre class="de1">
<span class="kw1">var</span> counter <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">;</span>
<span class="kw1">var</span> factorial <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
 
while <span class="br0">(</span> counter <span class="sy0">&gt;</span> <span class="nu0">1</span> <span class="br0">)</span>
<span class="br0">{</span>
  factorial <span class="sy0">*=</span> counter<span class="sy0">--;</span>
<span class="br0">}</span>
 
document.<span class="me1">write</span><span class="br0">(</span>factorial<span class="br0">)</span><span class="sy0">;</span>
</pre></div>
</div>
<h3> <span class="mw-headline" id="Lua"><a href="http://en.m.wikipedia.org/wiki/Lua_(programming_language)" title="Lua (programming language)">Lua</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="lua source-lua">
<pre class="de1">
counter <span class="sy0">=</span> <span class="nu0">5</span>
factorial <span class="sy0">=</span> <span class="nu0">1</span>
 
<span class="kw1">while</span> counter <span class="sy0">&gt;</span> <span class="nu0">0</span> <span class="kw1">do</span>
  factorial <span class="sy0">=</span> factorial <span class="sy0">*</span> counter
  counter <span class="sy0">=</span> counter <span class="sy0">-</span> <span class="nu0">1</span>
<span class="kw1">end</span>
 
<span class="kw3">print</span><span class="br0">(</span>factorial<span class="br0">)</span>
</pre></div>
</div>
<h3> <span class="mw-headline" id="MATLAB"><a href="MATLAB" title="MATLAB">MATLAB</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="matlab source-matlab">
<pre class="de1">
counter = <span class="nu0">5</span>;
<span class="kw2">factorial</span> = <span class="nu0">1</span>;
 
<span class="kw1">while</span> <span class="br0">(</span>counter &gt; <span class="nu0">0</span><span class="br0">)</span>
  <span class="kw2">factorial</span> = <span class="kw2">factorial</span> * counter;      <span class="co1">%Multiply</span>
  counter = counter - <span class="nu0">1</span>;                <span class="co1">%Decrement</span>
<span class="kw1">end</span>
 
<span class="kw2">factorial</span>
</pre></div>
</div>
<h3> <span class="mw-headline" id="Mathematica"><a href="Mathematica" title="Mathematica">Mathematica</a></span></h3>
<pre>
Block[{counter=5,factorial=1},          (*localize counter and factorial*)
        While[counter&gt;0,                (*While loop*)
               factorial*=counter;      (*Multiply*)
               counter--;               (*Decrement*)
             ];
     factorial
    ]
</pre>
<h3> <span class="mw-headline" id="Oberon.2C_Oberon-2.2C_Oberon-07.2C_or_Component_Pascal"><a href="http://en.m.wikipedia.org/wiki/Oberon_(programming_language)" title="Oberon (programming language)">Oberon</a>, <a href="http://en.m.wikipedia.org/wiki/Oberon-2" title="Oberon-2" class="mw-redirect">Oberon-2</a>, <span class="new" title="Oberon-07 (page does not exist)">Oberon-07</span>, or <a href="http://en.m.wikipedia.org/wiki/Component_Pascal" title="Component Pascal">Component Pascal</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="oberon2 source-oberon2">
<pre class="de1">
<span class="kw1">MODULE</span> Factorial;
<span class="kw1">IMPORT</span> Out;
<span class="kw1">VAR</span>
  Counter<span class="sy0">,</span> Factorial<span class="sy0">:</span> <span class="kw4">INTEGER</span>;
<span class="kw1">BEGIN</span>
  Counter <span class="sy0">:=</span> <span class="nu0">5</span>;
  Factorial <span class="sy0">:=</span> <span class="nu0">1</span>;
  <span class="kw1">WHILE</span> Counter &gt; <span class="nu0">0</span> <span class="kw1">DO</span>
    Factorial <span class="sy0">:=</span> Factorial <span class="sy0">*</span> Counter;
    <span class="kw3">DEC</span><span class="br0">(</span>Counter<span class="br0">)</span>
  <span class="kw1">END</span>;
  Out.<span class="me1">Int</span><span class="br0">(</span>Factorial<span class="sy0">,</span><span class="nu0">0</span><span class="br0">)</span>
<span class="kw1">END</span> Factorial.
</pre></div>
</div>
<h3> <span class="mw-headline" id="Maya_Embedded_Language"><a href="http://en.m.wikipedia.org/wiki/Maya_Embedded_Language" title="Maya Embedded Language">Maya Embedded Language</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="html4strict source-html4strict">
<pre class="de1">
int $counter = 5;
int $factorial = 1;
 
int $multiplication;
 
while ($counter &gt; 0)
{
    $multiplication = ($factorial * $counter);
 
    $counter -= 1;
 
    print ("Counter is: " + $counter + ", multiplication is: " + $multiplication + "\n");
}
</pre></div>
</div>
<p><br></p>
<h3> <span class="mw-headline" id="Pascal"><a href="http://en.m.wikipedia.org/wiki/Pascal_programming_language" title="Pascal programming language" class="mw-redirect">Pascal</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="pascal source-pascal">
<pre class="de1">
<span class="kw1">program</span> Factorial1<span class="sy1">;</span>
<span class="kw1">var</span>
  Counter<span class="sy1">,</span> Factorial<span class="sy1">:</span> <span class="kw4">integer</span><span class="sy1">;</span>
<span class="kw1">begin</span>
  Counter <span class="sy1">:</span><span class="sy3">=</span> <span class="nu0">5</span><span class="sy1">;</span>
  Factorial <span class="sy1">:</span><span class="sy3">=</span> <span class="nu0">1</span><span class="sy1">;</span>
  <span class="kw1">while</span> Counter &gt; <span class="nu0">0</span> <span class="kw1">do</span>
  <span class="kw1">begin</span>
    Factorial <span class="sy1">:</span><span class="sy3">=</span> Factorial <span class="sy3">*</span> Counter<span class="sy1">;</span>
    Counter <span class="sy1">:</span><span class="sy3">=</span> Counter <span class="sy3">-</span> <span class="nu0">1</span>
  <span class="kw1">end</span><span class="sy1">;</span>
  <span class="kw3">WriteLn</span><span class="br0">(</span>Factorial<span class="br0">)</span>
<span class="kw1">end</span><span class="sy1">.</span>
</pre></div>
</div>
<h3> <span class="mw-headline" id="Perl"><a href="Perl" title="Perl">Perl</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="perl source-perl">
<pre class="de1">
<span class="kw1">my</span> <span class="re0">$counter</span>   <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">;</span>
<span class="kw1">my</span> <span class="re0">$factorial</span> <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
 
<span class="kw1">while</span> <span class="br0">(</span> <span class="re0">$counter</span> <span class="sy0">&gt;</span> <span class="nu0">0</span> <span class="br0">)</span> <span class="br0">{</span>
    <span class="re0">$factorial</span> <span class="sy0">*=</span> <span class="re0">$counter</span><span class="sy0">--;</span> <span class="co1"># Multiply, then decrement</span>
<span class="br0">}</span>
 
<span class="kw3">print</span> <span class="re0">$factorial</span><span class="sy0">;</span>
</pre></div>
</div>
<p>While loops are frequently used for reading data line by line (as defined by the <code>$/</code> line separator) from open filehandles:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="perl source-perl">
<pre class="de1">
<span class="kw3">open</span> IN<span class="sy0">,</span> <span class="st0">"&lt;test.txt"</span><span class="sy0">;</span>
<span class="kw1">while</span> <span class="br0">(</span> <span class="re4">&lt;IN&gt;</span> <span class="br0">)</span> <span class="br0">{</span>
  <span class="kw3">print</span><span class="sy0">;</span>
<span class="br0">}</span>
<span class="kw3">close</span> IN<span class="sy0">;</span>
</pre></div>
</div>
<h3> <span class="mw-headline" id="PHP"><a href="PHP" title="PHP">PHP</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="php source-php">
<pre class="de1">
<span class="re0">$counter</span> <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">;</span>
<span class="re0">$factorial</span> <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
<span class="kw1">while</span><span class="br0">(</span><span class="re0">$counter</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">)</span> <span class="br0">{</span>
  <span class="re0">$factorial</span> <span class="sy0">*=</span> <span class="re0">$counter</span><span class="sy0">;</span> <span class="co1">// Multiply first.</span>
  <span class="re0">$counter</span><span class="sy0">--;</span> <span class="co1">// then decrement.</span>
<span class="br0">}</span>
<span class="kw1">print</span> <span class="re0">$factorial</span><span class="sy0">;</span>
</pre></div>
</div>
<h3> <span class="mw-headline" id="PL.2FI"><a href="PL/I" title="PL/I">PL/I</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="pli source-pli">
<pre class="de1">
<span class="kw1">declare</span> <span class="kw1">counter</span>   <span class="kw1">fixed</span> <span class="kw1">initial</span><span class="br0">(</span><span class="nu0">5</span><span class="br0">)</span><span class="sy0">;</span>
<span class="kw1">declare</span> factorial <span class="kw1">fixed</span> <span class="kw1">initial</span><span class="br0">(</span><span class="nu0">1</span><span class="br0">)</span><span class="sy0">;</span>
 
<span class="kw1">do</span> <span class="kw1">while</span><span class="br0">(</span><span class="kw1">counter</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">)</span>
  factorial <span class="sy0">=</span> factorial <span class="sy0">*</span> <span class="kw1">counter</span><span class="sy0">;</span>
  <span class="kw1">counter</span> <span class="sy0">=</span> <span class="kw1">counter</span> <span class="sy0">-</span> <span class="nu0">1</span><span class="sy0">;</span>
  <span class="kw1">end</span><span class="sy0">;</span>
</pre></div>
</div>
<h3> <span class="mw-headline" id="Python"><a href="Python_(programming_language)" title="Python (programming language)">Python</a></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
counter <span class="sy0">=</span> <span class="nu0">5</span>                            <span class="co1"># Set the value to 5 </span>
factorial <span class="sy0">=</span> <span class="nu0">1</span>                          <span class="co1"># Set the value to 1</span>
 
<span class="kw1">while</span> counter <span class="sy0">&gt;</span> <span class="nu0">0</span>:                      <span class="co1"># While counter(5) is greater than 0  </span>
      factorial *<span class="sy0">=</span> counter              <span class="co1"># Set new value of factorial to </span>
                                        <span class="co1"># factorial x counter.</span>
 
      counter -<span class="sy0">=</span> <span class="nu0">1</span>                      <span class="co1"># Set the new value of counter to</span>
                                        <span class="co1"># counter - 1.</span>
 
<span class="kw1">print</span> factorial                         <span class="co1"># Print the value of factorial.</span>
</pre></div>
</div>
<p>Non Terminating While Loop:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">while</span> <span class="kw2">True</span>:
    <span class="kw1">print</span> <span class="st0">"Help! I'm stuck in a loop!"</span>
</pre></div>
</div>
<h3> <span class="mw-headline" id="Racket"><a href="http://en.m.wikipedia.org/wiki/Racket_(programming_language)" title="Racket (programming language)">Racket</a></span></h3>
<p>In Racket, as in other <a href="http://en.m.wikipedia.org/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> implementations, a "named-let" is a popular way to implement loops:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="scheme source-scheme">
<pre class="de1">
#lang racket
<span class="br0">(</span><span class="kw1">define</span> counter <span class="nu0">5</span><span class="br0">)</span>
<span class="br0">(</span><span class="kw1">define</span> factorial <span class="nu0">1</span><span class="br0">)</span>
<span class="br0">(</span><span class="kw1">let</span> loop <span class="br0">(</span><span class="br0">)</span>
  <span class="br0">(</span>when <span class="br0">(</span><span class="sy0">&gt;</span> counter <span class="nu0">0</span><span class="br0">)</span>
    <span class="br0">(</span><span class="kw1">set!</span> factorial <span class="br0">(</span><span class="sy0">*</span> factorial counter<span class="br0">)</span><span class="br0">)</span>
    <span class="br0">(</span><span class="kw1">set!</span> counter <span class="br0">(</span>sub1 counter<span class="br0">)</span><span class="br0">)</span>
    <span class="br0">(</span>loop<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="br0">(</span>displayln factorial<span class="br0">)</span>
</pre></div>
</div>
<p>Using a macro system, implementing a while-loop is a trivial exercise (commonly used to introduce macros):</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="scheme source-scheme">
<pre class="de1">
#lang racket
<span class="br0">(</span>define<span class="sy0">-</span>syntax<span class="sy0">-</span>rule <span class="br0">(</span>while test body ...<span class="br0">)</span> <span class="co1">; implements a while loop</span>
  <span class="br0">(</span><span class="kw1">let</span> loop <span class="br0">(</span><span class="br0">)</span> <span class="br0">(</span>when test body ... <span class="br0">(</span>loop<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="br0">(</span><span class="kw1">define</span> counter <span class="nu0">5</span><span class="br0">)</span>
<span class="br0">(</span><span class="kw1">define</span> factorial <span class="nu0">1</span><span class="br0">)</span>
<span class="br0">(</span>while <span class="br0">(</span><span class="sy0">&gt;</span> counter <span class="nu0">0</span><span class="br0">)</span>
  <span class="br0">(</span><span class="kw1">set!</span> factorial <span class="br0">(</span><span class="sy0">*</span> factorial counter<span class="br0">)</span><span class="br0">)</span>
  <span class="br0">(</span><span class="kw1">set!</span> counter <span class="br0">(</span>sub1 counter<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="br0">(</span>displayln factorial<span class="br0">)</span>
</pre></div>
</div>
<p>But note that an imperative programming style is often discouraged in Racket (as in Scheme).</p>
<h3> <span class="mw-headline" id="Smalltalk"><a href="Smalltalk" title="Smalltalk">Smalltalk</a></span></h3>
<p>Contrary to other languages, in Smalltalk a while loop is not a <a href="http://en.m.wikipedia.org/wiki/Language_construct" title="Language construct">language construct</a> but defined in the class <code>BlockClosure</code> as a method with one parameter, the body as a <a href="http://en.m.wikipedia.org/wiki/Closure_(computer_science)" title="Closure (computer science)">closure</a>, using self as the condition.</p>
<p>Smalltalk also has a corresponding whileFalse: method.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="smalltalk source-smalltalk">
<pre class="de1">
|<span class="re3"> count factorial </span>|
<span class="re6">count</span> <span class="sy0">:=</span> <span class="re5">5</span>.
<span class="re5">factorial</span> <span class="sy0">:=</span> <span class="re5">1</span>.
<span class="br0">[</span> <span class="re5">count</span> &gt; <span class="nu0">0</span> <span class="br0">]</span> whileTrue: 
    <span class="br0">[</span> <span class="re5">factorial</span> <span class="sy0">:=</span> <span class="re5">factorial</span> * <span class="re5">count</span>.
    <span class="re5">count</span> <span class="sy0">:=</span> <span class="re5">count</span> - <span class="re5">1</span> <span class="br0">]</span>.
<span class="re0">Transcript</span> show: <span class="re5">factorial</span>
</pre></div>
</div>
<h3> <span class="mw-headline" id="Tcl_.28Tool_command_language.29"><a href="http://en.m.wikipedia.org/wiki/Tcl" title="Tcl">Tcl</a> (Tool command language)</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="tcl source-tcl">
<pre class="de1">
<span class="kw1">set</span> counter <span class="nu0">5</span>
<span class="kw1">set</span> factorial <span class="nu0">1</span>
 
<span class="kw1">while</span> <span class="br0">{</span><span class="re0">$counter</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">}</span> <span class="br0">{</span>
  <span class="kw1">set</span> factorial <span class="br0">[</span><span class="kw1">expr</span> <span class="re0">$factorial</span> <span class="sy0">*</span> <span class="re0">$counter</span><span class="br0">]</span> 
  <span class="kw2">incr</span> counter -<span class="nu0">1</span> 
<span class="br0">}</span>
 
<span class="kw2">puts</span> <span class="re0">$factorial</span>
</pre></div>
</div>
<h3> <span class="mw-headline" id="Windows_PowerShell"><a href="http://en.m.wikipedia.org/wiki/Windows_PowerShell" title="Windows PowerShell">Windows PowerShell</a></span></h3>
<pre>
$counter = 5
$factorial = 1
while ($counter -gt 0) {
  $factorial *= $counter-- # Multiply, then decrement.
}
Write-Output $factorial
</pre>
<h2> <span class="mw-headline" id="See_also">See also</span></h2>
<ul><li><a href="Do_while_loop" title="Do while loop">Do while loop</a></li>
<li><a href="For_loop" title="For loop">For loop</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Foreach" title="Foreach" class="mw-redirect">Foreach</a></li>
</ul>						<div class="section" id="mw-mf-language-section">
				<h2 id="section_language" class="section_heading">Read in another language</h2>
				<div id="content_language" class="content_block">
					<p>This article is available in 12 languages</p>
					<ul id="mw-mf-language-selection"><li><a href="http://ca.m.wikipedia.org/wiki/Bucle_While" lang="ca" hreflang="ca">català</a></li><li><a href="http://cs.m.wikipedia.org/wiki/Cyklus_while-do" lang="cs" hreflang="cs">česky</a></li><li><a href="http://da.m.wikipedia.org/wiki/While-l%C3%B8kke" lang="da" hreflang="da">dansk</a></li><li><a href="http://es.m.wikipedia.org/wiki/Bucle_while" lang="es" hreflang="es">español</a></li><li><a href="http://eu.m.wikipedia.org/wiki/While_begizta" lang="eu" hreflang="eu">euskara</a></li><li><a href="http://ko.m.wikipedia.org/wiki/While_%EB%A3%A8%ED%94%84" lang="ko" hreflang="ko">한국어</a></li><li><a href="http://hr.m.wikipedia.org/wiki/While_petlja" lang="hr" hreflang="hr">hrvatski</a></li><li><a href="http://ja.m.wikipedia.org/wiki/While%E6%96%87" lang="ja" hreflang="ja">日本語</a></li><li><a href="http://pt.m.wikipedia.org/wiki/Estrutura_de_repeti%C3%A7%C3%A3o" lang="pt" hreflang="pt">português</a></li><li><a href="http://fi.m.wikipedia.org/wiki/Toistorakenne" lang="fi" hreflang="fi">suomi</a></li><li><a href="http://sv.m.wikipedia.org/wiki/While" lang="sv" hreflang="sv">svenska</a></li><li><a href="http://zh.m.wikipedia.org/wiki/While%E8%BF%B4%E5%9C%88" lang="zh" hreflang="zh">中文</a></li></ul>
				</div>
			</div>			</div><!-- close #content_wrapper -->
			<div id="footer">
			<h2 class="section_heading" id="section_footer">
		<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/logo-copyright-en.png" class="license" alt="Wikipedia ®" />	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=While_loop&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=While_loop&amp;action=history">contributors</a> like you<br>
				Content available under <a href="Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>				<span>| <a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span>
			</li>
		</ul>
		<ul class="links">
						<li>
			<a href='http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=While+loop&amp;feedbacksource=MobileFrontend'>
				Contact Wikipedia			</a>
			</li><li>
						<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div><!-- close footer.div / #content_footer -->
	</div><!-- close #footer -->
					</div><!-- close #mw-mf-page-center -->
		</div><!-- close #mw-mf-viewport -->
		
					</body>
	</html>