<!doctype html>
	<html lang="en" dir="ltr" class="">
	<head>
		<title>Do while loop - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="robots" content="noindex,nofollow"/>		<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile%7Cmobile.production-only%2Cproduction-jquery%7Cmobile.device.default&amp;only=styles&amp;skin=mobile&amp;version=1352163471&amp;*" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile.site&amp;only=styles&amp;skin=mobile&amp;*" />		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />		<script type="text/javascript">
			var _mwStart = +new Date;
			window._evq = window._evq || [];
			if ( typeof console === 'undefined' ) {
				console = { log: function() {} };
			}
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"mobile-frontend-watchlist-add":"Added $1 to your watchlist","mobile-frontend-watchlist-removed":"Removed $1 from your watchlist","mobile-frontend-watchlist-view":"View your watchlist","mobile-frontend-ajax-random-heading":"Locating knowledge...","mobile-frontend-ajax-random-quote":"Intellectual growth should commence at birth and cease only at death","mobile-frontend-ajax-random-quote-author":"Albert Einstein","mobile-frontend-ajax-random-question":"Read this article?","mobile-frontend-ajax-random-yes":"Yes","mobile-frontend-ajax-random-retry":"Try again","mobile-frontend-ajax-page-loading":"Loading $1","mobile-frontend-page-saving":"Saving $1","mobile-frontend-ajax-page-error":"Whoops! Something went wrong there. Please try refreshing your browser window.","mobile-frontend-meta-data-issues":"This article has some issues","mobile-frontend-meta-data-issues-header":"Issues","expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-footer":"<a href="http://en.m.wikipedia.org/wiki/\&quot;\/wiki\/Special:MobileOptions\/Language\&quot;">Note: This article may not be written in your preferred language. You can see which languages Wikipedia supports by clicking here.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"action":"","authenticated":false,"scriptPath":"\/w","shim":"\/\/bits.wikimedia.org\/static-1.21wmf3\/extensions\/MobileFrontend\/stylesheets\/common\/images\/blank.gif","pageUrl":"\/wiki\/$1","beta":null,"title":"Do while loop","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			function _mwLogEvent( data, additionalInformation ) {
				var timestamp = + new Date;
				var ev = { event_id: 'mobile', delta: timestamp - _mwStart, data: data, beta: mwMobileFrontendConfig.settings.beta,
					session: _mwStart, page: mwMobileFrontendConfig.settings.title, info: additionalInformation || '' };
				_evq.push( ev );
				console.log( typeof JSON === 'undefined' ? ev : JSON.stringify( ev ) );
			}
		</script>
				<link rel="canonical" href="http://en.wikipedia.org/wiki/Do_while_loop" >
	</head>
	<body class="mobile live">
				<div id="mw-mf-viewport">
		<div id="mw-mf-page-left">
		<div id='mw-mf-content-left'>
		<ul id="mw-mf-menu-main">
			<li class='icon'><a href="Main_Page"
				title="Home">
				Home</a></li>
			<li class='icon2'><a href="Special:Random#mw-mf-page-left" id="randomButton"
				title="Random"
				class="button">Random</a></li>
						<li class='icon5'>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions&amp;returnto=Do+while+loop"
					title="Settings">
				Settings				</a>
			</li>
					</ul>
		</div>
		</div>
		<div id='mw-mf-page-center'>
									<div id="mw-mf-header">
		<a title="Open main menu" href="Special:MobileMenu#mw-mf-page-left" id="mw-mf-main-menu-button">				<img alt="menu"
				src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif">
		</a>			<form id="mw-mf-searchForm" action="http://en.m.wikipedia.org/w/index.php" class="search_bar" method="get">
			<input type="hidden" value="Special:Search" name="title" />
			<div id="mw-mf-sq" class="divclearable">
				<input type="search" name="search" id="mw-mf-search" size="22" value="" autocomplete="off" maxlength="1024" class="search"
					placeholder="Search Wikipedia"
					/>
				<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear"/>
				<input class='searchSubmit' type="submit" value="Go">
			</div>
		</form>
	</div>
	<div id="results"></div>
		<div class='show ' id='content_wrapper'>
						<h1 id="firstHeading">Do while loop</h1>			
<table class="metadata plainlinks ambox ambox-content ambox-Refimprove" style=""><tr>
<td class="mbox-image">
<div style="width: 52px;"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x"></div>
</td>
<td class="mbox-text" style=""><span class="mbox-text-span">This article <b>needs additional <a href="Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">citations</a> for <a href="Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Do_while_loop&amp;action=edit">improve this article</a> by adding citations to <a href="http://en.m.wikipedia.org/wiki/Wikipedia:Identifying_reliable_sources" title="Wikipedia:Identifying reliable sources">reliable sources</a>. Unsourced material may be <a href="http://en.m.wikipedia.org/wiki/Template:Citation_needed" title="Template:Citation needed">challenged</a> and <a href="Wikipedia:Verifiability#Burden_of_evidence" title="Wikipedia:Verifiability">removed</a>.</span> <small><i>(December 2009)</i></small> </span></td>
</tr></table>
<div class="thumb tright">
<div class="thumbinner" style="width:222px;">
<a href="http://en.m.wikipedia.org/w/index.php?title=File:Do-while-loop-diagram.svg&amp;page=1" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Do-while-loop-diagram.svg/220px-Do-while-loop-diagram.svg.png" width="220" height="416" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/9/92/Do-while-loop-diagram.svg/330px-Do-while-loop-diagram.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/9/92/Do-while-loop-diagram.svg/440px-Do-while-loop-diagram.svg.png 2x"></a>
<div class="thumbcaption">

Do While loop diagram</div>
</div>
</div>
<p>In most <a href="http://en.m.wikipedia.org/wiki/Computer_programming" title="Computer programming">computer programming</a> languages, a <b>do while loop</b>, sometimes just called a <b>while loop</b>, is a <a href="http://en.m.wikipedia.org/wiki/Control_flow" title="Control flow">control flow</a> <a href="Statement_(programming)" title="Statement (programming)" class="mw-redirect">statement</a> that allows code to be executed once based on a given <a href="Boolean_datatype" title="Boolean datatype" class="mw-redirect">Boolean</a> condition. Note though that unlike most languages, <a href="Fortran" title="Fortran">Fortran</a>'s do loop is actually the same to the <a href="For_loop" title="For loop">for loop</a>.</p>
<p>The <i>do while</i> construct consists of a process symbol and a condition. First, the code within the block is executed, and then the condition is evaluated. If the condition is <a href="http://en.m.wikipedia.org/wiki/Truth" title="Truth">true</a> the code within the block is executed again. This repeats until the condition becomes <a href="http://en.m.wikipedia.org/wiki/False" title="False">false</a>. Because do while loops check the condition after the block is executed, the control structure is often also known as a <b>post-test loop</b>. Contrast with the <a href="While_loop" title="While loop">while loop</a>, which tests the condition before the code within the block is executed.</p>
<p>It is possible, and in some cases desirable, for the condition to always evaluate to true, creating an <a href="http://en.m.wikipedia.org/wiki/Infinite_loop" title="Infinite loop">infinite loop</a>. When such a loop is created intentionally, there is usually another control structure (such as a <a href="http://en.m.wikipedia.org/wiki/Control_flow#Early_exit_from_loops" title="Control flow">break statement</a>) that allows termination of the loop.</p>
<p>Some languages may use a different naming convention for this type of loop. For example, the <a href="http://en.m.wikipedia.org/wiki/Pascal_programming_language" title="Pascal programming language" class="mw-redirect">Pascal</a> language has a "<i>repeat until</i>" loop, which continues to run <i>until</i> the control expression is true (and then terminates) — whereas a "while" loop runs <i>while</i> the control expression is true (and terminates once the expression becomes false). Bash did not support this control flow statement.</p>
<h2> <span class="mw-headline" id="Equivalent_constructs">Equivalent constructs</span>
</h2>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw1">do</span> <span class="br0">{</span>
   do_work<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span> <span class="kw1">while</span> <span class="br0">(</span>condition<span class="br0">)</span><span class="sy0">;</span>
</pre>
</div>
</div>
<p>is equivalent to</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
do_work<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
<span class="kw1">while</span> <span class="br0">(</span>condition<span class="br0">)</span> <span class="br0">{</span>
   do_work<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre>
</div>
</div>
<p>that (as long as the <i>continue</i> statement is not used) is technically equivalent to the following (though these examples are not typical or modern style):</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw1">while</span> <span class="br0">(</span><span class="kw2">true</span><span class="br0">)</span> <span class="br0">{</span>
   do_work<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
   <span class="kw1">if</span> <span class="br0">(</span><span class="sy0">!</span>condition<span class="br0">)</span> <span class="kw2">break</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre>
</div>
</div>
<p>or</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
LOOPSTART<span class="sy0">:</span>
   do_work<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
   <span class="kw1">if</span> <span class="br0">(</span>condition<span class="br0">)</span> <span class="kw1">goto</span> LOOPSTART<span class="sy0">;</span>
</pre>
</div>
</div>
<h2> <span class="mw-headline" id="Demonstrating_do_while_loops">Demonstrating do while loops</span>
</h2>
<p>These example programs calculate the <a href="http://en.m.wikipedia.org/wiki/Factorial" title="Factorial">factorial</a> of 5 using their respective languages' syntax for a do-while loop.</p>
<h3> <span class="mw-headline" id="ActionScript_3">ActionScript 3</span>
</h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="actionscript source-actionscript">
<pre class="de1">
<span class="kw2">var</span> counter:<span class="kw3">int</span> = <span class="nu0">5</span>;
<span class="kw2">var</span> factorial:<span class="kw3">int</span> = <span class="nu0">1</span>;
<span class="kw1">do</span> <span class="br0">{</span>
  factorial <span class="sy0">*</span>= counter--; <span class="coMULTI">/* Multiply, then decrement. */</span>
<span class="br0">}</span> <span class="kw1">while</span> <span class="br0">(</span>counter <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">)</span>;
<span class="kw3">trace</span><span class="br0">(</span>factorial<span class="br0">)</span>;
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="Ada">Ada</span>
</h3>
<table class="metadata mbox-small plainlinks" style="border:1px solid #aaa; background-color:#f9f9f9;"><tr>
<td class="mbox-image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/60px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/80px-Wikibooks-logo-en-noslogan.svg.png 2x"></td>
<td class="mbox-text plainlist" style="">The Wikibook <i><a href="http://en.wikibooks.org/wiki/Ada_Programming" class="extiw" title="wikibooks:Ada Programming">Ada_Programming</a></i> has a page on the topic of: <i><b><a href="http://en.wikibooks.org/wiki/Ada_Programming/Control" class="extiw" title="wikibooks:Ada Programming/Control">Control</a></b></i>
</td>
</tr></table>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="ada source-ada">
<pre class="de1">
<span class="kw3">with</span> Ada.<span class="me1">Integer_Text_IO</span>;
 
<span class="kw3">procedure</span> Factorial <span class="kw1">is</span>
  Counter   : Integer := <span class="nu0">5</span>;
  Factorial : Integer := <span class="nu0">1</span>;
<span class="kw1">begin</span>
  <span class="kw1">loop</span>
    Factorial := Factorial * Counter;
    Counter   := Counter - <span class="nu0">1</span>;
    <span class="kw3">exit</span> <span class="kw3">when</span> Counter = <span class="nu0">0</span>;
  <span class="kw1">end</span> <span class="kw1">loop</span>;
 
  Ada.<span class="me1">Integer_Text_IO</span>.<span class="me1">Put</span> <span class="br0">(</span>Factorial<span class="br0">)</span>;
<span class="kw1">end</span> Factorial;
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="C.23">C#</span>
</h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="csharp source-csharp">
<pre class="de1">
<span class="kw4">int</span> counter <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">;</span>
<span class="kw4">int</span> factorial <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
<span class="kw1">do</span> 
<span class="br0">{</span>
  factorial <span class="sy0">*=</span> counter<span class="sy0">--;</span> <span class="coMULTI">/* Multiply, then decrement. */</span>
<span class="br0">}</span> 
<span class="kw1">while</span> <span class="br0">(</span>counter <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span>
<span class="kw5">System</span><span class="sy0">.</span><span class="me1">Console</span><span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">(</span>factorial<span class="br0">)</span><span class="sy0">;</span>
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="C">C</span>
</h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">int</span> counter <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">;</span>
<span class="kw4">int</span> factorial <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
<span class="kw1">do</span> <span class="br0">{</span>
  factorial <span class="sy0">*=</span> counter<span class="sy0">--;</span> <span class="coMULTI">/* Multiply, then decrement. */</span>
<span class="br0">}</span> <span class="kw1">while</span> <span class="br0">(</span>counter <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span>
<span class="kw3">printf</span><span class="br0">(</span><span class="st0">"factorial of 5 is %d<span class="es1">\n</span>"</span><span class="sy0">,</span> factorial<span class="br0">)</span><span class="sy0">;</span>
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="Fortran">Fortran</span>
</h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="fortran source-fortran">
<pre class="de1">
<span class="kw1">program</span> FactorialProg
  <span class="kw3">integer</span> <span class="sy0">::</span> <span class="me2">counter</span> <span class="sy0">=</span> <span class="nu0">5</span>
  <span class="kw3">integer</span> <span class="sy0">::</span> <span class="me2">factorial</span> <span class="sy0">=</span> <span class="nu0">1</span>
  <span class="kw1">do</span>
    factorial <span class="sy0">=</span> factorial <span class="sy0">*</span> counter
    counter <span class="sy0">=</span> counter <span class="sy0">-</span> <span class="nu0">1</span>
    <span class="kw1">if</span> <span class="br0">(</span>counter <span class="sy0">==</span> <span class="nu0">0</span><span class="br0">)</span> <span class="kw1">exit</span>
  <span class="kw1">end</span> <span class="kw1">do</span>
  print <span class="sy0">*</span>, factorial
<span class="kw1">end</span> <span class="kw1">program</span> FactorialProg
</pre>
</div>
</div>
<p>With <b>Fortran 90</b> and later, we use the <a href="Do_while_loop#Equivalent_constructs" title="Do while loop">equivalent construct</a> mentioned above. Using it is better practice, since it is immediately apparent that this is a while-loop.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="fortran source-fortran">
<pre class="de1">
<span class="kw1">program</span> FactorialProg
  <span class="kw3">integer</span> <span class="sy0">::</span> <span class="me2">counter</span> <span class="sy0">=</span> <span class="nu0">5</span>
  <span class="kw3">integer</span> <span class="sy0">::</span> <span class="me2">factorial</span> <span class="sy0">=</span> <span class="nu0">1</span>
  factorial <span class="sy0">=</span> factorial <span class="sy0">*</span> counter
  counter <span class="sy0">=</span> counter <span class="sy0">-</span> <span class="nu0">1</span>
  <span class="kw1">do</span> <span class="kw1">while</span> <span class="br0">(</span>counter &gt; <span class="nu0">0</span><span class="br0">)</span>
    factorial <span class="sy0">=</span> factorial <span class="sy0">*</span> counter
    counter <span class="sy0">=</span> counter <span class="sy0">-</span> <span class="nu0">1</span>
  <span class="kw1">end</span> <span class="kw1">do</span>
  print <span class="sy0">*</span>, factorial
<span class="kw1">end</span> <span class="kw1">program</span> FactorialProg
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="Java">Java</span>
</h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="java source-java">
<pre class="de1">
<span class="kw4">int</span> counter <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">;</span>
<span class="kw4">int</span> factorial <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
<span class="kw1">do</span> <span class="br0">{</span>
  factorial <span class="sy0">*=</span> counter<span class="sy0">--;</span> <span class="coMULTI">/* Multiply, then decrement. */</span>
<span class="br0">}</span> <span class="kw1">while</span> <span class="br0">(</span>counter <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span>factorial<span class="br0">)</span><span class="sy0">;</span>
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="JavaScript">JavaScript</span>
</h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="javascript source-javascript">
<pre class="de1">
<span class="kw1">var</span> counter <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">;</span>
<span class="kw1">var</span> factorial <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
<span class="kw1">do</span> <span class="br0">{</span>
  factorial <span class="sy0">*=</span> counter<span class="sy0">--;</span>
<span class="br0">}</span> while <span class="br0">(</span>counter <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span>
console.<span class="me1">log</span><span class="br0">(</span>factorial<span class="br0">)</span><span class="sy0">;</span>
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="Perl">Perl</span>
</h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="perl source-perl">
<pre class="de1">
<span class="re0">$counter</span> <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">;</span>
<span class="re0">$factorial</span> <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
<span class="kw1">do</span> <span class="br0">{</span>
     <span class="re0">$factorial</span> <span class="sy0">*=</span> <span class="re0">$counter</span><span class="sy0">--;</span>
<span class="br0">}</span> <span class="kw1">while</span> <span class="br0">(</span><span class="re0">$counter</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span>
<span class="kw3">print</span> <span class="re0">$factorial</span><span class="sy0">;</span>
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="PHP">PHP</span>
</h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="php source-php">
<pre class="de1">
<span class="kw2">&lt;?php</span>
<span class="re0">$counter</span> <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">;</span>
<span class="re0">$factorial</span> <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
<span class="kw1">do</span> <span class="br0">{</span>
     <span class="re0">$factorial</span> <span class="sy0">*=</span> <span class="re0">$counter</span><span class="sy0">--;</span>
<span class="br0">}</span> <span class="kw1">while</span> <span class="br0">(</span><span class="re0">$counter</span> <span class="sy0">&gt;</span> <span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span>
<span class="kw1">echo</span> <span class="re0">$factorial</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span>
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="PL.2FI">PL/I</span>
</h3>
<p>The <a href="PL/I" title="PL/I">PL/I</a> DO statement subsumes the functions of the post-test loop (<i>do until</i>), the pre-test loop (<i>do while</i>), and the <a href="For_loop" title="For loop">for loop</a>. All functions can be included in a single statement. The example shows only the "do until" syntax.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="pli source-pli">
<pre class="de1">
<span class="kw1">declare</span> <span class="kw1">counter</span>   <span class="kw1">fixed</span> <span class="kw1">initial</span><span class="br0">(</span><span class="nu0">5</span><span class="br0">)</span><span class="sy0">;</span>
<span class="kw1">declare</span> factorial <span class="kw1">fixed</span> <span class="kw1">initial</span><span class="br0">(</span><span class="nu0">1</span><span class="br0">)</span><span class="sy0">;</span>
<span class="kw1">do</span> <span class="kw1">until</span><span class="br0">(</span>counter<span class="sy0">&lt;=</span><span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span>
  factorial <span class="sy0">=</span> factorial <span class="sy0">*</span> <span class="kw1">counter</span><span class="sy0">;</span>
  <span class="kw1">counter</span> <span class="sy0">=</span> <span class="kw1">counter</span> <span class="sy0">-</span> <span class="nu0">1</span><span class="sy0">;</span>
  <span class="kw1">end</span><span class="sy0">;</span>
<span class="kw1">put</span><span class="br0">(</span>factorial<span class="br0">)</span><span class="sy0">;</span>
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="Racket">Racket</span>
</h3>
<p>In Racket, as in other <a href="http://en.m.wikipedia.org/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> implementations, a "named-let" is a popular way to implement loops:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="scheme source-scheme">
<pre class="de1">
#lang racket
<span class="br0">(</span><span class="kw1">define</span> counter <span class="nu0">5</span><span class="br0">)</span>
<span class="br0">(</span><span class="kw1">define</span> factorial <span class="nu0">1</span><span class="br0">)</span>
<span class="br0">(</span><span class="kw1">let</span> loop <span class="br0">(</span><span class="br0">)</span>
  <span class="br0">(</span><span class="kw1">set!</span> factorial <span class="br0">(</span><span class="sy0">*</span> factorial counter<span class="br0">)</span><span class="br0">)</span>
  <span class="br0">(</span><span class="kw1">set!</span> counter <span class="br0">(</span>sub1 counter<span class="br0">)</span><span class="br0">)</span>
  <span class="br0">(</span>when <span class="br0">(</span><span class="sy0">&gt;</span> counter <span class="nu0">0</span><span class="br0">)</span> <span class="br0">(</span>loop<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="br0">(</span>displayln factorial<span class="br0">)</span>
</pre>
</div>
</div>
<p>Compare this with the first example of the <a href="While_loop#Racket" title="While loop">while loop</a> example for Racket.</p>
<h3> <span class="mw-headline" id="Ruby">Ruby</span>
</h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="ruby source-ruby">
<pre class="de1">
counter = <span class="nu0">5</span>
factorial = <span class="nu0">1</span>
<span class="kw1">begin</span>
  factorial <span class="sy0">*</span>= counter
  counter <span class="sy0">-</span>= <span class="nu0">1</span>
<span class="kw1">end</span> <span class="kw1">while</span> counter <span class="sy0">&gt;</span> <span class="nu0">0</span>
<span class="kw3">puts</span> factorial
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="Smalltalk">Smalltalk</span>
</h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="smalltalk source-smalltalk">
<pre class="de1">
|<span class="re3"> counter factorial </span>|
<span class="re6">counter</span> <span class="sy0">:=</span> <span class="re5">5</span>.
<span class="re5">factorial</span> <span class="sy0">:=</span> <span class="re5">1</span>.
<span class="br0">[</span><span class="re5">counter</span> &gt; <span class="nu0">0</span><span class="br0">]</span> whileTrue: 
  <span class="br0">[</span><span class="re5">factorial</span> <span class="sy0">:=</span> <span class="re5">factorial</span> * <span class="re5">counter</span>.
  <span class="re5">counter</span> <span class="sy0">:=</span> <span class="re5">counter</span> - <span class="re5">1</span><span class="br0">]</span>.
<span class="re0">Transcript</span> show: <span class="re5">factorial</span> printString
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="Visual_Basic.Net">Visual Basic.Net</span>
</h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="vb source-vb">
<pre class="de1">
<span class="kw4">Dim</span> counter <span class="kw4">As</span> <span class="kw1">Integer</span> = 5
<span class="kw4">Dim</span> factorial <span class="kw4">As</span> <span class="kw1">Integer</span> = 1
<span class="kw3">Do</span>
   factorial *= counter
   counter -= 1
<span class="kw3">Loop</span> <span class="kw3">While</span> counter &gt; 0
Console.WriteLine(factorial)
</pre>
</div>
</div>
<h2> <span class="mw-headline" id="References">References</span>
</h2>
<p><br></p>
<h2> <span class="mw-headline" id="See_also">See also</span>
</h2>
<ul>
<li><a href="For_loop" title="For loop">For loop</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Foreach" title="Foreach" class="mw-redirect">Foreach</a></li>
<li><a href="While_loop" title="While loop">While loop</a></li>
</ul>

						<div class="section" id="mw-mf-language-section">
				<h2 id="section_language" class="section_heading">Read in another language</h2>
				<div id="content_language" class="content_block">
					<p>This article is available in 8 languages</p>
					<ul id="mw-mf-language-selection"><li><a href="http://ca.m.wikipedia.org/wiki/Bucle_Do-while" lang="ca" hreflang="ca">català</a></li><li><a href="http://cs.m.wikipedia.org/wiki/Cyklus_do-while" lang="cs" hreflang="cs">česky</a></li><li><a href="http://de.m.wikipedia.org/wiki/Schleife_(Programmierung)#Do-While-Schleife" lang="de" hreflang="de">Deutsch</a></li><li><a href="http://es.m.wikipedia.org/wiki/Bucle_do" lang="es" hreflang="es">español</a></li><li><a href="http://eu.m.wikipedia.org/wiki/Repeat_begizta" lang="eu" hreflang="eu">euskara</a></li><li><a href="http://hr.m.wikipedia.org/wiki/Do_while_petlja" lang="hr" hreflang="hr">hrvatski</a></li><li><a href="http://ja.m.wikipedia.org/wiki/Do-while%E6%96%87" lang="ja" hreflang="ja">日本語</a></li><li><a href="http://zh.m.wikipedia.org/wiki/Do-while%E5%BE%AA%E7%8E%AF" lang="zh" hreflang="zh">中文</a></li></ul>
				</div>
			</div>			</div><!-- close #content_wrapper -->
			<div id="footer">
			<h2 class="section_heading" id="section_footer">
		<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/logo-copyright-en.png" class="license" alt="Wikipedia ®" />	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Do_while_loop&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Do_while_loop&amp;action=history">contributors</a> like you<br>
				Content available under <a href="Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>				<span>| <a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span>
			</li>
		</ul>
		<ul class="links">
						<li>
			<a href='http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Do+while+loop&amp;feedbacksource=MobileFrontend'>
				Contact Wikipedia			</a>
			</li><li>
						<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div><!-- close footer.div / #content_footer -->
	</div><!-- close #footer -->
					</div><!-- close #mw-mf-page-center -->
		</div><!-- close #mw-mf-viewport -->
		
					</body>
	</html>