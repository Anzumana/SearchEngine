<!doctype html>
	<html lang="en" dir="ltr" class="">
	<head>
		<title>Inline function - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="robots" content="noindex,nofollow"/>		<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile%7Cmobile.production-only%2Cproduction-jquery%7Cmobile.device.default&amp;only=styles&amp;skin=mobile&amp;version=1352163471&amp;*" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile.site&amp;only=styles&amp;skin=mobile&amp;*" />		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />		<script type="text/javascript">
			var _mwStart = +new Date;
			window._evq = window._evq || [];
			if ( typeof console === 'undefined' ) {
				console = { log: function() {} };
			}
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"mobile-frontend-watchlist-add":"Added $1 to your watchlist","mobile-frontend-watchlist-removed":"Removed $1 from your watchlist","mobile-frontend-watchlist-view":"View your watchlist","mobile-frontend-ajax-random-heading":"Locating knowledge...","mobile-frontend-ajax-random-quote":"Intellectual growth should commence at birth and cease only at death","mobile-frontend-ajax-random-quote-author":"Albert Einstein","mobile-frontend-ajax-random-question":"Read this article?","mobile-frontend-ajax-random-yes":"Yes","mobile-frontend-ajax-random-retry":"Try again","mobile-frontend-ajax-page-loading":"Loading $1","mobile-frontend-page-saving":"Saving $1","mobile-frontend-ajax-page-error":"Whoops! Something went wrong there. Please try refreshing your browser window.","mobile-frontend-meta-data-issues":"This article has some issues","mobile-frontend-meta-data-issues-header":"Issues","expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-footer":"<a href="http://en.m.wikipedia.org/wiki/\&quot;\/wiki\/Special:MobileOptions\/Language\&quot;">Note: This article may not be written in your preferred language. You can see which languages Wikipedia supports by clicking here.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"action":"","authenticated":false,"scriptPath":"\/w","shim":"\/\/bits.wikimedia.org\/static-1.21wmf3\/extensions\/MobileFrontend\/stylesheets\/common\/images\/blank.gif","pageUrl":"\/wiki\/$1","beta":null,"title":"Inline function","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			function _mwLogEvent( data, additionalInformation ) {
				var timestamp = + new Date;
				var ev = { event_id: 'mobile', delta: timestamp - _mwStart, data: data, beta: mwMobileFrontendConfig.settings.beta,
					session: _mwStart, page: mwMobileFrontendConfig.settings.title, info: additionalInformation || '' };
				_evq.push( ev );
				console.log( typeof JSON === 'undefined' ? ev : JSON.stringify( ev ) );
			}
		</script>
				<link rel="canonical" href="http://en.wikipedia.org/wiki/Inline_function" >
	</head>
	<body class="mobile live">
				<div id="mw-mf-viewport">
		<div id="mw-mf-page-left">
		<div id='mw-mf-content-left'>
		<ul id="mw-mf-menu-main">
			<li class='icon'><a href="Main_Page"
				title="Home">
				Home</a></li>
			<li class='icon2'><a href="Special:Random#mw-mf-page-left" id="randomButton"
				title="Random"
				class="button">Random</a></li>
						<li class='icon5'>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions&amp;returnto=Inline+function"
					title="Settings">
				Settings				</a>
			</li>
					</ul>
		</div>
		</div>
		<div id='mw-mf-page-center'>
									<div id="mw-mf-header">
		<a title="Open main menu" href="Special:MobileMenu#mw-mf-page-left" id="mw-mf-main-menu-button">				<img alt="menu"
				src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif">
		</a>			<form id="mw-mf-searchForm" action="http://en.m.wikipedia.org/w/index.php" class="search_bar" method="get">
			<input type="hidden" value="Special:Search" name="title" />
			<div id="mw-mf-sq" class="divclearable">
				<input type="search" name="search" id="mw-mf-search" size="22" value="" autocomplete="off" maxlength="1024" class="search"
					placeholder="Search Wikipedia"
					/>
				<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear"/>
				<input class='searchSubmit' type="submit" value="Go">
			</div>
		</form>
	</div>
	<div id="results"></div>
		<div class='show ' id='content_wrapper'>
						<h1 id="firstHeading">Inline function</h1>			<div class="dablink">This article is about inline functions in C and C++.  For inline expansion more generally, see <a href="http://en.m.wikipedia.org/wiki/Inline_expansion" title="Inline expansion">Inline expansion</a>.</div>
<table class="metadata plainlinks ambox ambox-content ambox-Refimprove" style=""><tr><td class="mbox-image">
<div style="width: 52px;"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x"></div>
</td>
<td class="mbox-text" style=""><span class="mbox-text-span">This article <b>needs additional <a href="Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">citations</a> for <a href="Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Inline_function&amp;action=edit">improve this article</a> by adding citations to <a href="http://en.m.wikipedia.org/wiki/Wikipedia:Identifying_reliable_sources" title="Wikipedia:Identifying reliable sources">reliable sources</a>. Unsourced material may be <a href="http://en.m.wikipedia.org/wiki/Template:Citation_needed" title="Template:Citation needed">challenged</a> and <a href="Wikipedia:Verifiability#Burden_of_evidence" title="Wikipedia:Verifiability">removed</a>.</span> <small><i>(October 2009)</i></small> </span></td>
</tr></table><p>In various versions of the <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> and <a href="C++" title="C++">C++</a> <a href="Programming_language" title="Programming language">programming languages</a>, an <b>inline function</b> is a function upon which the <a href="Compiler" title="Compiler">compiler</a> has been requested to perform <a href="http://en.m.wikipedia.org/wiki/Inline_expansion" title="Inline expansion">inline expansion</a>. In other words, the programmer has requested that the compiler insert the complete body of the function in every place that the function is called, rather than generating code to call the function in the one place it is defined. Compilers are not obligated to respect this request.</p>
<h2> <span class="mw-headline" id="Motivation">Motivation</span></h2>
<div class="rellink">Further information: <a href="http://en.m.wikipedia.org/wiki/Inline_expansion" title="Inline expansion">Inline expansion</a></div>
<p>Inline expansion is used to eliminate the time overhead when a function is called. It is typically used for functions that execute frequently. It also has a space benefit for very small functions, and is an enabling transformation for other <a href="http://en.m.wikipedia.org/wiki/Optimization_(computer_science)" title="Optimization (computer science)" class="mw-redirect">optimizations</a>.</p>
<p>Without inline functions, however, the compiler decides which functions to inline. The programmer has little or no control over which functions are inlined and which are not. Giving this degree of control to the programmer allows for the use of application-specific knowledge in choosing which functions to inline.</p>
<h2> <span class="mw-headline" id="Comparison_with_macros">Comparison with macros</span></h2>
<p>Traditionally, in languages such as <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a>, inline expansion was accomplished at the source level using <a href="http://en.m.wikipedia.org/wiki/Parameterized_macro" title="Parameterized macro">parameterized macros</a>. Use of true inline functions, as are available in <a href="C99" title="C99">C99</a>, provides several benefits over this approach:</p>
<ul><li>In C, macro invocations do not perform <a href="Type_checking" title="Type checking" class="mw-redirect">type checking</a>, or even check that arguments are well-formed, whereas function calls usually do.</li>
<li>In C, a macro cannot use the return keyword with the same meaning as a function would do (it would make the function that asked the expansion terminate, rather than the macro). In other words, a macro cannot return anything which is not the result of the last expression invoked inside it.</li>
<li>Since C macros use mere textual substitution, this may result in unintended side-effects and inefficiency due to re-evaluation of arguments and <a href="Order_of_operations" title="Order of operations">order of operations</a>.</li>
<li>Compiler errors within macros are often difficult to understand, because they refer to the expanded code, rather than the code the programmer typed. Thus, debugging information for inlined code is usually more helpful than that of macro-expanded code.</li>
<li>Many constructs are awkward or impossible to express using macros, or use a significantly different syntax. Inline functions use the same syntax as ordinary functions, and can be inlined and un-inlined at will with ease.</li>
</ul><p>Many compilers can also inline expand some <a href="http://en.m.wikipedia.org/wiki/Recursion_(computer_science)" title="Recursion (computer science)">recursive functions</a>; recursive macros are typically illegal.</p>
<p><a href="Bjarne_Stroustrup" title="Bjarne Stroustrup">Bjarne Stroustrup</a>, the designer of C++, likes to emphasize that macros should be avoided wherever possible, and advocates extensive use of inline functions.</p>
<h2> <span class="mw-headline" id="Language_support">Language support</span></h2>
<p><a href="C++" title="C++">C++</a>, <a href="C99" title="C99">C99</a>, and <a href="http://en.m.wikipedia.org/wiki/GNU_C" title="GNU C" class="mw-redirect">GNU C</a> each have support for inline functions. Different compilers vary in how complex a function they can manage to inline. Mainstream C++ compilers like <a href="http://en.m.wikipedia.org/wiki/Visual_C_Plus_Plus" title="Visual C Plus Plus" class="mw-redirect">Microsoft Visual C++</a> and <a href="GNU_Compiler_Collection" title="GNU Compiler Collection">GCC</a> support an option that lets the compilers automatically inline any suitable function, even those not marked as inline functions.</p>
<p>An inline function can be written in C99 or C++ like this:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw2">inline</span> <span class="kw4">int</span> max<span class="br0">(</span><span class="kw4">int</span> a<span class="sy0">,</span> <span class="kw4">int</span> b<span class="br0">)</span>
<span class="br0">{</span>
  <span class="kw1">return</span> <span class="br0">(</span>a <span class="sy0">&gt;</span> b<span class="br0">)</span> <span class="sy0">?</span> a <span class="sy0">:</span> b<span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>Then, a statement such as the following:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
a <span class="sy0">=</span> max<span class="br0">(</span>x<span class="sy0">,</span> y<span class="br0">)</span><span class="sy0">;</span>
</pre></div>
</div>
<p>may be transformed into a more direct computation:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
a <span class="sy0">=</span> <span class="br0">(</span>x <span class="sy0">&gt;</span> y<span class="br0">)</span> <span class="sy0">?</span> x <span class="sy0">:</span> y<span class="sy0">;</span>
</pre></div>
</div>
<h2> <span class="mw-headline" id="Analogs_in_other_languages">Analogs in other languages</span></h2>
<p>In the <a href="http://en.m.wikipedia.org/wiki/Ada_programming_language" title="Ada programming language" class="mw-redirect">Ada programming language</a>, there exists a <a href="http://en.m.wikipedia.org/wiki/Directive_(programming)" title="Directive (programming)">pragma</a> for inline functions. Most other languages, including <a href="Java_(programming_language)" title="Java (programming language)">Java</a> and <a href="http://en.m.wikipedia.org/wiki/Functional_language" title="Functional language" class="mw-redirect">functional languages</a>, do not provide language constructs for inline functions, but often do perform aggressive <a href="http://en.m.wikipedia.org/wiki/Inline_expansion" title="Inline expansion">inline expansion</a>.</p>
<p>Functions in <a href="http://en.m.wikipedia.org/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a> may be defined as inline as such:<sup id="cite_ref-0" class="reference"><a href="Inline_function#cite_note-0"><span>[</span>1<span>]</span></a></sup></p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="lisp source-lisp">
<pre class="de1">
 <span class="br0">(</span>declaim <span class="br0">(</span>inline dispatch<span class="br0">)</span><span class="br0">)</span>
 <span class="br0">(</span><span class="kw1">defun</span> dispatch <span class="br0">(</span>x<span class="br0">)</span>
   <span class="br0">(</span><span class="kw1">funcall</span>
     <span class="br0">(</span><span class="kw1">get</span> <span class="br0">(</span><span class="kw1">car</span> x<span class="br0">)</span> 'dispatch<span class="br0">)</span> x<span class="br0">)</span><span class="br0">)</span>
</pre></div>
</div>
<h2> <span class="mw-headline" id="Microsoft_Visual_C.2B.2B_specific">Microsoft Visual C++ specific</span></h2>
<p>Microsoft Visual C++ and few other compilers support non-standard constructs for defining inline functions, such as __inline and __forceinline specifiers.</p>
<ul><li>The __inline keyword is equivalent to inline.</li>
<li>The __forceinline keyword allow the programmer to force the compiler to inline the function, but indiscriminate use of __forceinline can result in larger code (bloated executable file), minimal or no performance gain, and in some cases even a loss in performance. The compiler cannot inline the function in all circumstances, even with the __forceinline keyword applied. If the compiler cannot inline a function declared with __forceinline, a warning of level 1 is generated. A list of cases when __forceinline will not take effect is listed below (based on Microsoft Specifications at MSDN):</li>
</ul><ol><li>The function or its caller is compiled with /Ob0 (the default option for debug builds).</li>
<li>The function and the caller use different types of exception handling (C++ exception handling in one, structured exception handling in the other).</li>
<li>The function has a <a href="http://en.m.wikipedia.org/wiki/Variable_argument_list" title="Variable argument list" class="mw-redirect">variable argument list</a>.</li>
<li>The function uses <a href="http://en.m.wikipedia.org/wiki/Inline_assembly" title="Inline assembly" class="mw-redirect">inline assembly</a>, unless compiled with /Og, /Ox, /O1, or /O2.</li>
<li>The function is <a href="http://en.m.wikipedia.org/wiki/Recursion_(computer_science)" title="Recursion (computer science)">recursive</a> and not accompanied by <code>#pragma inline_recursion(on)</code>. With the pragma, recursive functions are inlined to a default depth of 16 calls. To reduce the inlining depth, use inline_depth pragma.</li>
<li>The function is <a href="http://en.m.wikipedia.org/wiki/Virtual_function" title="Virtual function">virtual</a> and is called virtually. Direct calls to virtual functions can be inlined.</li>
<li>The program takes the address of the function and the call is made via the pointer to the function. Direct calls to functions that have had their address taken can be inlined.</li>
<li>The function is also marked with the naked __declspec modifier.</li>
</ol><p>__forceinline is useful if:</p>
<ul><li>inline or __inline is not respected by the compiler (ignored by compiler cost/benefit analyzer)</li>
<li>code portability is not required</li>
<li>inlining results in a necessary performance boost</li>
</ul><p>Example of portable code:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cpp source-cpp">
<pre class="de1">
<span class="co2">#ifdef _MSC_VER</span>
  <span class="co2">#define INLINE __forceinline /* use __forceinline (VC++ specific) */</span>
<span class="co2">#else</span>
  <span class="co2">#define INLINE inline        /* use standard inline */</span>
<span class="co2">#endif</span>
 
INLINE <span class="kw4">void</span> helloworld<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span> <span class="coMULTI">/* inline function body */</span> <span class="br0">}</span>
</pre></div>
</div>
<p>Besides the problems associated with <a href="http://en.m.wikipedia.org/wiki/Inline_expansion" title="Inline expansion">inline expansion</a> in general, inline functions as a language feature may not be as valuable as they appear, for a number of reasons:</p>
<ul><li>Often, a compiler is in a better position than a human to decide whether a particular function should be inlined. Sometimes the compiler may not be able to inline as many functions as the programmer indicates.</li>
<li>An important point to note is that the code (of the inline function) gets exposed to its client(the calling function).</li>
<li>As functions evolve, they may become suitable for inlining where they were not before, or no longer suitable for inlining where they were before. While inlining or un-inlining a function is easier than converting to and from macros, it still requires extra maintenance which typically yields relatively little benefit.</li>
<li>Inline functions used in proliferation in native C-based compilation systems can increase compilation time, since the intermediate representation of their bodies is copied into each call site where they are</li>
<li>The specification of inline in C99 requires exactly one additional external definition of a function in another compilation unit, when the corresponding inline definition, that can occur multiple times in different compilation units, if that function is used somewhere. That can easily lead to linker errors because such a definition wasn't provided by the programmer. For this reason, inline in C99 often is used together with static, which gives the function internal linkage.</li>
<li>In C++, it is necessary to define an inline function in every module (compilation unit) that uses it, whereas an ordinary function must be defined in only a single module. Otherwise it would not be possible to compile a single module independently of all other modules.</li>
</ul><p>For problems with the optimization itself, rather than the language feature, see <a href="http://en.m.wikipedia.org/wiki/Inline_expansion#Problems" title="Inline expansion">problems with inline expansion</a>.</p>
<h2> <span class="mw-headline" id="Quotes">Quotes</span></h2>
<dl><dd>"A function declaration [ . . . ] with an <b>inline</b> specifier declares an inline function. The <b>inline</b> specifier indicates to the implementation that inline substitution of the function body at the point of call is to be preferred to the usual function call mechanism. An implementation is not required to perform this inline substitution at the point of call; however, even if this inline substitution is omitted, the other rules for inline functions defined by 7.1.2 shall still be respected."</dd>
<dd>— ISO/IEC 14882:2011, the current C++ standard, section 7.1.2</dd>
</dl><dl><dd>"A function declared with an <b>inline</b> function specifier is an inline function. [ . . . ] Making a function an inline function suggests that calls to the function be as fast as possible. The extent to which such suggestions are effective is implementation-defined (<i>footnote: For example, an implementation might never perform inline substitution, or might only perform inline substitutions to calls in the scope of an inline declaration.</i>)</dd>
</dl><dl><dd>"[ . . . ] An inline definition does not provide an external definition for the function, and does not forbid an external definition in another <a href="http://en.m.wikipedia.org/wiki/Translation_unit_(programming)" title="Translation unit (programming)">translation unit</a>. An inline definition provides an alternative to an external definition, which a translator may use to implement any call to the function in the same translation unit. It is unspecified whether a call to the function uses the inline definition or the external definition."</dd>
<dd>— ISO 9899:1999(E), the C99 standard, section 6.7.4</dd>
</dl><h2> <span class="mw-headline" id="See_also">See also</span></h2>
<ul><li><a href="http://en.m.wikipedia.org/wiki/Inline_expansion" title="Inline expansion">Inline expansion</a></li>
<li><a href="Macro_(computer_science)" title="Macro (computer science)">Macro (computer science)</a></li>
</ul><h2> <span class="mw-headline" id="References">References</span></h2>
<ol class="references"><li id="cite_note-0"><span class="mw-cite-backlink"><b><a href="Inline_function#cite_ref-0">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www.lispworks.com/documentation/HyperSpec/Body/d_inline.htm#inline"><i>Declaration</i> <b>INLINE</b>, <b>NOTINLINE</b></a> at the <a href="http://en.m.wikipedia.org/wiki/Common_Lisp_HyperSpec" title="Common Lisp HyperSpec">Common Lisp HyperSpec</a></span></li>
</ol><h2> <span class="mw-headline" id="External_links">External links</span></h2>
<ul><li><a rel="nofollow" class="external text" href="http://gcc.gnu.org/onlinedocs/gcc/Inline.html">Inline functions</a> with the <a href="GNU_Compiler_Collection" title="GNU Compiler Collection">GNU Compiler Collection</a> (GCC)</li>
<li><a rel="nofollow" class="external text" href="http://wiki.answers.com/Q/Advantages_and_disadvantages_of_using_macro_and_inline_functions">Macro and inline functions</a></li>
</ul>						<div class="section" id="mw-mf-language-section">
				<h2 id="section_language" class="section_heading">Read in another language</h2>
				<div id="content_language" class="content_block">
					<p>This article is available in 6 languages</p>
					<ul id="mw-mf-language-selection"><li><a href="http://fy.m.wikipedia.org/wiki/Ynrigelje" lang="fy" hreflang="fy">Frysk</a></li><li><a href="http://ko.m.wikipedia.org/wiki/%EC%9D%B8%EB%9D%BC%EC%9D%B8_%ED%95%A8%EC%88%98" lang="ko" hreflang="ko">한국어</a></li><li><a href="http://ja.m.wikipedia.org/wiki/%E3%82%A4%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3%E9%96%A2%E6%95%B0" lang="ja" hreflang="ja">日本語</a></li><li><a href="http://pl.m.wikipedia.org/wiki/Inline_(programowanie)" lang="pl" hreflang="pl">polski</a></li><li><a href="http://vi.m.wikipedia.org/wiki/H%C3%A0m_n%E1%BB%99i_tuy%E1%BA%BFn" lang="vi" hreflang="vi">Tiếng Việt</a></li><li><a href="http://zh.m.wikipedia.org/wiki/%E5%86%85%E8%81%94%E5%87%BD%E6%95%B0" lang="zh" hreflang="zh">中文</a></li></ul>
				</div>
			</div>			</div><!-- close #content_wrapper -->
			<div id="footer">
			<h2 class="section_heading" id="section_footer">
		<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/logo-copyright-en.png" class="license" alt="Wikipedia ®" />	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Inline_function&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Inline_function&amp;action=history">contributors</a> like you<br>
				Content available under <a href="Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>				<span>| <a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span>
			</li>
		</ul>
		<ul class="links">
						<li>
			<a href='http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Inline+function&amp;feedbacksource=MobileFrontend'>
				Contact Wikipedia			</a>
			</li><li>
						<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div><!-- close footer.div / #content_footer -->
	</div><!-- close #footer -->
					</div><!-- close #mw-mf-page-center -->
		</div><!-- close #mw-mf-viewport -->
		
					</body>
	</html>