<!doctype html>
	<html lang="en" dir="ltr" class="">
	<head>
		<title>Data type - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="robots" content="noindex,nofollow"/>		<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile%7Cmobile.production-only%2Cproduction-jquery%7Cmobile.device.default&amp;only=styles&amp;skin=mobile&amp;version=1352163471&amp;*" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile.site&amp;only=styles&amp;skin=mobile&amp;*" />		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />		<script type="text/javascript">
			var _mwStart = +new Date;
			window._evq = window._evq || [];
			if ( typeof console === 'undefined' ) {
				console = { log: function() {} };
			}
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"mobile-frontend-watchlist-add":"Added $1 to your watchlist","mobile-frontend-watchlist-removed":"Removed $1 from your watchlist","mobile-frontend-watchlist-view":"View your watchlist","mobile-frontend-ajax-random-heading":"Locating knowledge...","mobile-frontend-ajax-random-quote":"Intellectual growth should commence at birth and cease only at death","mobile-frontend-ajax-random-quote-author":"Albert Einstein","mobile-frontend-ajax-random-question":"Read this article?","mobile-frontend-ajax-random-yes":"Yes","mobile-frontend-ajax-random-retry":"Try again","mobile-frontend-ajax-page-loading":"Loading $1","mobile-frontend-page-saving":"Saving $1","mobile-frontend-ajax-page-error":"Whoops! Something went wrong there. Please try refreshing your browser window.","mobile-frontend-meta-data-issues":"This article has some issues","mobile-frontend-meta-data-issues-header":"Issues","expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-footer":"<a href="http://en.m.wikipedia.org/wiki/\&quot;\/wiki\/Special:MobileOptions\/Language\&quot;">Note: This article may not be written in your preferred language. You can see which languages Wikipedia supports by clicking here.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"action":"","authenticated":false,"scriptPath":"\/w","shim":"\/\/bits.wikimedia.org\/static-1.21wmf3\/extensions\/MobileFrontend\/stylesheets\/common\/images\/blank.gif","pageUrl":"\/wiki\/$1","beta":null,"title":"Data type","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			function _mwLogEvent( data, additionalInformation ) {
				var timestamp = + new Date;
				var ev = { event_id: 'mobile', delta: timestamp - _mwStart, data: data, beta: mwMobileFrontendConfig.settings.beta,
					session: _mwStart, page: mwMobileFrontendConfig.settings.title, info: additionalInformation || '' };
				_evq.push( ev );
				console.log( typeof JSON === 'undefined' ? ev : JSON.stringify( ev ) );
			}
		</script>
				<link rel="canonical" href="http://en.wikipedia.org/wiki/Data_type" >
	</head>
	<body class="mobile live">
				<div id="mw-mf-viewport">
		<div id="mw-mf-page-left">
		<div id='mw-mf-content-left'>
		<ul id="mw-mf-menu-main">
			<li class='icon'><a href="Main_Page"
				title="Home">
				Home</a></li>
			<li class='icon2'><a href="Special:Random#mw-mf-page-left" id="randomButton"
				title="Random"
				class="button">Random</a></li>
						<li class='icon5'>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions&amp;returnto=Data+type"
					title="Settings">
				Settings				</a>
			</li>
					</ul>
		</div>
		</div>
		<div id='mw-mf-page-center'>
									<div id="mw-mf-header">
		<a title="Open main menu" href="Special:MobileMenu#mw-mf-page-left" id="mw-mf-main-menu-button">				<img alt="menu"
				src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif">
		</a>			<form id="mw-mf-searchForm" action="http://en.m.wikipedia.org/w/index.php" class="search_bar" method="get">
			<input type="hidden" value="Special:Search" name="title" />
			<div id="mw-mf-sq" class="divclearable">
				<input type="search" name="search" id="mw-mf-search" size="22" value="" autocomplete="off" maxlength="1024" class="search"
					placeholder="Search Wikipedia"
					/>
				<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear"/>
				<input class='searchSubmit' type="submit" value="Go">
			</div>
		</form>
	</div>
	<div id="results"></div>
		<div class='show ' id='content_wrapper'>
						<h1 id="firstHeading">Data type</h1>			
<div class="dablink">This article is about data types from the perspective of computer science and computer programming.  For their use in statistics, see <a href="http://en.m.wikipedia.org/wiki/Statistical_data_type" title="Statistical data type">statistical data type</a>.  For other uses, see <a href="http://en.m.wikipedia.org/wiki/Data_type_(disambiguation)" title="Data type (disambiguation)">Data type (disambiguation)</a>.</div>
<p>In <a href="http://en.m.wikipedia.org/wiki/Computer_science" title="Computer science">computer science</a> and <a href="http://en.m.wikipedia.org/wiki/Computer_programming" title="Computer programming">computer programming</a>, a <b>data type</b> or simply <b>type</b> is a classification identifying one of various types of data, such as <a href="http://en.m.wikipedia.org/wiki/Real-valued" title="Real-valued" class="mw-redirect">real-valued</a>, <a href="http://en.m.wikipedia.org/wiki/Integer" title="Integer">integer</a> or <a href="http://en.m.wikipedia.org/wiki/Boolean_data_type" title="Boolean data type">Boolean</a>, that determines the possible values for that type; the operations that can be done on values of that type; the meaning of the data; and the way values of that type can be stored.<sup id="cite_ref-1" class="reference"><a href="Data_type#cite_note-1"><span>[</span>1<span>]</span></a></sup><sup id="cite_ref-2" class="reference"><a href="Data_type#cite_note-2"><span>[</span>2<span>]</span></a></sup></p>
<h2> <span class="mw-headline" id="Overview">Overview</span>
</h2>
<p>Data types are used within <a href="Type_system" title="Type system">type systems</a>, which offer various ways of defining, implementing and using them. Different type systems ensure varying degrees of <a href="http://en.m.wikipedia.org/wiki/Type_safety" title="Type safety">type safety</a>. Formally, a type can be defined as "any property of a programme we can determine without executing the program".<sup id="cite_ref-3" class="reference"><a href="Data_type#cite_note-3"><span>[</span>3<span>]</span></a></sup></p>
<p>Almost all programming languages explicitly include the notion of data type, though different languages may use different terminology. Common data types may include:</p>
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Integer_(computer_science)" title="Integer (computer science)">integers</a>,</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Boolean_data_type" title="Boolean data type">booleans</a>,</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Character_(computing)" title="Character (computing)">characters</a>,</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Floating_point" title="Floating point">floating-point</a> numbers,</li>
<li>alphanumeric <a href="String_(computer_science)" title="String (computer science)">strings</a>.</li>
</ul>
<p>For example, in the <a href="Java_(programming_language)" title="Java (programming language)">Java programming language</a>, the "int" type represents the set of <a href="http://en.m.wikipedia.org/wiki/32-bit" title="32-bit">32-bit</a> <a href="http://en.m.wikipedia.org/wiki/Integer_(computer_science)" title="Integer (computer science)">integers</a> ranging in value from -2,147,483,648 to 2,147,483,647, as well as the operations that can be performed on integers, such as addition, subtraction, and multiplication. Colors, on the other hand, are represented by three <a href="Byte" title="Byte">bytes</a> denoting the amounts each of red, green, and blue, and one string representing that color's name; allowable operations include addition and subtraction, but not multiplication.</p>
<p>Most programming languages also allow the programmer to define additional data types, usually by combining multiple elements of other types and defining the valid operations of the new data type. For example, a programmer might create a new data type named "<a href="Complex_number" title="Complex number">complex number</a>" that would include real and imaginary parts. A data type also represents a constraint placed upon the interpretation of data in a <a href="Type_system" title="Type system">type system</a>, describing representation, interpretation and structure of <a href="http://en.m.wikipedia.org/wiki/Value_(computer_science)" title="Value (computer science)">values</a> or <a href="http://en.m.wikipedia.org/wiki/Object_(computer_science)" title="Object (computer science)">objects</a> stored in computer memory. The type system uses data type information to check <a href="http://en.m.wikipedia.org/wiki/Correctness_of_computer_programs" title="Correctness of computer programs" class="mw-redirect">correctness of computer programs</a> that access or manipulate the data.</p>
<p>Most data types in statistics have comparable types in computer programming, and vice-versa, as shown in the following table:</p>
<table class="wikitable">
<tr>
<th>Statistics</th>
<th>Computer programming</th>
</tr>
<tr>
<td>
<a href="http://en.m.wikipedia.org/wiki/Real-valued" title="Real-valued" class="mw-redirect">real-valued</a> (<a href="http://en.m.wikipedia.org/wiki/Interval_scale" title="Interval scale" class="mw-redirect">interval scale</a>)</td>
<td rowspan="2"><a href="http://en.m.wikipedia.org/wiki/Floating-point" title="Floating-point" class="mw-redirect">floating-point</a></td>
</tr>
<tr>
<td>
<a href="http://en.m.wikipedia.org/wiki/Real-valued" title="Real-valued" class="mw-redirect">real-valued</a> (<a href="http://en.m.wikipedia.org/wiki/Ratio_scale" title="Ratio scale" class="mw-redirect">ratio scale</a>)</td>
</tr>
<tr>
<td>
<a href="http://en.m.wikipedia.org/wiki/Count_data" title="Count data">count data</a> (usually non-negative)</td>
<td><a href="http://en.m.wikipedia.org/wiki/Integer_(computer_science)" title="Integer (computer science)">integer</a></td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Binary_data" title="Binary data">binary data</a></td>
<td><a href="http://en.m.wikipedia.org/wiki/Boolean_data_type" title="Boolean data type">Boolean</a></td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Categorical_data" title="Categorical data">categorical data</a></td>
<td><a href="Enumerated_type" title="Enumerated type">enumerated type</a></td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Random_vector" title="Random vector" class="mw-redirect">random vector</a></td>
<td>
<a href="http://en.m.wikipedia.org/wiki/List_(abstract_data_type)" title="List (abstract data type)">list</a> or <a href="Array_data_type" title="Array data type">array</a>
</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Random_matrix" title="Random matrix">random matrix</a></td>
<td>two-dimensional <a href="Array_data_type" title="Array data type">array</a>
</td>
</tr>
<tr>
<td><a href="http://en.m.wikipedia.org/wiki/Random_tree_(disambiguation)" title="Random tree (disambiguation)" class="mw-redirect">random tree</a></td>
<td><a href="Tree_(data_structure)" title="Tree (data structure)">tree</a></td>
</tr>
</table>
<h2> <span class="mw-headline" id="Definition_of_a_.22type.22">Definition of a "type"</span>
</h2>
<p>(<a href="Data_type#CITEREFParnasShoreWeiss1976">Parnas, Shore &amp; Weiss 1976</a>) identified five definitions of a "type" that were used—sometimes implicitly—in the literature:</p>
<dl>
<dt>Syntactic</dt>
<dd>A type is a purely <a href="http://en.m.wikipedia.org/wiki/Syntax" title="Syntax">syntactic</a> label associated with a <a href="http://en.m.wikipedia.org/wiki/Variable_(computer_science)" title="Variable (computer science)">variable</a> when it is declared. Such definitions of "type" do not give any <a href="http://en.m.wikipedia.org/wiki/Semantic" title="Semantic" class="mw-redirect">semantic</a> meaning to types.</dd>
<dt>Representation</dt>
<dd>A type is defined in terms of its composition of more primitive types—often machine types.</dd>
<dt>Representation and behaviour</dt>
<dd>A type is defined as its representation and a set of <a href="http://en.m.wikipedia.org/wiki/Operator_(computer_programming)" title="Operator (computer programming)">operators</a> manipulating these representations.</dd>
<dt>Value space</dt>
<dd>A type is a set of possible values which a variable can posses. Such definitions make it possible to speak about (<a href="http://en.m.wikipedia.org/wiki/Disjoint_union" title="Disjoint union">disjoint</a>) <a href="http://en.m.wikipedia.org/wiki/Union_(set_theory)" title="Union (set theory)">unions</a> or <a href="http://en.m.wikipedia.org/wiki/Cartesian_product" title="Cartesian product">Cartesian products</a> of types.</dd>
<dt>Value space and behaviour</dt>
<dd>A type is a set of values which a variable can posses and a set of <a href="http://en.m.wikipedia.org/wiki/Function_(computer_science)" title="Function (computer science)" class="mw-redirect">functions</a> that on can apply to these values.</dd>
</dl>
<p>The definition in terms of a representation was often done in imperative languages such as <a href="ALGOL" title="ALGOL">ALGOL</a> and <a href="Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a>, while the definition in terms of a value space and behaviour was used in higher-level languages such as <a href="http://en.m.wikipedia.org/wiki/Simula" title="Simula">Simula</a> and <a href="http://en.m.wikipedia.org/wiki/CLU_(programming_language)" title="CLU (programming language)">CLU</a>.</p>
<h2> <span class="mw-headline" id="Classes_of_data_types">Classes of data types</span>
</h2>
<h3> <span class="mw-headline" id="Primitive_data_types">Primitive data types</span>
</h3>
<div class="rellink relarticle mainarticle">Main article: <a href="http://en.m.wikipedia.org/wiki/Primitive_data_type" title="Primitive data type">Primitive data type</a>
</div>
<h4> <span class="mw-headline" id="Machine_data_types">Machine data types</span>
</h4>
<p>All data in computers based on digital electronics is represented as <a href="Bit" title="Bit">bits</a> (alternatives 0 and 1) on the lowest level. The smallest addressable unit of data is usually a group of bits called a <a href="Byte" title="Byte">byte</a> (usually an <a href="http://en.m.wikipedia.org/wiki/Octet_(computing)" title="Octet (computing)">octet</a>, which is 8 bits). The unit processed by <a href="http://en.m.wikipedia.org/wiki/Machine_code" title="Machine code">machine code</a> instructions is called a <a href="http://en.m.wikipedia.org/wiki/Word_(data_type)" title="Word (data type)" class="mw-redirect">word</a> (as of 2011, typically 32 or 64 bits). Most instructions interpret the word as a <a href="http://en.m.wikipedia.org/wiki/Binary_number" title="Binary number" class="mw-redirect">binary number</a>, such that a 32-bit word can represent unsigned integer values from 0 to <img class="tex" alt="2^{32}-1" src="http://upload.wikimedia.org/math/9/4/7/947e795b05703075007f84d9bb089442.png"> or signed integer values from <img class="tex" alt="-2^{31}" src="http://upload.wikimedia.org/math/3/6/b/36ba22151c7fb015c5be840f6f5083f4.png"> to <img class="tex" alt="2^{31}-1" src="http://upload.wikimedia.org/math/2/3/e/23eab2d51738b2129c165dd63c89b97e.png">. Because of <a href="http://en.m.wikipedia.org/wiki/Two%27s_complement" title="Two's complement">two's complement</a>, the machine language and machine doesn't need to distinguish between these unsigned and signed data types for the most part.</p>
<p>There is a specific set of arithmetic instructions that use a different interpretation of the bits in word as a <a href="http://en.m.wikipedia.org/wiki/Floating-point" title="Floating-point" class="mw-redirect">floating-point</a> number.</p>
<p>Machine data types need to be <i>exposed</i> or made available in <a href="http://en.m.wikipedia.org/wiki/Systems_programming" title="Systems programming" class="mw-redirect">systems</a> or <a href="http://en.m.wikipedia.org/wiki/Low-level_programming_language" title="Low-level programming language">low-level programming languages</a>, allowing fine-grained control over hardware. The <a href="http://en.m.wikipedia.org/wiki/C_programming_language" title="C programming language" class="mw-redirect">C programming language</a>, for instance, supplies integer types of various widths, such as <code>short</code> and <code>long</code>. If a corresponding native type does not exist on the target platform, the compiler will break them down into code using types that do exist. For instance, if a 32-bit integer is requested on a 16 bit platform, the compiler will tacitly treat it as an array of two 16 bit integers.</p>
<p>Several languages allow <a href="http://en.m.wikipedia.org/wiki/Binary_numeral_system" title="Binary numeral system">binary</a> and <a href="http://en.m.wikipedia.org/wiki/Hexadecimal" title="Hexadecimal">hexadecimal</a> <a href="http://en.m.wikipedia.org/wiki/Literal_(computer_science)" title="Literal (computer science)" class="mw-redirect">literals</a>, for convenient manipulation of machine data.</p>
<p>In higher level programming, machine data types are often hidden or <i>abstracted</i> as an implementation detail that would render code less portable if exposed. For instance, a generic <code>numeric</code> type might be supplied instead of integers of some specific bit-width.</p>
<h4> <span class="mw-headline" id="Boolean_type">Boolean type</span>
</h4>
<p>The <a href="http://en.m.wikipedia.org/wiki/Boolean_type" title="Boolean type" class="mw-redirect">Boolean type</a> represents the values: <a href="http://en.m.wikipedia.org/wiki/Logical_truth" title="Logical truth">true</a> and <a href="http://en.m.wikipedia.org/wiki/False_(logic)" title="False (logic)">false</a>. Although only two values are possible, they are rarely implemented as a single binary digit for efficiency reasons. Many programming languages do not have an explicit boolean type, instead interpreting (for instance) 0 as false and other values as true.</p>
<h4> <span class="mw-headline" id="Numeric_types">Numeric types</span>
</h4>
<p>Such as:</p>
<ul>
<li>The <a href="http://en.m.wikipedia.org/wiki/Integer_(computing)" title="Integer (computing)" class="mw-redirect">integer</a> data types, or "whole numbers". May be subtyped according to their ability to contain negative values (e.g. <code>unsigned</code> in C and C++). May also have a small number of predefined subtypes (such as <code>short</code> and <code>long</code> in C/C++); or allow users to freely define subranges such as 1..12 (e.g. <a href="Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a>/<a href="http://en.m.wikipedia.org/wiki/Ada_(programming_language)" title="Ada (programming language)">Ada</a>).</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Floating_point" title="Floating point">Floating point</a> data types, sometimes misleadingly called <a href="http://en.m.wikipedia.org/wiki/Real_number" title="Real number">reals</a>, contain fractional values. They usually have predefined limits on both their maximum values and their precision.</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Fixed_point_(computing)" title="Fixed point (computing)" class="mw-redirect">Fixed point</a> data types are convenient for representing monetary values. They are often implemented internally as integers, leading to predefined limits.</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Bignum" title="Bignum" class="mw-redirect">Bignum</a> or <a href="http://en.m.wikipedia.org/wiki/Arbitrary_precision" title="Arbitrary precision" class="mw-redirect">arbitrary precision</a> numeric types lack predefined limits. They are not primitive types, and are used sparingly for efficiency reasons.</li>
</ul>
<h3> <span class="mw-headline" id="Composite_types">Composite types</span>
</h3>
<div class="rellink relarticle mainarticle">Main article: <a href="http://en.m.wikipedia.org/wiki/Composite_type" title="Composite type" class="mw-redirect">Composite type</a>
</div>
<p><a href="http://en.m.wikipedia.org/wiki/Composite_type" title="Composite type" class="mw-redirect">Composite types</a> are derived from more than one primitive type. This can be done in a number of ways. The ways they are combined are called <a href="http://en.m.wikipedia.org/wiki/Data_structure" title="Data structure">data structures</a>. Composing a primitive type into a compound type generally results in a new type, e.g. <i>array-of-integer</i> is a different type to <i>integer</i>.</p>
<ul>
<li>An <a href="Array_data_type" title="Array data type">array</a> stores a number of elements of the same type in a specific order. They are accessed using an integer to specify which element is required (although the elements may be of almost any type). Arrays may be fixed-length or expandable.</li>
<li>
<a href="Record_(computer_science)" title="Record (computer science)">Record</a> (also called tuple or struct) Records are among the simplest <a href="http://en.m.wikipedia.org/wiki/Data_structure" title="Data structure">data structures</a>. A record is a value that contains other values, typically in fixed number and sequence and typically indexed by names. The elements of records are usually called <i>fields</i> or <i>members</i>.</li>
<li>
<a href="Union_(computer_science)" title="Union (computer science)">Union</a>. A union type definition will specify which of a number of permitted primitive types may be stored in its instances, e.g. "float or long integer". Contrast with a <a href="Record_(computer_science)" title="Record (computer science)">record</a>, which could be defined to contain a float <i>and</i> an integer; whereas, in a union, there is only one value at a time.</li>
<li>A <a href="http://en.m.wikipedia.org/wiki/Tagged_union" title="Tagged union">tagged union</a> (also called a <a href="http://en.m.wikipedia.org/wiki/Variant_type" title="Variant type">variant</a>, variant record, discriminated union, or disjoint union) contains an additional field indicating its current type, for enhanced type safety.</li>
<li>A <a href="http://en.m.wikipedia.org/wiki/Set_(abstract_data_type)" title="Set (abstract data type)">set</a> is an <a href="http://en.m.wikipedia.org/wiki/Abstract_data_structure" title="Abstract data structure" class="mw-redirect">abstract data structure</a> that can store certain values, without any particular <a href="http://en.m.wikipedia.org/wiki/Sequence" title="Sequence">order</a>, and no repeated values. Values themselves are not retrieved from sets, rather one tests a value for membership to obtain a boolean "in" or "not in".</li>
<li>An <a href="http://en.m.wikipedia.org/wiki/Object_(computer_science)" title="Object (computer science)">object</a> contains a number of data fields, like a record, and also a number of program code fragments for accessing or modifying them. Data structures not containing code, like those above, are called <a href="http://en.m.wikipedia.org/wiki/Plain_old_data_structure" title="Plain old data structure">plain old data structure</a>.</li>
</ul>
<p>Many others are possible, but they tend to be further variations and compounds of the above.</p>
<h4> <span class="mw-headline" id="Enumerations">Enumerations</span>
</h4>
<div class="rellink relarticle mainarticle">Main article: <a href="Enumerated_type" title="Enumerated type">Enumerated type</a>
</div>
<p>The <a href="Enumerated_type" title="Enumerated type">enumerated type</a>. This has values which are different from each other, and which can be compared and assigned, but which do not necessarily have any particular concrete representation in the computer's memory; compilers and interpreters can represent them arbitrarily. For example, the four suits in a deck of playing cards may be four enumerators named <i>CLUB</i>, <i>DIAMOND</i>, <i>HEART</i>, <i>SPADE</i>, belonging to an enumerated type named <i>suit</i>. If a variable <i>V</i> is declared having <i>suit</i> as its data type, one can assign any of those four values to it. Some implementations allow programmers to assign integer values to the enumeration values, or even treat them as type-equivalent to integers.</p>
<h4> <span class="mw-headline" id="String_and_text_types">String and text types</span>
</h4>
<p>Such as:</p>
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Alphanumeric" title="Alphanumeric">Alphanumeric</a> <a href="http://en.m.wikipedia.org/wiki/Character_(computing)" title="Character (computing)">character</a>. A letter of the <a href="http://en.m.wikipedia.org/wiki/Alphabet" title="Alphabet">alphabet</a>, digit, blank space, punctuation mark, etc.</li>
<li>Alphanumeric <a href="String_(computer_science)" title="String (computer science)">strings</a>, a sequence of characters. They are typically used to represent words and text.</li>
</ul>
<p>Character and string types can store sequences of characters from a character set such as <a href="http://en.m.wikipedia.org/wiki/ASCII" title="ASCII">ASCII</a>. Since most character sets include the <a href="http://en.m.wikipedia.org/wiki/Numerical_digit" title="Numerical digit">digits</a>, it is possible to have a numeric string, such as <code>"1234"</code>. However, many languages would still treat these as belonging to a different type to the numeric value <code>1234</code>.</p>
<p>Character and string types can have different subtypes according to the required character "width". The original 7-bit wide ASCII was found to be limited, and superseded by 8 and 16-bit sets, which can encode a wide variety of non-Latin alphabets (<a href="http://en.m.wikipedia.org/wiki/Hebrew" title="Hebrew" class="mw-redirect">Hebrew</a>, <a href="http://en.m.wikipedia.org/wiki/Chinese_language" title="Chinese language">Chinese</a>) and other symbols. Strings may be either stretch-to-fit or of fixed size, even in the same programming language. They may also be subtyped by their maximum size.</p>
<p>Note: strings are not primitive in all languages, for instance C: they may be composed from arrays of characters.</p>
<h3> <span class="mw-headline" id="Other_types">Other types</span>
</h3>
<p>Types can be based on, or derived from, the basic types explained above. In some language, such as C, <a href="http://en.m.wikipedia.org/wiki/Function_(computer_science)" title="Function (computer science)" class="mw-redirect">functions</a> have a type derived from the type of their <a href="http://en.m.wikipedia.org/wiki/Return_value" title="Return value" class="mw-redirect">return value</a>.</p>
<h4> <span class="mw-headline" id="Pointers_and_references">Pointers and references</span>
</h4>
<p>The main non-composite, derived type is the <a href="Pointer_(computer_programming)" title="Pointer (computer programming)">pointer</a>, a data type whose value refers directly to (or "points to") another value stored elsewhere in the <a href="Computer_memory" title="Computer memory">computer memory</a> using its <a href="http://en.m.wikipedia.org/wiki/Memory_address" title="Memory address">address</a>. It is a primitive kind of <a href="Reference_(computer_science)" title="Reference (computer science)">reference</a>. (In everyday terms, a page number in a book could be considered a piece of data that refers to another one). Pointers are often stored in a format similar to an integer; however, attempting to dereference or "look up" a pointer whose value was never a valid memory address would cause a program to crash. To ameliorate this potential problem, pointers are considered a separate type to the type of data they point to, even if the underlying representation is the same.</p>
<h4> <span class="mw-headline" id="Function_types">Function types</span>
</h4>
<div class="rellink relarticle mainarticle">Main article: <a href="http://en.m.wikipedia.org/wiki/Function_type" title="Function type">Function type</a>
</div>
<table class="metadata plainlinks ambox mbox-small-left ambox-content" style=""><tr>
<td class="mbox-image"><a href="http://en.m.wikipedia.org/wiki/File:Wiki_letter_w_cropped.svg" class="image"><img alt="[icon]" src="http://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Wiki_letter_w_cropped.svg/20px-Wiki_letter_w_cropped.svg.png" width="20" height="14" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Wiki_letter_w_cropped.svg/30px-Wiki_letter_w_cropped.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Wiki_letter_w_cropped.svg/40px-Wiki_letter_w_cropped.svg.png 2x"></a></td>
<td class="mbox-text" style=""><span class="mbox-text-span">This section requires <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Data_type&amp;action=edit">expansion</a>. <small><i>(October 2012)</i></small></span></td>
</tr></table>
<h3> <span class="mw-headline" id="Abstract_data_types">Abstract data types</span>
</h3>
<div class="rellink relarticle mainarticle">Main article: <a href="http://en.m.wikipedia.org/wiki/Abstract_data_type" title="Abstract data type">Abstract data type</a>
</div>
<p>Any type that does not specify an implementation is an <a href="http://en.m.wikipedia.org/wiki/Abstract_data_type" title="Abstract data type">abstract data type</a>. For instance, a <a href="http://en.m.wikipedia.org/wiki/Stack_(abstract_data_type)" title="Stack (abstract data type)">stack</a> (which is an abstract type) can be implemented as an array (a contiguous block of memory containing multiple values), or as a <a href="Linked_list" title="Linked list">linked list</a> (a set of non-contiguous memory blocks linked by <a href="http://en.m.wikipedia.org/wiki/Pointer_(computer_science)" title="Pointer (computer science)" class="mw-redirect">pointers</a>).</p>
<p>Abstract types can be handled by code that does not know or "care" what underlying types are contained in them. Programming that is agnostic about concrete data types is called <a href="Generic_programming" title="Generic programming">generic programming</a>. Arrays and records can also contain underlying types, but are considered concrete because they specify how their contents or elements are laid out in memory.</p>
<p>Examples include:</p>
<ul>
<li>A <a href="http://en.m.wikipedia.org/wiki/Queue_(data_structure)" title="Queue (data structure)" class="mw-redirect">queue</a> is a first-in first-out list. Variations are <a href="http://en.m.wikipedia.org/wiki/Deque" title="Deque" class="mw-redirect">Deque</a> and <a href="http://en.m.wikipedia.org/wiki/Priority_queue" title="Priority queue">Priority queue</a>.</li>
<li>A <a href="http://en.m.wikipedia.org/wiki/Set_(computer_science)" title="Set (computer science)" class="mw-redirect">set</a> can store certain values, without any particular <a href="http://en.m.wikipedia.org/wiki/Sequence" title="Sequence">order</a>, and with no repeated values.</li>
<li>A <a href="http://en.m.wikipedia.org/wiki/Stack_(data_structure)" title="Stack (data structure)" class="mw-redirect">stack</a> is a last-in, first out.</li>
<li>A <a href="http://en.m.wikipedia.org/wiki/Tree_(computer_science)" title="Tree (computer science)" class="mw-redirect">tree</a> is a <a href="http://en.m.wikipedia.org/wiki/Hierarchical_structure" title="Hierarchical structure" class="mw-redirect">hierarchical structure</a>.</li>
<li>A <a href="http://en.m.wikipedia.org/wiki/Graph_(data_structure)" title="Graph (data structure)" class="mw-redirect">graph</a>.</li>
<li>A <a href="http://en.m.wikipedia.org/wiki/Hash_table" title="Hash table">hash</a> or dictionary or <a href="http://en.m.wikipedia.org/wiki/Map_(computer_science)" title="Map (computer science)" class="mw-redirect">map</a> or <a href="http://en.m.wikipedia.org/wiki/Associative_array" title="Associative array">Map/Associative array/Dictionary</a> is a more flexible variation on a record, in which <a href="http://en.m.wikipedia.org/wiki/Name-value_pair" title="Name-value pair" class="mw-redirect">name-value pairs</a> can be added and deleted freely.</li>
<li>A <a href="http://en.m.wikipedia.org/wiki/Smart_pointer" title="Smart pointer">smart pointer</a> is the abstract counterpart to a pointer. Both are kinds of <a href="Reference_(computer_science)" title="Reference (computer science)">reference</a>
</li>
</ul>
<h3> <span class="mw-headline" id="Utility_types">Utility types</span>
</h3>
<p>For convenience, high-level languages may supply ready-made "real world" data types, for instance <i>times</i>, <i>dates</i> and <i>monetary values</i>, even where the language allows them to be built from primitive types.</p>
<h2> <span class="mw-headline" id="Type_systems">Type systems</span>
</h2>
<div class="rellink relarticle mainarticle">Main article: <a href="Type_system" title="Type system">Type system</a>
</div>
<p>A type system associates types with each computed value. By examining the flow of these values, a type system attempts to prove that no <i>type errors</i> can occur. The type system in question determines what constitutes a type error, but a type system generally seeks to guarantee that operations expecting a certain kind of value are not used with values for which that operation does not make sense.</p>
<p>A <a href="Compiler" title="Compiler">compiler</a> may use the static type of a value to optimize the storage it needs and the choice of algorithms for operations on the value. In many <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> compilers the <span class="mw-geshi c source-c"><span class="kw4">float</span></span> data type, for example, is represented in 32 <a href="Bit" title="Bit">bits</a>, in accord with the <a href="http://en.m.wikipedia.org/wiki/IEEE_754-2008" title="IEEE 754-2008" class="mw-redirect">IEEE specification for single-precision floating point numbers</a>. They will thus use floating-point-specific <a href="http://en.m.wikipedia.org/wiki/Instruction_set" title="Instruction set">microprocessor operations</a> on those values (floating-point addition, multiplication, etc.).</p>
<p>The depth of type constraints and the manner of their evaluation affect the <i>typing</i> of the language. A <a href="Programming_language" title="Programming language">programming language</a> may further associate an operation with varying concrete algorithms on each type in the case of <a href="Type_polymorphism" title="Type polymorphism" class="mw-redirect">type polymorphism</a>. <a href="http://en.m.wikipedia.org/wiki/Type_theory" title="Type theory">Type theory</a> is the study of type systems, although the concrete type systems of programming languages originate from practical issues of computer architecture, compiler implementation, and language design.</p>
<p>Type systems may be variously <a href="Static_typing" title="Static typing" class="mw-redirect">static</a> or <a href="http://en.m.wikipedia.org/wiki/Dynamic_typing" title="Dynamic typing" class="mw-redirect">dynamic</a>, <a href="http://en.m.wikipedia.org/wiki/Strong_typing" title="Strong typing">strong</a> or <a href="Weak_typing" title="Weak typing">weak typing</a>, and so forth.</p>
<h2> <span class="mw-headline" id="See_also">See also</span>
</h2>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Data_dictionary" title="Data dictionary">Data dictionary</a></li>
<li><a href="Functional_programming" title="Functional programming">Functional programming</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Kind_(type_theory)" title="Kind (type theory)">Kind</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Type_theory" title="Type theory">Type theory</a> for the mathematical models of types</li>
<li>
<a href="Type_system" title="Type system">Type system</a> for different choices in programming language typing</li>
</ul>
<h2> <span class="mw-headline" id="References">References</span>
</h2>
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1">
<span class="mw-cite-backlink"><b><a href="Data_type#cite_ref-1">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://foldoc.org/data+type">http://foldoc.org/data+type</a></span>
</li>
<li id="cite_note-2">
<span class="mw-cite-backlink"><b><a href="Data_type#cite_ref-2">^</a></b></span> <span class="reference-text">Shaffer, C.A. <i>Data Structures and Algorthms</i>, 1.2</span>
</li>
<li id="cite_note-3">
<span class="mw-cite-backlink"><b><a href="Data_type#cite_ref-3">^</a></b></span> <span class="reference-text"><i>Programming Languages: Application and Interpretation</i>, Shriram Krishnamurthi, Brown University</span>
</li>
</ol>
</div>
<h2> <span class="mw-headline" id="Further_reading">Further reading</span>
</h2>
<ul>
<li>
<span class="citation Journal" id="CITEREFParnasShoreWeiss1976"><a href="http://en.m.wikipedia.org/wiki/David_Parnas" title="David Parnas">Parnas, David L.</a>; <span class="new" title="John E. Shore (page does not exist)">Shore, John E.</span>; <span class="new" title="David Weiss (computer scientist) (page does not exist)">Weiss, David</span> (1976). "Abstract types defined as classes of variables". <i>Proceedings of the 1976 conference on Data : Abstraction, definition and structure</i>: 149–154. <a href="Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1145%2F800237.807133">10.1145/800237.807133</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Abstract+types+defined+as+classes+of+variables&amp;rft.jtitle=Proceedings+of+the+1976+conference+on+Data+%3A+Abstraction%2C+definition+and+structure&amp;rft.aulast=Parnas&amp;rft.aufirst=David+L.&amp;rft.au=Parnas%2C%26%2332%3BDavid+L.&amp;rft.au=Shore%2C%26%2332%3BJohn+E.&amp;rft.au=Weiss%2C%26%2332%3BDavid&amp;rft.date=1976&amp;rft.pages=149%26ndash%3B154&amp;rft_id=info:doi/10.1145%2F800237.807133&amp;rfr_id=info:sid/en.wikipedia.org:Data_type"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation Journal" id="CITEREFCardelliWegner1985"><a href="http://en.m.wikipedia.org/wiki/Luca_Cardelli" title="Luca Cardelli">Cardelli, Luca</a>; <a href="http://en.m.wikipedia.org/wiki/Peter_Wegner" title="Peter Wegner">Wegner, Peter</a> (December 1985). <a rel="nofollow" class="external text" href="http://lucacardelli.name/Papers/OnUnderstanding.A4.pdf">"On Understanding Types, Data Abstraction, and Polymorphism"</a>. <i><a href="http://en.m.wikipedia.org/wiki/ACM_Computing_Surveys" title="ACM Computing Surveys">ACM Computing Surveys</a></i> (New York, NY, USA: <a href="Association_for_Computing_Machinery" title="Association for Computing Machinery">ACM</a>) <b>17</b> (4): 471–523. <a href="Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1145%2F6041.6042">10.1145/6041.6042</a>. <a href="http://en.m.wikipedia.org/wiki/International_Standard_Serial_Number" title="International Standard Serial Number">ISSN</a> <a rel="nofollow" class="external text" href="http://www.worldcat.org/issn/0360-0300">0360-0300</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://lucacardelli.name/Papers/OnUnderstanding.A4.pdf">http://lucacardelli.name/Papers/OnUnderstanding.A4.pdf</a></span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=On+Understanding+Types%2C+Data+Abstraction%2C+and+Polymorphism&amp;rft.jtitle=%5B%5BACM+Computing+Surveys%5D%5D&amp;rft.aulast=Cardelli&amp;rft.aufirst=Luca&amp;rft.au=Cardelli%2C%26%2332%3BLuca&amp;rft.au=Wegner%2C%26%2332%3BPeter&amp;rft.date=December+1985&amp;rft.volume=17&amp;rft.issue=4&amp;rft.pages=471%26ndash%3B523&amp;rft.place=New+York%2C+NY%2C+USA&amp;rft.pub=%5B%5BAssociation+for+Computing+Machinery%7CACM%5D%5D&amp;rft_id=info:doi/10.1145%2F6041.6042&amp;rft.issn=0360-0300&amp;rft_id=http%3A%2F%2Flucacardelli.name%2FPapers%2FOnUnderstanding.A4.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Data_type"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book">Cleaveland, J. Craig (1986). <i>An Introduction to Data Types</i>. Addison-Wesley. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0201119404" title="Special:BookSources/0201119404">0201119404</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=An+Introduction+to+Data+Types&amp;rft.aulast=Cleaveland&amp;rft.aufirst=J.+Craig&amp;rft.au=Cleaveland%2C%26%2332%3BJ.+Craig&amp;rft.date=1986&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0201119404&amp;rfr_id=info:sid/en.wikipedia.org:Data_type"><span style="display: none;"> </span></span>
</li>
</ul>
<table cellspacing="0" class="navbox" style="border-spacing:0;;"><tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks hlist collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;;">
<tr>
<th scope="col" style=";" class="navbox-title" colspan="2">
<div class="noprint plainlinks hlist navbar mini" style="">
<ul>
<li class="nv-view"><a href="http://en.m.wikipedia.org/wiki/Template:Data_types" title="Template:Data types"><span title="View this template" style=";;background:none transparent;border:none;">v</span></a></li>
<li class="nv-talk"><a href="http://en.m.wikipedia.org/wiki/Template_talk:Data_types" title="Template talk:Data types"><span title="Discuss this template" style=";;background:none transparent;border:none;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Data_types&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;">e</span></a></li>
</ul>
</div>
<div class="" style="font-size:110%;"><strong class="selflink">Data types</strong></div>
</th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Uninterpreted</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="Bit" title="Bit">Bit</a></li>
<li><a href="Byte" title="Byte">Byte</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Ternary_numeral_system" title="Ternary numeral system">Trit</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Ternary_numeral_system#Tryte" title="Ternary numeral system">Tryte</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Word_(computer_architecture)" title="Word (computer architecture)">Word</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Numeric</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Integer_(computer_science)" title="Integer (computer science)">Integer</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Signedness" title="Signedness">signedness</a></li>
</ul>
</li>
<li><a href="Fixed-point_arithmetic" title="Fixed-point arithmetic">Fixed-point</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Floating_point" title="Floating point">Floating-point</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Rational_data_type" title="Rational data type">Rational</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Complex_data_type" title="Complex data type">Complex</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Arbitrary-precision_arithmetic" title="Arbitrary-precision arithmetic">Bignum</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Interval_arithmetic" title="Interval arithmetic">Interval</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Decimal_data_type" title="Decimal data type">Decimal</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="http://en.m.wikipedia.org/wiki/Plain_text" title="Plain text">Text</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Character_(computing)" title="Character (computing)">Character</a></li>
<li>
<a href="String_(computer_science)" title="String (computer science)">String</a>
<ul>
<li><a href="Null-terminated_string" title="Null-terminated string">null-terminated</a></li>
</ul>
</li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="Pointer_(computer_programming)" title="Pointer (computer programming)">Pointer</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Memory_address" title="Memory address">Address</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Physical_address" title="Physical address">physical</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Virtual_address_space" title="Virtual address space">virtual</a></li>
</ul>
</li>
<li><a href="Reference_(computer_science)" title="Reference (computer science)">Reference</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="http://en.m.wikipedia.org/wiki/Composite_data_type" title="Composite data type">Composite</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Algebraic_data_type" title="Algebraic data type">Algebraic data type</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Generalized_algebraic_data_type" title="Generalized algebraic data type">generalized</a></li>
</ul>
</li>
<li><a href="Array_data_type" title="Array data type">Array</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Associative_array" title="Associative array">Associative array</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Class_(computer_programming)" title="Class (computer programming)">Class</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/List_(computing)" title="List (computing)" class="mw-redirect">List</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Object_(computer_science)" title="Object (computer science)">Object</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Metaobject" title="Metaobject">Metaobject</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Option_type" title="Option type">Option type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Product_type" title="Product type">Product</a></li>
<li><a href="Record_(computer_science)" title="Record (computer science)">Record</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Set_(computer_science)" title="Set (computer science)" class="mw-redirect">Set</a></li>
<li>
<a href="Union_(computer_science)" title="Union (computer science)">Union</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Tagged_union" title="Tagged union">tagged</a></li>
</ul>
</li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Other</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Boolean_data_type" title="Boolean data type">Boolean</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Bottom_type" title="Bottom type">Bottom type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Container_(data_structure)" title="Container (data structure)" class="mw-redirect">Collection</a></li>
<li><a href="Enumerated_type" title="Enumerated type">Enumerated type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Exception_handling" title="Exception handling">Exception</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Function_type" title="Function type">Function type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Opaque_data_type" title="Opaque data type">Opaque data type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Recursive_data_type" title="Recursive data type">Recursive data type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Semaphore_(programming)" title="Semaphore (programming)">Semaphore</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Stream_(computing)" title="Stream (computing)">Stream</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Top_type" title="Top type">Top type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Type_class" title="Type class">Type class</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Unit_type" title="Unit type">Unit type</a></li>
<li><a href="Void_type" title="Void type">Void</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Related topics</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="Type_system" title="Type system">Type system</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Abstract_data_type" title="Abstract data type">Abstract data type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Data_structure" title="Data structure">Data structure</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Protocol_(object-oriented_programming)" title="Protocol (object-oriented programming)">Protocol</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Interface_(computing)#Software_interfaces_in_object-oriented_languages" title="Interface (computing)">Interface</a></li>
</ul>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Kind_(type_theory)" title="Kind (type theory)">Kind</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Metaclass" title="Metaclass">Metaclass</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Primitive_data_type" title="Primitive data type">Primitive data type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Subtyping" title="Subtyping">Subtyping</a></li>
<li><a href="Generic_programming" title="Generic programming">Generic</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Type_constructor" title="Type constructor">Type constructor</a></li>
<li><a href="Type_conversion" title="Type conversion">Type conversion</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Parametric_polymorphism" title="Parametric polymorphism">Parametric polymorphism</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr></table>

						<div class="section" id="mw-mf-language-section">
				<h2 id="section_language" class="section_heading">Read in another language</h2>
				<div id="content_language" class="content_block">
					<p>This article is available in 33 languages</p>
					<ul id="mw-mf-language-selection"><li><a href="http://ar.m.wikipedia.org/wiki/%D9%86%D9%88%D8%B9_%D8%A8%D9%8A%D8%A7%D9%86%D8%A7%D8%AA" lang="ar" hreflang="ar">العربية</a></li><li><a href="http://ast.m.wikipedia.org/wiki/Tipu_de_datu" lang="ast" hreflang="ast">asturianu</a></li><li><a href="http://bn.m.wikipedia.org/wiki/%E0%A6%89%E0%A6%AA%E0%A6%BE%E0%A6%A4%E0%A7%8D%E0%A6%A4_%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A6%A4%E0%A6%BF%E0%A6%A8%E0%A6%BF%E0%A6%A7%E0%A6%BF" lang="bn" hreflang="bn">বাংলা</a></li><li><a href="http://bg.m.wikipedia.org/wiki/%D0%A2%D0%B8%D0%BF_%D0%B4%D0%B0%D0%BD%D0%BD%D0%B8" lang="bg" hreflang="bg">български</a></li><li><a href="http://ca.m.wikipedia.org/wiki/Tipus_de_dada" lang="ca" hreflang="ca">català</a></li><li><a href="http://cs.m.wikipedia.org/wiki/Datov%C3%BD_typ" lang="cs" hreflang="cs">česky</a></li><li><a href="http://da.m.wikipedia.org/wiki/Datatype" lang="da" hreflang="da">dansk</a></li><li><a href="http://de.m.wikipedia.org/wiki/Datentyp" lang="de" hreflang="de">Deutsch</a></li><li><a href="http://et.m.wikipedia.org/wiki/Andmet%C3%BC%C3%BCp" lang="et" hreflang="et">eesti</a></li><li><a href="http://el.m.wikipedia.org/wiki/%CE%A4%CF%8D%CF%80%CE%BF%CF%82_%CE%B4%CE%B5%CE%B4%CE%BF%CE%BC%CE%AD%CE%BD%CF%89%CE%BD" lang="el" hreflang="el">Ελληνικά</a></li><li><a href="http://es.m.wikipedia.org/wiki/Tipo_de_dato" lang="es" hreflang="es">español</a></li><li><a href="http://fr.m.wikipedia.org/wiki/Type_(informatique)" lang="fr" hreflang="fr">français</a></li><li><a href="http://ko.m.wikipedia.org/wiki/%EC%9E%90%EB%A3%8C%ED%98%95" lang="ko" hreflang="ko">한국어</a></li><li><a href="http://is.m.wikipedia.org/wiki/Gagnager%C3%B0" lang="is" hreflang="is">íslenska</a></li><li><a href="http://it.m.wikipedia.org/wiki/Tipo_di_dato" lang="it" hreflang="it">italiano</a></li><li><a href="http://he.m.wikipedia.org/wiki/%D7%98%D7%99%D7%A4%D7%95%D7%A1_%D7%A0%D7%AA%D7%95%D7%A0%D7%99%D7%9D" lang="he" hreflang="he">עברית</a></li><li><a href="http://kk.m.wikipedia.org/wiki/%D0%9C%D3%99%D0%BB%D1%96%D0%BC%D0%B5%D1%82%D1%82%D0%B5%D1%80_%D1%82%D0%B8%D0%BF%D1%96" lang="kk" hreflang="kk">қазақша</a></li><li><a href="http://lv.m.wikipedia.org/wiki/Datu_tips" lang="lv" hreflang="lv">latviešu</a></li><li><a href="http://lt.m.wikipedia.org/wiki/Duomen%C5%B3_strukt%C5%ABra" lang="lt" hreflang="lt">lietuvių</a></li><li><a href="http://hu.m.wikipedia.org/wiki/Adatt%C3%ADpus" lang="hu" hreflang="hu">magyar</a></li><li><a href="http://nl.m.wikipedia.org/wiki/Datatype" lang="nl" hreflang="nl">Nederlands</a></li><li><a href="http://ja.m.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E5%9E%8B" lang="ja" hreflang="ja">日本語</a></li><li><a href="http://no.m.wikipedia.org/wiki/Datatype" lang="no" hreflang="no">norsk (bokmål)‎</a></li><li><a href="http://pl.m.wikipedia.org/wiki/Typ_danych" lang="pl" hreflang="pl">polski</a></li><li><a href="http://pt.m.wikipedia.org/wiki/Tipo_de_dado" lang="pt" hreflang="pt">português</a></li><li><a href="http://ru.m.wikipedia.org/wiki/%D0%A2%D0%B8%D0%BF_%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%BD%D0%BE%D0%B9" lang="ru" hreflang="ru">русский</a></li><li><a href="http://sk.m.wikipedia.org/wiki/D%C3%A1tov%C3%BD_typ" lang="sk" hreflang="sk">slovenčina</a></li><li><a href="http://sl.m.wikipedia.org/wiki/Podatkovni_tip" lang="sl" hreflang="sl">slovenščina</a></li><li><a href="http://sv.m.wikipedia.org/wiki/Datatyp" lang="sv" hreflang="sv">svenska</a></li><li><a href="http://ta.m.wikipedia.org/wiki/%E0%AE%A4%E0%AE%B0%E0%AE%B5%E0%AF%81_%E0%AE%87%E0%AE%A9%E0%AE%AE%E0%AF%8D" lang="ta" hreflang="ta">தமிழ்</a></li><li><a href="http://uk.m.wikipedia.org/wiki/%D0%A2%D0%B8%D0%BF_%D0%B4%D0%B0%D0%BD%D0%B8%D1%85" lang="uk" hreflang="uk">українська</a></li><li><a href="http://vi.m.wikipedia.org/wiki/Ki%E1%BB%83u_d%E1%BB%AF_li%E1%BB%87u" lang="vi" hreflang="vi">Tiếng Việt</a></li><li><a href="http://zh.m.wikipedia.org/wiki/%E8%B3%87%E6%96%99%E9%A1%9E%E5%9E%8B" lang="zh" hreflang="zh">中文</a></li></ul>
				</div>
			</div>			</div><!-- close #content_wrapper -->
			<div id="footer">
			<h2 class="section_heading" id="section_footer">
		<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/logo-copyright-en.png" class="license" alt="Wikipedia ®" />	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Data_type&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Data_type&amp;action=history">contributors</a> like you<br>
				Content available under <a href="Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>				<span>| <a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span>
			</li>
		</ul>
		<ul class="links">
						<li>
			<a href='http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Data+type&amp;feedbacksource=MobileFrontend'>
				Contact Wikipedia			</a>
			</li><li>
						<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div><!-- close footer.div / #content_footer -->
	</div><!-- close #footer -->
					</div><!-- close #mw-mf-page-center -->
		</div><!-- close #mw-mf-viewport -->
		
					</body>
	</html>