<!doctype html>
	<html lang="en" dir="ltr" class="">
	<head>
		<title>Union (computer science) - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="robots" content="noindex,nofollow"/>		<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile%7Cmobile.production-only%2Cproduction-jquery%7Cmobile.device.default&amp;only=styles&amp;skin=mobile&amp;version=1352163471&amp;*" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile.site&amp;only=styles&amp;skin=mobile&amp;*" />		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />		<script type="text/javascript">
			var _mwStart = +new Date;
			window._evq = window._evq || [];
			if ( typeof console === 'undefined' ) {
				console = { log: function() {} };
			}
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"mobile-frontend-watchlist-add":"Added $1 to your watchlist","mobile-frontend-watchlist-removed":"Removed $1 from your watchlist","mobile-frontend-watchlist-view":"View your watchlist","mobile-frontend-ajax-random-heading":"Locating knowledge...","mobile-frontend-ajax-random-quote":"Intellectual growth should commence at birth and cease only at death","mobile-frontend-ajax-random-quote-author":"Albert Einstein","mobile-frontend-ajax-random-question":"Read this article?","mobile-frontend-ajax-random-yes":"Yes","mobile-frontend-ajax-random-retry":"Try again","mobile-frontend-ajax-page-loading":"Loading $1","mobile-frontend-page-saving":"Saving $1","mobile-frontend-ajax-page-error":"Whoops! Something went wrong there. Please try refreshing your browser window.","mobile-frontend-meta-data-issues":"This article has some issues","mobile-frontend-meta-data-issues-header":"Issues","expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-footer":"<a href="http://en.m.wikipedia.org/wiki/\&quot;\/wiki\/Special:MobileOptions\/Language\&quot;">Note: This article may not be written in your preferred language. You can see which languages Wikipedia supports by clicking here.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"action":"","authenticated":false,"scriptPath":"\/w","shim":"\/\/bits.wikimedia.org\/static-1.21wmf3\/extensions\/MobileFrontend\/stylesheets\/common\/images\/blank.gif","pageUrl":"\/wiki\/$1","beta":null,"title":"Union (computer science)","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			function _mwLogEvent( data, additionalInformation ) {
				var timestamp = + new Date;
				var ev = { event_id: 'mobile', delta: timestamp - _mwStart, data: data, beta: mwMobileFrontendConfig.settings.beta,
					session: _mwStart, page: mwMobileFrontendConfig.settings.title, info: additionalInformation || '' };
				_evq.push( ev );
				console.log( typeof JSON === 'undefined' ? ev : JSON.stringify( ev ) );
			}
		</script>
				<link rel="canonical" href="http://en.wikipedia.org/wiki/Union_(computer_science)" >
	</head>
	<body class="mobile live">
				<div id="mw-mf-viewport">
		<div id="mw-mf-page-left">
		<div id='mw-mf-content-left'>
		<ul id="mw-mf-menu-main">
			<li class='icon'><a href="Main_Page"
				title="Home">
				Home</a></li>
			<li class='icon2'><a href="Special:Random#mw-mf-page-left" id="randomButton"
				title="Random"
				class="button">Random</a></li>
						<li class='icon5'>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions&amp;returnto=Union+%28computer+science%29"
					title="Settings">
				Settings				</a>
			</li>
					</ul>
		</div>
		</div>
		<div id='mw-mf-page-center'>
									<div id="mw-mf-header">
		<a title="Open main menu" href="Special:MobileMenu#mw-mf-page-left" id="mw-mf-main-menu-button">				<img alt="menu"
				src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif">
		</a>			<form id="mw-mf-searchForm" action="http://en.m.wikipedia.org/w/index.php" class="search_bar" method="get">
			<input type="hidden" value="Special:Search" name="title" />
			<div id="mw-mf-sq" class="divclearable">
				<input type="search" name="search" id="mw-mf-search" size="22" value="" autocomplete="off" maxlength="1024" class="search"
					placeholder="Search Wikipedia"
					/>
				<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear"/>
				<input class='searchSubmit' type="submit" value="Go">
			</div>
		</form>
	</div>
	<div id="results"></div>
		<div class='show ' id='content_wrapper'>
						<h1 id="firstHeading">Union (computer science)</h1>			
<table class="metadata plainlinks ambox ambox-content ambox-Unreferenced" style=""><tr>
<td class="mbox-image">
<div style="width: 52px;"><a href="File:Question_book-new.svg" class="image"><img alt="Question book-new.svg" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x"></a></div>
</td>
<td class="mbox-text" style=""><span class="mbox-text-span">This article <b>does not <a href="Wikipedia:Citing_sources" title="Wikipedia:Citing sources">cite</a> any <a href="Wikipedia:Verifiability" title="Wikipedia:Verifiability">references or sources</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Union_(computer_science)&amp;action=edit">improve this article</a> by <a href="http://en.m.wikipedia.org/wiki/Help:Introduction_to_referencing/1" title="Help:Introduction to referencing/1">adding citations to reliable sources</a>. Unsourced material may be challenged and <a href="Wikipedia:Verifiability#Burden_of_evidence" title="Wikipedia:Verifiability">removed</a>.</span> <small><i>(August 2009)</i></small> </span></td>
</tr></table>
<p>In <a href="http://en.m.wikipedia.org/wiki/Computer_science" title="Computer science">computer science</a>, a <b>union</b> is a <a href="http://en.m.wikipedia.org/wiki/Value_(computer_science)" title="Value (computer science)">value</a> that may have any of several representations or formats; or a <a href="http://en.m.wikipedia.org/wiki/Data_structure" title="Data structure">data structure</a> that consists of a <a href="http://en.m.wikipedia.org/wiki/Variable_(computer_science)" title="Variable (computer science)">variable</a> which may hold such a value. Some <a href="http://en.m.wikipedia.org/wiki/Programming_languages" title="Programming languages" class="mw-redirect">programming languages</a> support special <a href="Data_type" title="Data type">data types</a>, called (somewhat confusingly) <b>union types</b>, to describe such values and variables. In other words, a union type definition will specify which of a number of permitted primitive types may be stored in its instances, e.g. "float or long integer". Contrast with a <a href="Record_(computer_science)" title="Record (computer science)">record</a>, which could be defined to contain a float <i>and</i> an integer; whereas, in a union, there is only one value at a time.</p>
<p>You can picture a union as like a chunk of memory that is used to store variables of different types. Once a new value is assigned to a field, the existing data is wiped over with the new data.</p>
<p>In <a href="http://en.m.wikipedia.org/wiki/Type_theory" title="Type theory">type theory</a>, a union has a <a href="http://en.m.wikipedia.org/wiki/Sum_type" title="Sum type" class="mw-redirect">sum type</a>.</p>
<p>Depending on the language and type, a union value may be used in some operations, such as <a href="http://en.m.wikipedia.org/wiki/Assignment_statement" title="Assignment statement" class="mw-redirect">assignment</a> and comparison for equality, without knowing its specific type. Other operations may require that knowledge, either by some external information, or by the use of a <a href="http://en.m.wikipedia.org/wiki/Tagged_union" title="Tagged union">tagged union</a>.</p>
<p><b>Note:</b> The remainder of this article refers strictly to primitive <b>untagged unions</b>, as opposed to <a href="http://en.m.wikipedia.org/wiki/Tagged_union" title="Tagged union">tagged unions</a>.</p>
<p>Because of the limitations of their use, untagged unions are generally only provided in untyped languages or in an unsafe way (as in <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a>). They have the advantage over simple tagged unions of not requiring space to store the tag.</p>
<p>The name "union" stems from the type's formal definition. If one sees a type as the <a href="http://en.m.wikipedia.org/wiki/Set_(mathematics)" title="Set (mathematics)">set</a> of all values that that type can take on, a union type is simply the mathematical <a href="http://en.m.wikipedia.org/wiki/Union_(set_theory)" title="Union (set theory)">union</a> of its constituting types, since it can take on any value any of its fields can. Also, because a mathematical union discards duplicates, if more than one field of the union can take on a single common value, it is impossible to tell from the value alone which field was last written.</p>
<p>However, one useful programming function of unions is to map smaller data elements to larger ones for easier manipulation. A data structure, consisting for example of 4 bytes and a 32-bit integer, can form a union (in this case with an unsigned 64-bit integer) and thus be more readily accessed for purposes of comparison etc.</p>
<p>Like a structure, all of the members of a union are by default public. The keywords private, public, and protected may be used inside a struct or a union in exactly the same way they are used inside a class for defining private, public, and protected members.</p>
<h2> <span class="mw-headline" id="Unions_in_various_programming_languages">Unions in various programming languages</span>
</h2>
<h3> <span class="mw-headline" id="C.2FC.2B.2B">C/C++</span>
</h3>
<p>In <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> and <a href="C++" title="C++">C++</a>, untagged unions are expressed nearly exactly like structures (<a href="Struct_(C_programming_language)" title="Struct (C programming language)">structs</a>), except that each data member begins at the same location in memory. The data members, as in structures, need not be primitive values, and in fact may be structures or even other unions. However, C++ does not allow for a data member to be any type that has a full fledged constructor/destructor and/or copy constructor, or a non-trivial copy assignment operator. For example, it is impossible to have the standard C++ <a href="http://en.m.wikipedia.org/wiki/String_(C%2B%2B)" title="String (C++)">string</a> as a member of a union.</p>
<p>The primary usefulness of a union is to conserve space, since it provides a way of letting many different types be stored in the same space. Unions also provide crude <a href="http://en.m.wikipedia.org/wiki/Polymorphism_(computer_science)" title="Polymorphism (computer science)">polymorphism</a>. However, there is no checking of types, so it is up to the programmer to be sure that the proper fields are accessed in different contexts. The relevant field of a union variable is typically determined by the state of other variables, possibly in an enclosing struct.</p>
<p>One common C programming idiom uses unions to perform what C++ calls a <b>reinterpret_cast</b>, by assigning to one field of a union and reading from another, as is done in code which depends on the raw representation of the values. A practical example is the <a href="http://en.m.wikipedia.org/wiki/Methods_of_computing_square_roots#Approximations_that_depend_on_IEEE_representation" title="Methods of computing square roots">method of computing square roots using the IEEE representation</a>. This is not, however, a safe use of unions in general.</p>
<blockquote class="templatequote">
<div class="Bug6200">Structure and union specifiers have the same form. [ . . . ] The size of a union is sufficient to contain the largest of its members. The value of at most one of the members can be stored in a union <a href="http://en.m.wikipedia.org/wiki/Object_(computer_science)" title="Object (computer science)">object</a> at any time. A pointer to a union object, suitably converted, points to each of its members (or if a member is a bit-field, then to the unit in which it resides), and vice versa.</div>
<div class="templatequotecite">—ANSI/ISO 9899:1990 (the ANSI C standard) Section 6.5.2.1</div>
</blockquote>
<h4> <span class="mw-headline" id="Anonymous_union">Anonymous union</span>
</h4>
<p>Unions can also be anonymous; that is, they do not have a name. Their data members are accessed directly. In addition to this, they have certain other restrictions like:</p>
<ul>
<li>They must also be declared as static if declared in file scope.If declared in local scope, they must be static or automatic.</li>
<li>They can have only public members; private and protected members in anonymous unions generate errors.</li>
<li>They cannot have function members.</li>
</ul>
<p>An important point to be noted is that simply omitting the class-name portion of the syntax does not make a union an anonymous union. For a union to qualify as an anonymous union, the declaration must not declare an object. Example:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="co1">// anonymous_unions.cpp</span>
<span class="co2">#include &lt;iostream&gt;</span>
using namespace std<span class="sy0">;</span>
<span class="kw4">int</span> main<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
   <span class="kw4">union</span> <span class="br0">{</span>
      <span class="kw4">int</span> d<span class="sy0">;</span>
      <span class="kw4">char</span> f<span class="sy0">;</span>
   <span class="br0">}</span><span class="sy0">;</span>
 
   d <span class="sy0">=</span> <span class="nu0">4</span><span class="sy0">;</span>
   cout <span class="sy0">&lt;&lt;</span> d <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
 
   f <span class="sy0">=</span> <span class="st0">'i'</span><span class="sy0">;</span>
   cout <span class="sy0">&lt;&lt;</span> f <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
<span class="br0">}</span>
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="COBOL">COBOL</span>
</h3>
<p>In <a href="http://en.m.wikipedia.org/wiki/COBOL" title="COBOL">COBOL</a>, union data items are defined in two ways. The first uses the <tt>RENAMES</tt> (66 level) keyword, which effectively maps a second alphanumeric data item on top of the same memory location as a preceding data item. In the example code below, data item <tt>PERSON-REC</tt> is defined as a group containing another group and a numeric data item. <tt>PERSON-DATA</tt> is defined as an alphanumeric data item that renames <tt>PERSON-REC</tt>, treating the data bytes continued within it as character data.</p>
<pre>
 01  PERSON-REC.
     05  PERSON-NAME.
         10  PERSON-NAME-LAST    PIC X(12).
         10  PERSON-NAME-FIRST   PIC X(16).
         10  PERSON-NAME-MID     PIC X.
     05  PERSON-ID               PIC 9(9) PACKED-DECIMAL.
 
 01  PERSON-DATA                 RENAMES PERSON-REC.
</pre>
<p>The second way to define a union type is by using the <tt>REDEFINES</tt> keyword. In the example code below, data item <tt>VERS-NUM</tt> is defined as a 2-byte binary integer containing a version number. A second data item <tt>VERS-BYTES</tt> is defined as a two-character alphanumeric variable. Since the second item is <i>redefined</i> over the first item, the two items share the same address in memory, and therefore share the same underlying data bytes. The first item interprets the two data bytes as a binary value, while the second item interprets the bytes as character values.</p>
<pre>
 01  VERS-INFO.
     05  VERS-NUM        PIC S9(4) COMP.
     05  VERS-BYTES      PIC X(2)
                         REDEFINES VERS-NUMBER.
</pre>
<h2> <span class="mw-headline" id="Syntax_and_Example">Syntax and Example</span>
</h2>
<p>In C and C++, the syntax is:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">union</span> <span class="sy0">&lt;</span>name<span class="sy0">&gt;</span>
<span class="br0">{</span>
    <span class="sy0">&lt;</span>datatype<span class="sy0">&gt;</span>  <span class="sy0">&lt;</span>1st variable name<span class="sy0">&gt;;</span>
    <span class="sy0">&lt;</span>datatype<span class="sy0">&gt;</span>  <span class="sy0">&lt;</span>2nd variable name<span class="sy0">&gt;;</span>
    .
    .
    .
    <span class="sy0">&lt;</span>datatype<span class="sy0">&gt;</span>  <span class="sy0">&lt;</span>nth variable name<span class="sy0">&gt;;</span>
<span class="br0">}</span> <span class="sy0">&lt;</span><span class="kw4">union</span> variable name<span class="sy0">&gt;;</span>
</pre>
</div>
</div>
<p>A structure can also be a member of a union, as the following example shows:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">union</span> name1
<span class="br0">{</span>
    <span class="kw4">struct</span> name2
    <span class="br0">{</span>  
        <span class="kw4">int</span>     a<span class="sy0">;</span>
        <span class="kw4">float</span>   b<span class="sy0">;</span>
        <span class="kw4">char</span>    c<span class="sy0">;</span>
    <span class="br0">}</span> svar<span class="sy0">;</span>
    <span class="kw4">int</span>     d<span class="sy0">;</span>
<span class="br0">}</span> uvar<span class="sy0">;</span>
</pre>
</div>
</div>
<p>This example defines a variable <code>uvar</code> as a union (tagged as <code>name1</code>), which contains two members, a structure (tagged as <code>name2</code>) named <code>svar</code> (which in turn contains three members), and an integer variable named <code>d</code>.</p>
<p>Unions may occur within structures and arrays,and vice versa:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">struct</span>
<span class="br0">{</span>  
    <span class="kw4">int</span> flags<span class="sy0">;</span>
    <span class="kw4">char</span> <span class="sy0">*</span>name<span class="sy0">;</span>
    <span class="kw4">int</span> utype<span class="sy0">;</span>
    <span class="kw4">union</span> <span class="br0">{</span>
        <span class="kw4">int</span> ival<span class="sy0">;</span>
        <span class="kw4">float</span> fval<span class="sy0">;</span>
        <span class="kw4">char</span> <span class="sy0">*</span>sval<span class="sy0">;</span>
    <span class="br0">}</span> u<span class="sy0">;</span>
<span class="br0">}</span> symtab<span class="br0">[</span>NSYM<span class="br0">]</span><span class="sy0">;</span>
</pre>
</div>
</div>
<p>The number ival is referred to as symtab[i].u.ival and the first character of string sval by either of *symtab[i].u.sval or symtab[i].u.sval[0].</p>
<h2> <span class="mw-headline" id="Difference_between_Union_and_Structure">Difference between Union and Structure</span>
</h2>
<p>A union is a class all of whose data members are mapped to the same address within its object. The size of an object of a union is, therefore, the size of its largest data member.</p>
<p>In a structure, all of its data members are stored in contiguous memory locations. The size of an object of a struct is, therefore, the size of the sum of all its data members.</p>
<p>This gain in space efficiency, while valuable in certain circumstances, comes at a great cost of safety: the program logic must ensure that it only reads the field most recently written along all possible execution paths. The exception is when unions are used for <a href="Type_conversion" title="Type conversion">type conversion</a>: in this case, a certain field is written and the subsequently read field is deliberately different.</p>
<p>An example illustrating this point is:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
                                 <span class="sy0">+-----+-----+</span>
<span class="kw4">struct</span> <span class="br0">{</span> <span class="kw4">int</span> a<span class="sy0">;</span> <span class="kw4">float</span> b <span class="br0">}</span>  gives <span class="sy0">|</span>  a  <span class="sy0">|</span>  b  <span class="sy0">|</span>
                                 <span class="sy0">+-----+-----+</span>
                                    <span class="sy0">^</span>     <span class="sy0">^</span>
                                    <span class="sy0">|</span>     <span class="sy0">|</span>
                 memory location<span class="sy0">:</span>  <span class="nu0">150</span>   <span class="nu0">154</span>
                                    <span class="sy0">|</span>
                                    V
                                 <span class="sy0">+-----+</span>
<span class="kw4">union</span> <span class="br0">{</span> <span class="kw4">int</span> a<span class="sy0">;</span> <span class="kw4">float</span> b <span class="br0">}</span>  gives  <span class="sy0">|</span>  a  <span class="sy0">|</span>
                                 <span class="sy0">|</span>  b  <span class="sy0">|</span>
                                 <span class="sy0">+-----+</span>
</pre>
</div>
</div>
<p>Structures are used where an "object" is composed of other objects, like a point object consisting of two integers, those being the x and y coordinates:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">typedef</span> <span class="kw4">struct</span> <span class="br0">{</span>
    <span class="kw4">int</span> x<span class="sy0">;</span>           <span class="co1">// x and y are separate</span>
    <span class="kw4">int</span> y<span class="sy0">;</span>
<span class="br0">}</span> tPoint<span class="sy0">;</span>
</pre>
</div>
</div>
<p>Unions are typically used in situation where an object can be one of many things but only one at a time, such as a type-less storage system:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">typedef</span> <span class="kw2">enum</span> <span class="br0">{</span> STR<span class="sy0">,</span> INT <span class="br0">}</span> tType<span class="sy0">;</span>
<span class="kw4">typedef</span> <span class="kw4">struct</span> <span class="br0">{</span>
    tType typ<span class="sy0">;</span>          <span class="co1">// typ is separate.</span>
    <span class="kw4">union</span> <span class="br0">{</span>
        <span class="kw4">int</span> ival<span class="sy0">;</span>       <span class="co1">// ival and sval occupy same memory.</span>
        <span class="kw4">char</span> <span class="sy0">*</span>sval<span class="sy0">;</span>
    <span class="br0">}</span>
<span class="br0">}</span> tVal<span class="sy0">;</span>
</pre>
</div>
</div>
<h2> <span class="mw-headline" id="See_also">See also</span>
</h2>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Tagged_union" title="Tagged union">Tagged union</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Set_operations_(SQL)#UNION_operator" title="Set operations (SQL)">UNION operator</a></li>
<li>C++ Essentials by Sharam Hekmat</li>
</ul>
<h2> <span class="mw-headline" id="External_links">External links</span>
</h2>
<ul>
<li>
<a rel="nofollow" class="external text" href="http://boost.org/doc/html/variant.html">boost::variant</a>, a type-safe alternative to C++ unions</li>
<li>
<a rel="nofollow" class="external text" href="http://msdn.microsoft.com/en-us/library/4a1hcx0y(v=VS.80).aspx">MSDN: Classes,Structures &amp; Unions</a>, for examples and syntax</li>
<li>
<a rel="nofollow" class="external text" href="http://stackoverflow.com">differences</a>, differences between union &amp; structure</li>
</ul>
<table cellspacing="0" class="navbox" style="border-spacing:0;;"><tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks hlist collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;;">
<tr>
<th scope="col" style=";" class="navbox-title" colspan="2">
<div class="noprint plainlinks hlist navbar mini" style="">
<ul>
<li class="nv-view"><a href="http://en.m.wikipedia.org/wiki/Template:Data_structures" title="Template:Data structures"><span title="View this template" style=";;background:none transparent;border:none;">v</span></a></li>
<li class="nv-talk"><a href="http://en.m.wikipedia.org/wiki/Template_talk:Data_structures" title="Template talk:Data structures"><span title="Discuss this template" style=";;background:none transparent;border:none;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Data_structures&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;">e</span></a></li>
</ul>
</div>
<div class="" style="font-size:110%;"><a href="http://en.m.wikipedia.org/wiki/Data_structure" title="Data structure">Data structures</a></div>
</th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Types</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Collection_(computing)" title="Collection (computing)" class="mw-redirect">Collection</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Container_(data_structure)" title="Container (data structure)" class="mw-redirect">Container</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="http://en.m.wikipedia.org/wiki/Abstract_data_type" title="Abstract data type">Abstract</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/List_(computing)" title="List (computing)" class="mw-redirect">List</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Associative_array" title="Associative array">Associative array</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Multimap" title="Multimap">Multimap</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Set_(computer_science)" title="Set (computer science)" class="mw-redirect">Set</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Set_(computer_science)#Multiset" title="Set (computer science)" class="mw-redirect">Multiset</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Queue_(abstract_data_type)" title="Queue (abstract data type)">Queue</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Double-ended_queue" title="Double-ended queue">Double-ended queue</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Priority_queue" title="Priority queue">Priority queue</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Double-ended_priority_queue" title="Double-ended priority queue">Double-ended priority queue</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Stack_(abstract_data_type)" title="Stack (abstract data type)">Stack</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="http://en.m.wikipedia.org/wiki/Array_data_structure" title="Array data structure">Arrays</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Dynamic_array" title="Dynamic array">Dynamic array</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Hashed_array_tree" title="Hashed array tree">Hashed array tree</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Sparse_array" title="Sparse array">Sparse array</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Circular_buffer" title="Circular buffer">Circular buffer</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Bit_array" title="Bit array">Bit array</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Hash_table" title="Hash table">Hash table</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="http://en.m.wikipedia.org/wiki/Linked_data_structure" title="Linked data structure">Linked</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="Linked_list" title="Linked list">Linked list</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Unrolled_linked_list" title="Unrolled linked list">Unrolled linked list</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/XOR_linked_list" title="XOR linked list">XOR linked list</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Skip_list" title="Skip list">Skip list</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Association_list" title="Association list">Association list</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="Tree_(data_structure)" title="Tree (data structure)">Trees</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/B-tree" title="B-tree">B-tree</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Binary_search_tree" title="Binary search tree">Binary search tree</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Self-balancing_binary_search_tree" title="Self-balancing binary search tree">self-balancing</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/AA_tree" title="AA tree">AA</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/AVL_tree" title="AVL tree">AVL</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Red-black_tree" title="Red-black tree" class="mw-redirect">red-black</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Splay_tree" title="Splay tree">splay</a></li>
</ul>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Heap_(data_structure)" title="Heap (data structure)">Heap</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Binary_heap" title="Binary heap">binary</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Binomial_heap" title="Binomial heap">binomial</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Fibonacci_heap" title="Fibonacci heap">Fibonacci</a></li>
</ul>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/R-tree" title="R-tree">R-tree</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/R*_tree" title="R* tree">R*</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/R%2B_tree" title="R+ tree">R+</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Hilbert_R-tree" title="Hilbert R-tree">Hilbert</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Trie" title="Trie">Trie</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="http://en.m.wikipedia.org/wiki/Graph_(data_structure)" title="Graph (data structure)" class="mw-redirect">Graphs</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Directed_acyclic_word_graph" title="Directed acyclic word graph">Directed acyclic word graph</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Binary_decision_diagram" title="Binary decision diagram">Binary decision diagram</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-abovebelow" style=";" colspan="2">
<div>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/List_of_data_structures" title="List of data structures">List of data structures</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr></table>
<table cellspacing="0" class="navbox" style="border-spacing:0;;"><tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks hlist collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;;">
<tr>
<th scope="col" style=";" class="navbox-title" colspan="2">
<div class="noprint plainlinks hlist navbar mini" style="">
<ul>
<li class="nv-view"><a href="http://en.m.wikipedia.org/wiki/Template:Data_types" title="Template:Data types"><span title="View this template" style=";;background:none transparent;border:none;">v</span></a></li>
<li class="nv-talk"><a href="http://en.m.wikipedia.org/wiki/Template_talk:Data_types" title="Template talk:Data types"><span title="Discuss this template" style=";;background:none transparent;border:none;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Data_types&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;">e</span></a></li>
</ul>
</div>
<div class="" style="font-size:110%;"><a href="Data_type" title="Data type">Data types</a></div>
</th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Uninterpreted</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="Bit" title="Bit">Bit</a></li>
<li><a href="Byte" title="Byte">Byte</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Ternary_numeral_system" title="Ternary numeral system">Trit</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Ternary_numeral_system#Tryte" title="Ternary numeral system">Tryte</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Word_(computer_architecture)" title="Word (computer architecture)">Word</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Numeric</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Integer_(computer_science)" title="Integer (computer science)">Integer</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Signedness" title="Signedness">signedness</a></li>
</ul>
</li>
<li><a href="Fixed-point_arithmetic" title="Fixed-point arithmetic">Fixed-point</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Floating_point" title="Floating point">Floating-point</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Rational_data_type" title="Rational data type">Rational</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Complex_data_type" title="Complex data type">Complex</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Arbitrary-precision_arithmetic" title="Arbitrary-precision arithmetic">Bignum</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Interval_arithmetic" title="Interval arithmetic">Interval</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Decimal_data_type" title="Decimal data type">Decimal</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="http://en.m.wikipedia.org/wiki/Plain_text" title="Plain text">Text</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Character_(computing)" title="Character (computing)">Character</a></li>
<li>
<a href="String_(computer_science)" title="String (computer science)">String</a>
<ul>
<li><a href="Null-terminated_string" title="Null-terminated string">null-terminated</a></li>
</ul>
</li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="Pointer_(computer_programming)" title="Pointer (computer programming)">Pointer</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Memory_address" title="Memory address">Address</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Physical_address" title="Physical address">physical</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Virtual_address_space" title="Virtual address space">virtual</a></li>
</ul>
</li>
<li><a href="Reference_(computer_science)" title="Reference (computer science)">Reference</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="http://en.m.wikipedia.org/wiki/Composite_data_type" title="Composite data type">Composite</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Algebraic_data_type" title="Algebraic data type">Algebraic data type</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Generalized_algebraic_data_type" title="Generalized algebraic data type">generalized</a></li>
</ul>
</li>
<li><a href="Array_data_type" title="Array data type">Array</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Associative_array" title="Associative array">Associative array</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Class_(computer_programming)" title="Class (computer programming)">Class</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/List_(computing)" title="List (computing)" class="mw-redirect">List</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Object_(computer_science)" title="Object (computer science)">Object</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Metaobject" title="Metaobject">Metaobject</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Option_type" title="Option type">Option type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Product_type" title="Product type">Product</a></li>
<li><a href="Record_(computer_science)" title="Record (computer science)">Record</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Set_(computer_science)" title="Set (computer science)" class="mw-redirect">Set</a></li>
<li>
<strong class="selflink">Union</strong>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Tagged_union" title="Tagged union">tagged</a></li>
</ul>
</li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Other</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Boolean_data_type" title="Boolean data type">Boolean</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Bottom_type" title="Bottom type">Bottom type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Container_(data_structure)" title="Container (data structure)" class="mw-redirect">Collection</a></li>
<li><a href="Enumerated_type" title="Enumerated type">Enumerated type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Exception_handling" title="Exception handling">Exception</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Function_type" title="Function type">Function type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Opaque_data_type" title="Opaque data type">Opaque data type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Recursive_data_type" title="Recursive data type">Recursive data type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Semaphore_(programming)" title="Semaphore (programming)">Semaphore</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Stream_(computing)" title="Stream (computing)">Stream</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Top_type" title="Top type">Top type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Type_class" title="Type class">Type class</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Unit_type" title="Unit type">Unit type</a></li>
<li><a href="Void_type" title="Void type">Void</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Related topics</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="Type_system" title="Type system">Type system</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Abstract_data_type" title="Abstract data type">Abstract data type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Data_structure" title="Data structure">Data structure</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Protocol_(object-oriented_programming)" title="Protocol (object-oriented programming)">Protocol</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Interface_(computing)#Software_interfaces_in_object-oriented_languages" title="Interface (computing)">Interface</a></li>
</ul>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Kind_(type_theory)" title="Kind (type theory)">Kind</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Metaclass" title="Metaclass">Metaclass</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Primitive_data_type" title="Primitive data type">Primitive data type</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Subtyping" title="Subtyping">Subtyping</a></li>
<li><a href="Generic_programming" title="Generic programming">Generic</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Type_constructor" title="Type constructor">Type constructor</a></li>
<li><a href="Type_conversion" title="Type conversion">Type conversion</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Parametric_polymorphism" title="Parametric polymorphism">Parametric polymorphism</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr></table>

						<div class="section" id="mw-mf-language-section">
				<h2 id="section_language" class="section_heading">Read in another language</h2>
				<div id="content_language" class="content_block">
					<p>This article is available in 6 languages</p>
					<ul id="mw-mf-language-selection"><li><a href="http://de.m.wikipedia.org/wiki/Verbund_(Datentyp)#Union" lang="de" hreflang="de">Deutsch</a></li><li><a href="http://es.m.wikipedia.org/wiki/Union_(programaci%C3%B3n)" lang="es" hreflang="es">español</a></li><li><a href="http://it.m.wikipedia.org/wiki/Union_(C)" lang="it" hreflang="it">italiano</a></li><li><a href="http://ja.m.wikipedia.org/wiki/%E5%85%B1%E7%94%A8%E4%BD%93" lang="ja" hreflang="ja">日本語</a></li><li><a href="http://pl.m.wikipedia.org/wiki/Unia_(programowanie)" lang="pl" hreflang="pl">polski</a></li><li><a href="http://ru.m.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%B4%D0%B8%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5_(%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%82%D1%83%D1%80%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85)" lang="ru" hreflang="ru">русский</a></li></ul>
				</div>
			</div>			</div><!-- close #content_wrapper -->
			<div id="footer">
			<h2 class="section_heading" id="section_footer">
		<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/logo-copyright-en.png" class="license" alt="Wikipedia ®" />	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Union_(computer_science)&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Union_(computer_science)&amp;action=history">contributors</a> like you<br>
				Content available under <a href="Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>				<span>| <a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span>
			</li>
		</ul>
		<ul class="links">
						<li>
			<a href='http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Union+%28computer+science%29&amp;feedbacksource=MobileFrontend'>
				Contact Wikipedia			</a>
			</li><li>
						<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div><!-- close footer.div / #content_footer -->
	</div><!-- close #footer -->
					</div><!-- close #mw-mf-page-center -->
		</div><!-- close #mw-mf-viewport -->
		
					</body>
	</html>