<!doctype html>
	<html lang="en" dir="ltr" class="">
	<head>
		<title>Object-oriented programming - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="robots" content="noindex,nofollow"/>		<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile%7Cmobile.production-only%2Cproduction-jquery%7Cmobile.device.default&amp;only=styles&amp;skin=mobile&amp;version=1352163471&amp;*" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile.site&amp;only=styles&amp;skin=mobile&amp;*" />		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />		<script type="text/javascript">
			var _mwStart = +new Date;
			window._evq = window._evq || [];
			if ( typeof console === 'undefined' ) {
				console = { log: function() {} };
			}
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"mobile-frontend-watchlist-add":"Added $1 to your watchlist","mobile-frontend-watchlist-removed":"Removed $1 from your watchlist","mobile-frontend-watchlist-view":"View your watchlist","mobile-frontend-ajax-random-heading":"Locating knowledge...","mobile-frontend-ajax-random-quote":"Intellectual growth should commence at birth and cease only at death","mobile-frontend-ajax-random-quote-author":"Albert Einstein","mobile-frontend-ajax-random-question":"Read this article?","mobile-frontend-ajax-random-yes":"Yes","mobile-frontend-ajax-random-retry":"Try again","mobile-frontend-ajax-page-loading":"Loading $1","mobile-frontend-page-saving":"Saving $1","mobile-frontend-ajax-page-error":"Whoops! Something went wrong there. Please try refreshing your browser window.","mobile-frontend-meta-data-issues":"This article has some issues","mobile-frontend-meta-data-issues-header":"Issues","expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-footer":"<a href="http://en.m.wikipedia.org/wiki/\&quot;\/wiki\/Special:MobileOptions\/Language\&quot;">Note: This article may not be written in your preferred language. You can see which languages Wikipedia supports by clicking here.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"action":"","authenticated":false,"scriptPath":"\/w","shim":"\/\/bits.wikimedia.org\/static-1.21wmf3\/extensions\/MobileFrontend\/stylesheets\/common\/images\/blank.gif","pageUrl":"\/wiki\/$1","beta":null,"title":"Object-oriented programming","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			function _mwLogEvent( data, additionalInformation ) {
				var timestamp = + new Date;
				var ev = { event_id: 'mobile', delta: timestamp - _mwStart, data: data, beta: mwMobileFrontendConfig.settings.beta,
					session: _mwStart, page: mwMobileFrontendConfig.settings.title, info: additionalInformation || '' };
				_evq.push( ev );
				console.log( typeof JSON === 'undefined' ? ev : JSON.stringify( ev ) );
			}
		</script>
				<link rel="canonical" href="http://en.wikipedia.org/wiki/Object-oriented_programming" >
	</head>
	<body class="mobile live">
				<div id="mw-mf-viewport">
		<div id="mw-mf-page-left">
		<div id='mw-mf-content-left'>
		<ul id="mw-mf-menu-main">
			<li class='icon'><a href="Main_Page"
				title="Home">
				Home</a></li>
			<li class='icon2'><a href="Special:Random#mw-mf-page-left" id="randomButton"
				title="Random"
				class="button">Random</a></li>
						<li class='icon5'>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions&amp;returnto=Object-oriented+programming"
					title="Settings">
				Settings				</a>
			</li>
					</ul>
		</div>
		</div>
		<div id='mw-mf-page-center'>
									<div id="mw-mf-header">
		<a title="Open main menu" href="Special:MobileMenu#mw-mf-page-left" id="mw-mf-main-menu-button">				<img alt="menu"
				src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif">
		</a>			<form id="mw-mf-searchForm" action="http://en.m.wikipedia.org/w/index.php" class="search_bar" method="get">
			<input type="hidden" value="Special:Search" name="title" />
			<div id="mw-mf-sq" class="divclearable">
				<input type="search" name="search" id="mw-mf-search" size="22" value="" autocomplete="off" maxlength="1024" class="search"
					placeholder="Search Wikipedia"
					/>
				<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear"/>
				<input class='searchSubmit' type="submit" value="Go">
			</div>
		</form>
	</div>
	<div id="results"></div>
		<div class='show ' id='content_wrapper'>
						<h1 id="firstHeading">Object-oriented programming</h1>			
<div class="dablink">"Object-oriented programming language" redirects here. For a list of object-oriented programming languages, see <a href="http://en.m.wikipedia.org/wiki/List_of_object-oriented_programming_languages" title="List of object-oriented programming languages">List of object-oriented programming languages</a>.</div>
<table class="vertical-navbox nowraplinks" cellspacing="5" style="float: right; clear: right; background-color: #f9f9f9; border: 1px solid #aaa; width:22em; margin: 0 0 1em 1em; padding: 0.2em; border-spacing: 0.4em 0; text-align: center; line-height: 1.4em; font-size: 88%;" cellpadding="0">
<tr>
<th class="" style="padding: 0.2em 0.4em 0.2em; font-size: 145%; line-height: 1.2em;"><a href="Programming_paradigm" title="Programming paradigm">Programming paradigms</a></th>
</tr>
<tr>
<td class="" style="padding-top: 0.2em; padding-bottom: 0.2em; text-align: left;">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Action_language" title="Action language">Action</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Agent-oriented_programming" title="Agent-oriented programming">Agent-oriented</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Aspect-oriented_programming" title="Aspect-oriented programming">Aspect-oriented</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Automata-based_programming" title="Automata-based programming">Automata-based</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Component-based_software_engineering" title="Component-based software engineering">Component-based</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Flow-based_programming" title="Flow-based programming">Flow-based</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Pipeline_programming" title="Pipeline programming">Pipelined</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Concatenative_programming_language" title="Concatenative programming language">Concatenative</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Concurrent_computing" title="Concurrent computing">Concurrent computing</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Relativistic_programming" title="Relativistic programming">Relativistic programming</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Data-driven_programming" title="Data-driven programming">Data-driven</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Declarative_programming" title="Declarative programming">Declarative</a> (contrast: <a href="Imperative_programming" title="Imperative programming">Imperative</a>)
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Constraint_programming" title="Constraint programming">Constraint</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Dataflow_programming" title="Dataflow programming">Dataflow</a>
<ul>
<li>Cell-oriented (<a href="http://en.m.wikipedia.org/wiki/Spreadsheet" title="Spreadsheet">spreadsheets</a>)</li>
<li><a href="http://en.m.wikipedia.org/wiki/Reactive_programming" title="Reactive programming">Reactive</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Category:Intensional_programming_languages" title="Category:Intensional programming languages">Intensional</a></li>
</ul>
</li>
<li><a href="Functional_programming" title="Functional programming">Functional</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Logic_programming" title="Logic programming">Logic</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Abductive_logic_programming" title="Abductive logic programming">Abductive logic</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Answer_set_programming" title="Answer set programming">Answer set</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Constraint_logic_programming" title="Constraint logic programming">Constraint logic</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Functional_logic_programming" title="Functional logic programming">Functional logic</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Inductive_logic_programming" title="Inductive logic programming">Inductive logic</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/End-user_development" title="End-user development">End-user programming</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Event-driven_programming" title="Event-driven programming">Event-driven</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Service-oriented_architecture" title="Service-oriented architecture">Service-oriented</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Time-driven_programming" title="Time-driven programming">Time-driven</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Expression-oriented_programming_language" title="Expression-oriented programming language">Expression-oriented</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Feature_Oriented_Programming" title="Feature Oriented Programming" class="mw-redirect">Feature-oriented</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Function-level_programming" title="Function-level programming">Function-level</a> (contrast: <a href="http://en.m.wikipedia.org/wiki/Value-level_programming" title="Value-level programming">Value-level</a>)</li>
<li><a href="Generic_programming" title="Generic programming">Generic</a></li>
<li>
<a href="Imperative_programming" title="Imperative programming">Imperative</a> (contrast: <a href="http://en.m.wikipedia.org/wiki/Declarative_programming" title="Declarative programming">Declarative</a>)
<ul>
<li><a href="Procedural_programming" title="Procedural programming">Procedural</a></li>
</ul>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Language-oriented_programming" title="Language-oriented programming">Language-oriented</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Service-oriented_modeling#Discipline-specific_modeling" title="Service-oriented modeling">Discipline-specific</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Domain-specific_language" title="Domain-specific language">Domain-specific</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Grammar-oriented_programming" title="Grammar-oriented programming">Grammar-oriented</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Dialecting" title="Dialecting">Dialecting</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Intentional_programming" title="Intentional programming">Intentional</a></li>
</ul>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Metaprogramming" title="Metaprogramming">Metaprogramming</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Automatic_programming" title="Automatic programming">Automatic</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Reflection_(computer_programming)" title="Reflection (computer programming)">Reflective</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Attribute-oriented_programming" title="Attribute-oriented programming">Attribute-oriented</a></li>
</ul>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Template_metaprogramming" title="Template metaprogramming">Template</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Policy-based_design" title="Policy-based design">Policy-based</a></li>
</ul>
</li>
</ul>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Non-structured_programming" title="Non-structured programming">Non-structured</a> (contrast: <a href="Structured_programming" title="Structured programming">Structured</a>)
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Array_programming" title="Array programming">Array</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Nondeterministic_programming" title="Nondeterministic programming">Nondeterministic</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Parallel_computing" title="Parallel computing">Parallel computing</a>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Process-oriented_programming" title="Process-oriented programming">Process-oriented</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Programming_in_the_large_and_programming_in_the_small" title="Programming in the large and programming in the small">Programming in the large and small</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Semantic-oriented_programming" title="Semantic-oriented programming">Semantic</a></li>
<li>
<a href="Structured_programming" title="Structured programming">Structured</a> (contrast: <a href="http://en.m.wikipedia.org/wiki/Non-structured_programming" title="Non-structured programming">Non-structured</a>)
<ul>
<li>
<a href="Modular_programming" title="Modular programming">Modular</a> (contrast: Monolithic)</li>
<li>
<strong class="selflink">Object-oriented</strong>
<ul>
<li>By <a href="http://en.m.wikipedia.org/wiki/Separation_of_concerns" title="Separation of concerns">separation of concerns</a>:
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Aspect-oriented_programming" title="Aspect-oriented programming">Aspect-oriented</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Role-oriented_programming" title="Role-oriented programming">Role-oriented</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Subject-oriented_programming" title="Subject-oriented programming">Subject-oriented</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Class-based_programming" title="Class-based programming">Class-based</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Prototype-based_programming" title="Prototype-based programming">Prototype-based</a></li>
</ul>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Recursion_(computer_science)" title="Recursion (computer science)">Recursive</a></li>
</ul>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Value-level_programming" title="Value-level programming">Value-level</a> (contrast: <a href="http://en.m.wikipedia.org/wiki/Function-level_programming" title="Function-level programming">Function-level</a>)</li>
</ul>
</td>
</tr>
<tr>
<td style="text-align: right; font-size: 115%;">
<div class="noprint plainlinks hlist navbar mini" style="">
<ul>
<li class="nv-view"><a href="http://en.m.wikipedia.org/wiki/Template:Programming_paradigms" title="Template:Programming paradigms"><span title="View this template" style="">v</span></a></li>
<li class="nv-talk"><a href="http://en.m.wikipedia.org/wiki/Template_talk:Programming_paradigms" title="Template talk:Programming paradigms"><span title="Discuss this template" style="">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Programming_paradigms&amp;action=edit"><span title="Edit this template" style="">e</span></a></li>
</ul>
</div>
</td>
</tr>
</table>
<p><b>Object-oriented programming</b> (<b>OOP</b>) is a <a href="Programming_paradigm" title="Programming paradigm">programming paradigm</a> using "<a href="http://en.m.wikipedia.org/wiki/Object_(computer_science)" title="Object (computer science)">objects</a>" – usually <a href="http://en.m.wikipedia.org/wiki/Instance_(computer_science)" title="Instance (computer science)">instances</a> of a <a href="http://en.m.wikipedia.org/wiki/Class_(computer_science)" title="Class (computer science)" class="mw-redirect">class</a> – consisting of <a href="http://en.m.wikipedia.org/wiki/Field_(computer_science)" title="Field (computer science)">data fields</a> and <a href="http://en.m.wikipedia.org/wiki/Method_(computer_science)" title="Method (computer science)" class="mw-redirect">methods</a> together with their interactions – to design applications and computer programs. Programming techniques may include features such as <a href="http://en.m.wikipedia.org/wiki/Data_abstraction" title="Data abstraction" class="mw-redirect">data abstraction</a>, <a href="http://en.m.wikipedia.org/wiki/Encapsulation_(object-oriented_programming)" title="Encapsulation (object-oriented programming)">encapsulation</a>, <a href="http://en.m.wikipedia.org/wiki/Message_passing" title="Message passing">messaging</a>, <a href="http://en.m.wikipedia.org/wiki/Module_(programming)" title="Module (programming)" class="mw-redirect">modularity</a>, <a href="http://en.m.wikipedia.org/wiki/Polymorphism_in_object-oriented_programming" title="Polymorphism in object-oriented programming">polymorphism</a>, and <a href="http://en.m.wikipedia.org/wiki/Inheritance_(computer_science)" title="Inheritance (computer science)" class="mw-redirect">inheritance</a>. Many modern <a href="Programming_language" title="Programming language">programming languages</a> now support forms of OOP, at least as an option.</p>
<h2> <span class="mw-headline" id="Overview">Overview</span>
</h2>
<table class="metadata plainlinks ambox mbox-small-left ambox-content ambox-Refimprove" style=""><tr>
<td class="mbox-image"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x"></td>
<td class="mbox-text" style=""><span class="mbox-text-span">This section <b>needs additional <a href="Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">citations</a> for <a href="Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a></b>. <small><i>(June 2012)</i></small></span></td>
</tr></table>
<p>An object-oriented program may be viewed as a collection of interacting <i>objects</i>, as opposed to the conventional model, in which a program is seen as a list of tasks (<a href="Subroutine" title="Subroutine">subroutines</a>) to perform. In OOP, each object is capable of receiving messages, processing data, and sending messages to other objects. Each object can be viewed as an independent "machine" with a distinct role or responsibility. The actions (or "<a href="http://en.m.wikipedia.org/wiki/Method_(computer_science)" title="Method (computer science)" class="mw-redirect">methods</a>") on these objects are closely associated with the object. For example, OOP <a href="http://en.m.wikipedia.org/wiki/Data_structures" title="Data structures" class="mw-redirect">data structures</a> tend to "carry their own operators around with them" (or at least "<a href="http://en.m.wikipedia.org/wiki/Inheritance_(object-oriented_programming)" title="Inheritance (object-oriented programming)">inherit</a>" them from a similar object or class) - except when they have to be serialized.</p>
<p>Simple, non-OOP programs may be one "long" list of statements (or commands). More complex programs will often group smaller sections of these statements into <a href="http://en.m.wikipedia.org/wiki/Function_(programming)" title="Function (programming)" class="mw-redirect">functions</a> or <a href="Subroutine" title="Subroutine">subroutines</a> each of which might perform a particular task. With designs of this sort, it is common for some of the program's data to be 'global', i.e. accessible from any part of the program. As programs grow in size, allowing any function to modify any piece of data means that bugs can have wide-reaching effects.</p>
<p>In contrast, the object-oriented approach encourages the programmer to place data where it is not directly accessible by the rest of the program. Instead, the data is accessed by calling specially written functions, commonly called <a href="http://en.m.wikipedia.org/wiki/Method_(computer_science)" title="Method (computer science)" class="mw-redirect">methods</a>, which are either bundled in with the data or inherited from "class objects." These act as the intermediaries for retrieving or modifying the data they control. The programming construct that combines data with a set of methods for accessing and managing those data is called an object. The practice of using subroutines to examine or modify certain kinds of data was also used in non-OOP <a href="Modular_programming" title="Modular programming">modular programming</a>, well before the widespread use of object-oriented programming.</p>
<p>An object-oriented program will usually contain different types of objects, each type corresponding to a particular kind of complex data to be managed or perhaps to a real-world object or concept such as a bank account, a hockey player, or a bulldozer. A program might well contain multiple copies of each type of object, one for each of the real-world objects the program is dealing with. For instance, there could be one bank account object for each real-world account at a particular bank. Each copy of the bank account object would be alike in the methods it offers for manipulating or reading its data, but the data inside each object would differ reflecting the different history of each account.</p>
<p>Objects can be thought of as wrapping their data within a set of functions designed to ensure that the data are used appropriately, and to assist in that use. The object's methods will typically include checks and safeguards that are specific to the types of data the object contains. An object can also offer simple-to-use, standardized methods for performing particular operations on its data, while concealing the specifics of how those tasks are accomplished. In this way alterations can be made to the internal structure or methods of an object without requiring that the rest of the program be modified. This approach can also be used to offer standardized methods across different types of objects. As an example, several different types of objects might offer print methods. Each type of object might implement that print method in a different way, reflecting the different kinds of data each contains, but all the different print methods might be called in the same standardized manner from elsewhere in the program. These features become especially useful when more than one programmer is contributing code to a project or when the goal is to reuse code between projects.</p>
<p>Object-oriented programming has roots that can be traced to the 1960s. As hardware and software became increasingly complex, manageability often became a concern. Researchers studied ways to maintain software quality and developed object-oriented programming in part to address common problems by strongly emphasizing discrete, reusable units of programming logic<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.m.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources from February 2010">citation needed</span></a></i>]</sup>. The technology focuses on data rather than processes, with programs composed of self-sufficient modules ("classes"), each instance of which ("objects") contains all the information needed to manipulate its own data structure ("members"). This is in contrast to the existing <a href="Modular_programming" title="Modular programming">modular programming</a> that had been dominant for many years that focused on the <i>function</i> of a module, rather than specifically the data, but equally provided for <a href="http://en.m.wikipedia.org/wiki/Code_reuse" title="Code reuse">code reuse</a>, and self-sufficient reusable units of programming logic, enabling <a href="http://en.m.wikipedia.org/wiki/Collaboration" title="Collaboration">collaboration</a> through the use of linked modules (<a href="Subroutine" title="Subroutine">subroutines</a>).</p>
<h2> <span class="mw-headline" id="History">History</span>
</h2>
<p>The terms "objects" and "oriented" in something like the modern sense of object-oriented programming seem to make their first appearance at <a href="http://en.m.wikipedia.org/wiki/MIT" title="MIT" class="mw-redirect">MIT</a> in the late 1950s and early 1960s. In the environment of the <a href="http://en.m.wikipedia.org/wiki/Artificial_intelligence" title="Artificial intelligence">artificial intelligence</a> group, as early as 1960, "object" could refer to identified items (<a href="http://en.m.wikipedia.org/wiki/LISP" title="LISP" class="mw-redirect">LISP</a> atoms) with properties (attributes);<sup id="cite_ref-1" class="reference"><a href="Object-oriented_programming#cite_note-1"><span>[</span>1<span>]</span></a></sup><sup id="cite_ref-2" class="reference"><a href="Object-oriented_programming#cite_note-2"><span>[</span>2<span>]</span></a></sup><a href="http://en.m.wikipedia.org/wiki/Alan_Kay" title="Alan Kay">Alan Kay</a> was later to cite a detailed understanding of LISP internals as a strong influence on his thinking in 1966.<sup id="cite_ref-alanKayOnOO_3-0" class="reference"><a href="Object-oriented_programming#cite_note-alanKayOnOO-3"><span>[</span>3<span>]</span></a></sup> Another early MIT example was <a href="http://en.m.wikipedia.org/wiki/Sketchpad" title="Sketchpad">Sketchpad</a> created by <a href="http://en.m.wikipedia.org/wiki/Ivan_Sutherland" title="Ivan Sutherland">Ivan Sutherland</a> in 1960–61; in the glossary of the 1963 technical report based on his dissertation about Sketchpad, Sutherland defined notions of "object" and "instance" (with the class concept covered by "master" or "definition"), albeit specialized to graphical interaction.<sup id="cite_ref-4" class="reference"><a href="Object-oriented_programming#cite_note-4"><span>[</span>4<span>]</span></a></sup> Also, an MIT <a href="ALGOL" title="ALGOL">ALGOL</a> version, AED-0, linked data structures ("plexes", in that dialect) directly with procedures, prefiguring what were later termed "messages", "methods" and "member functions".<sup id="cite_ref-simuladev_5-0" class="reference"><a href="Object-oriented_programming#cite_note-simuladev-5"><span>[</span>5<span>]</span></a></sup><sup id="cite_ref-6" class="reference"><a href="Object-oriented_programming#cite_note-6"><span>[</span>6<span>]</span></a></sup></p>
<p>Objects as a formal concept in programming were introduced in the 1960s in <a href="http://en.m.wikipedia.org/wiki/Simula" title="Simula">Simula</a> 67, a major revision of Simula I, a programming language designed for <a href="http://en.m.wikipedia.org/wiki/Discrete_event_simulation" title="Discrete event simulation">discrete event simulation</a>, created by <a href="http://en.m.wikipedia.org/wiki/Ole-Johan_Dahl" title="Ole-Johan Dahl">Ole-Johan Dahl</a> and <a href="http://en.m.wikipedia.org/wiki/Kristen_Nygaard" title="Kristen Nygaard">Kristen Nygaard</a> of the <a href="http://en.m.wikipedia.org/wiki/Norwegian_Computing_Center" title="Norwegian Computing Center">Norwegian Computing Center</a> in <a href="http://en.m.wikipedia.org/wiki/Oslo" title="Oslo">Oslo</a>.<sup id="cite_ref-7" class="reference"><a href="Object-oriented_programming#cite_note-7"><span>[</span>7<span>]</span></a></sup> Simula 67 was influenced by <a href="http://en.m.wikipedia.org/wiki/SIMSCRIPT" title="SIMSCRIPT">SIMSCRIPT</a> and <a href="http://en.m.wikipedia.org/wiki/Tony_Hoare" title="Tony Hoare">C.A.R. "Tony" Hoare's</a> proposed "record classes".<sup id="cite_ref-simuladev_5-1" class="reference"><a href="Object-oriented_programming#cite_note-simuladev-5"><span>[</span>5<span>]</span></a></sup><sup id="cite_ref-8" class="reference"><a href="Object-oriented_programming#cite_note-8"><span>[</span>8<span>]</span></a></sup> Simula introduced the notion of classes and instances or objects (as well as subclasses, virtual methods, coroutines, and discrete event simulation) as part of an explicit programming paradigm. The language also used automatic <a href="Garbage_collection_(computer_science)" title="Garbage collection (computer science)">garbage collection</a> that had been invented earlier for the <a href="Functional_programming" title="Functional programming">functional programming</a> language <a href="http://en.m.wikipedia.org/wiki/Lisp_(programming_language)" title="Lisp (programming language)">Lisp</a>. Simula was used for physical modeling, such as models to study and improve the movement of ships and their content through cargo ports. The ideas of Simula 67 influenced many later languages, including Smalltalk, derivatives of LISP (<a href="http://en.m.wikipedia.org/wiki/CLOS" title="CLOS" class="mw-redirect">CLOS</a>), <a href="http://en.m.wikipedia.org/wiki/Object_Pascal" title="Object Pascal">Object Pascal</a>, and <a href="C++" title="C++">C++</a>.</p>
<p>The <a href="Smalltalk" title="Smalltalk">Smalltalk</a> language, which was developed at <a href="http://en.m.wikipedia.org/wiki/Xerox_PARC" title="Xerox PARC" class="mw-redirect">Xerox PARC</a> (by <a href="http://en.m.wikipedia.org/wiki/Alan_Kay" title="Alan Kay">Alan Kay</a> and others) in the 1970s, introduced the term <i>object-oriented programming</i> to represent the pervasive use of objects and messages as the basis for computation. Smalltalk creators were influenced by the ideas introduced in Simula 67, but Smalltalk was designed to be a fully dynamic system in which classes could be created and modified dynamically rather than statically as in Simula 67.<sup id="cite_ref-st_9-0" class="reference"><a href="Object-oriented_programming#cite_note-st-9"><span>[</span>9<span>]</span></a></sup> Smalltalk and with it OOP were introduced to a wider audience by the August 1981 issue of <i><a href="http://en.m.wikipedia.org/wiki/Byte_(magazine)" title="Byte (magazine)">Byte Magazine</a></i>.</p>
<p>In the 1970s, Kay's Smalltalk work had influenced the <a href="http://en.m.wikipedia.org/wiki/Lisp_(programming_language)#Language_innovations" title="Lisp (programming language)">Lisp community</a> to incorporate <a href="http://en.m.wikipedia.org/wiki/Lisp_(programming_language)#Object_systems" title="Lisp (programming language)">object-based techniques</a> that were introduced to developers via the <a href="http://en.m.wikipedia.org/wiki/Lisp_machine" title="Lisp machine">Lisp machine</a>. Experimentation with various extensions to Lisp (like <span class="new" title="LOOPS (programming language) (page does not exist)">LOOPS</span> and <a href="http://en.m.wikipedia.org/wiki/Flavors_(programming_language)" title="Flavors (programming language)">Flavors</a> introducing <a href="http://en.m.wikipedia.org/wiki/Multiple_inheritance" title="Multiple inheritance">multiple inheritance</a> and <a href="http://en.m.wikipedia.org/wiki/Mixins" title="Mixins" class="mw-redirect">mixins</a>), eventually led to the <a href="http://en.m.wikipedia.org/wiki/Common_Lisp_Object_System" title="Common Lisp Object System">Common Lisp Object System</a> (CLOS, a part of the first standardized object-oriented programming language, <a href="http://en.m.wikipedia.org/wiki/ANSI" title="ANSI" class="mw-redirect">ANSI</a> <a href="http://en.m.wikipedia.org/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a>), which integrates functional programming and object-oriented programming and allows extension via a <a href="http://en.m.wikipedia.org/wiki/Meta-object_protocol" title="Meta-object protocol" class="mw-redirect">Meta-object protocol</a>. In the 1980s, there were a few attempts to design processor architectures that included hardware support for objects in memory but these were not successful. Examples include the <a href="http://en.m.wikipedia.org/wiki/Intel_iAPX_432" title="Intel iAPX 432">Intel iAPX 432</a> and the <a href="http://en.m.wikipedia.org/wiki/Linn_Products" title="Linn Products">Linn Smart</a> <a href="http://en.m.wikipedia.org/wiki/Rekursiv" title="Rekursiv">Rekursiv</a>.</p>
<p>In 1985, <a href="http://en.m.wikipedia.org/wiki/Bertrand_Meyer" title="Bertrand Meyer">Bertrand Meyer</a> produced the first design of the <a href="http://en.m.wikipedia.org/wiki/Eiffel_(programming_language)" title="Eiffel (programming language)">Eiffel language</a>. Focused on software quality, Eiffel is among the purely object-oriented languages, but differs in the sense that the language itself is not only a programming language, but a notation supporting the entire software lifecycle. Meyer described the Eiffel software development method, based on a small number of key ideas from software engineering and computer science, in <a href="http://en.m.wikipedia.org/wiki/Object-Oriented_Software_Construction" title="Object-Oriented Software Construction">Object-Oriented Software Construction</a>. Essential to the quality focus of Eiffel is Meyer's reliability mechanism, <a href="http://en.m.wikipedia.org/wiki/Design_by_Contract" title="Design by Contract" class="mw-redirect">Design by Contract</a>, which is an integral part of both the method and language.</p>
<p>Object-oriented programming developed as the dominant programming methodology in the early and mid 1990s when programming languages supporting the techniques became widely available. These included Visual <a href="http://en.m.wikipedia.org/wiki/FoxPro" title="FoxPro">FoxPro</a> 3.0,<sup id="cite_ref-10" class="reference"><a href="Object-oriented_programming#cite_note-10"><span>[</span>10<span>]</span></a></sup><sup id="cite_ref-11" class="reference"><a href="Object-oriented_programming#cite_note-11"><span>[</span>11<span>]</span></a></sup><sup id="cite_ref-12" class="reference"><a href="Object-oriented_programming#cite_note-12"><span>[</span>12<span>]</span></a></sup><a href="C++" title="C++">C++</a><sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.m.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources from April 2007">citation needed</span></a></i>]</sup>, and <a href="http://en.m.wikipedia.org/wiki/Embarcadero_Delphi" title="Embarcadero Delphi">Delphi</a><sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.m.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources from February 2010">citation needed</span></a></i>]</sup>. Its dominance was further enhanced by the rising popularity of <a href="Graphical_user_interface" title="Graphical user interface">graphical user interfaces</a>, which rely heavily upon object-oriented programming techniques. An example of a closely related dynamic GUI library and OOP language can be found in the <a href="http://en.m.wikipedia.org/wiki/Cocoa_(software)" title="Cocoa (software)" class="mw-redirect">Cocoa</a> frameworks on <a href="http://en.m.wikipedia.org/wiki/Mac_OS_X" title="Mac OS X" class="mw-redirect">Mac OS X</a>, written in <a href="Objective-C" title="Objective-C">Objective-C</a>, an object-oriented, dynamic messaging extension to C based on Smalltalk. OOP toolkits also enhanced the popularity of <a href="http://en.m.wikipedia.org/wiki/Event-driven_programming" title="Event-driven programming">event-driven programming</a> (although this concept is not limited to OOP). Some<sup class="noprint Inline-Template" style="white-space:nowrap;">[<i><a href="http://en.m.wikipedia.org/wiki/Wikipedia:Avoid_weasel_words" title="Wikipedia:Avoid weasel words" class="mw-redirect"><span title="The material in the vicinity of this tag may use weasel words or too-vague attribution. from April 2010">who?</span></a></i>]</sup> feel that association with GUIs (real or perceived) was what propelled OOP into the programming mainstream.</p>
<p>At <a href="http://en.m.wikipedia.org/wiki/ETH_Z%C3%BCrich" title="ETH Zürich" class="mw-redirect">ETH Zürich</a>, <a href="http://en.m.wikipedia.org/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a> and his colleagues had also been investigating such topics as <a href="http://en.m.wikipedia.org/wiki/Data_abstraction" title="Data abstraction" class="mw-redirect">data abstraction</a> and <a href="http://en.m.wikipedia.org/wiki/Modularity_(programming)" title="Modularity (programming)" class="mw-redirect">modular programming</a> (although this had been in common use in the 1960s or earlier). <a href="http://en.m.wikipedia.org/wiki/Modula-2" title="Modula-2">Modula-2</a> (1978) included both, and their succeeding design, <a href="http://en.m.wikipedia.org/wiki/Oberon_(programming_language)" title="Oberon (programming language)">Oberon</a>, included a distinctive approach to object orientation, classes, and such. The approach is unlike<sup class="noprint Inline-Template" style="white-space:nowrap;">[<i><a href="http://en.m.wikipedia.org/wiki/Wikipedia:Please_clarify" title="Wikipedia:Please clarify"><span title="from November 2010">how?</span></a></i>]</sup> Smalltalk, and very unlike<sup class="noprint Inline-Template" style="white-space:nowrap;">[<i><a href="http://en.m.wikipedia.org/wiki/Wikipedia:Please_clarify" title="Wikipedia:Please clarify"><span title="from November 2010">how?</span></a></i>]</sup> C++.</p>
<p>Object-oriented features have been added to many existing languages during that time, including <a href="http://en.m.wikipedia.org/wiki/Ada_(programming_language)" title="Ada (programming language)">Ada</a>, <a href="http://en.m.wikipedia.org/wiki/BASIC" title="BASIC">BASIC</a>, <a href="Fortran" title="Fortran">Fortran</a>, <a href="Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a>, and others. Adding these features to languages that were not initially designed for them often led to problems with compatibility and maintainability of code.</p>
<p>More recently, a number of languages have emerged that are primarily object-oriented yet compatible with procedural methodology, such as <a href="Python_(programming_language)" title="Python (programming language)">Python</a> and <a href="http://en.m.wikipedia.org/wiki/Ruby_programming_language" title="Ruby programming language" class="mw-redirect">Ruby</a>. Probably the most commercially important recent object-oriented languages are <a href="http://en.m.wikipedia.org/wiki/Visual_Basic.NET" title="Visual Basic.NET" class="mw-redirect">Visual Basic.NET</a> (VB.NET) and <a href="C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, both designed for Microsoft's <a href="http://en.m.wikipedia.org/wiki/.NET_Framework" title=".NET Framework">.NET</a> platform, and <a href="Java_(programming_language)" title="Java (programming language)">Java</a>, developed by <a href="http://en.m.wikipedia.org/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a>. Both frameworks show the benefit of using OOP by creating an abstraction from implementation in their own way. VB.NET and C# support cross-language inheritance, allowing classes defined in one language to subclass classes defined in the other language. Developers usually compile Java to <a href="http://en.m.wikipedia.org/wiki/Bytecode" title="Bytecode">bytecode</a>, allowing Java to run on any operating system for which a Java <a href="http://en.m.wikipedia.org/wiki/Virtual_machine" title="Virtual machine">virtual machine</a> is available. VB.NET and C# make use of the <a href="http://en.m.wikipedia.org/wiki/Strategy_pattern" title="Strategy pattern">Strategy pattern</a> to accomplish cross-language inheritance, whereas Java makes use of the <a href="http://en.m.wikipedia.org/wiki/Adapter_pattern" title="Adapter pattern">Adapter pattern</a><sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.m.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="It is not obvious why nor where they use these patterns. from August 2010">citation needed</span></a></i>]</sup>.</p>
<p>Just as <a href="Procedural_programming" title="Procedural programming">procedural programming</a> led to refinements of techniques such as <a href="Structured_programming" title="Structured programming">structured programming</a>, modern object-oriented software design methods include refinements<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.m.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="january 2010 from January 2010">citation needed</span></a></i>]</sup> such as the use of <a href="http://en.m.wikipedia.org/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)" class="mw-redirect">design patterns</a>, <a href="http://en.m.wikipedia.org/wiki/Design_by_contract" title="Design by contract">design by contract</a>, and <a href="http://en.m.wikipedia.org/wiki/Modeling_language" title="Modeling language">modeling languages</a> (such as <a href="http://en.m.wikipedia.org/wiki/Unified_Modeling_Language" title="Unified Modeling Language">UML</a>).</p>
<h2> <span class="mw-headline" id="Fundamental_features_and_concepts">Fundamental features and concepts <span id="features"></span></span>
</h2>
<div class="rellink boilerplate seealso">See also: <a href="http://en.m.wikipedia.org/wiki/List_of_object-oriented_programming_terms" title="List of object-oriented programming terms">List of object-oriented programming terms</a>
</div>
<p>A survey by Deborah J. Armstrong of nearly 40 years of computing literature identified a number of fundamental concepts, found in the strong majority of definitions of OOP.<sup id="cite_ref-ArmstrongQuarks_13-0" class="reference"><a href="Object-oriented_programming#cite_note-ArmstrongQuarks-13"><span>[</span>13<span>]</span></a></sup></p>
<p>Not all of these concepts are to be found in all object-oriented programming languages. For example, object-oriented programming that uses classes is sometimes called <a href="http://en.m.wikipedia.org/wiki/Class-based_programming" title="Class-based programming">class-based programming</a>, while <a href="http://en.m.wikipedia.org/wiki/Prototype-based_programming" title="Prototype-based programming">prototype-based programming</a> does not typically use classes. As a result, a significantly different yet analogous terminology is used to define the concepts of <i>object</i> and <i>instance</i>.</p>
<p>Benjamin C. Pierce and some other researchers view as futile any attempt to distill OOP to a minimal set of features. He nonetheless identifies fundamental features that support the OOP programming style in most object-oriented languages:<sup id="cite_ref-14" class="reference"><a href="Object-oriented_programming#cite_note-14"><span>[</span>14<span>]</span></a></sup></p>
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Dynamic_dispatch" title="Dynamic dispatch">Dynamic dispatch</a> – when a method is invoked on an object, the object itself determines what code gets executed by looking up the method at run time in a table associated with the object. This feature distinguishes an object from an <a href="http://en.m.wikipedia.org/wiki/Abstract_data_type" title="Abstract data type">abstract data type</a> (or module), which has a fixed (static) implementation of the operations for all instances. It is a programming methodology that gives modular component development while at the same time being very efficient.</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Encapsulation_(object-oriented_programming)" title="Encapsulation (object-oriented programming)">Encapsulation</a> (or <a href="http://en.m.wikipedia.org/wiki/Multi-methods" title="Multi-methods" class="mw-redirect">multi-methods</a>, in which case the state is kept separate)</li>
<li><a href="http://en.m.wikipedia.org/wiki/Subtype_polymorphism" title="Subtype polymorphism" class="mw-redirect">Subtype polymorphism</a></li>
<li>Object <a href="http://en.m.wikipedia.org/wiki/Inheritance_(object-oriented_programming)" title="Inheritance (object-oriented programming)">inheritance</a> (or <a href="http://en.m.wikipedia.org/wiki/Delegation_(programming)#As_a_language_feature" title="Delegation (programming)">delegation</a>)</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Open_recursion" title="Open recursion" class="mw-redirect">Open recursion</a> – a special variable (syntactically it may be a keyword), usually called <code>this</code> or <code>self</code>, that allows a method body to invoke another method body of the same object. This variable is <i><a href="http://en.m.wikipedia.org/wiki/Name_binding" title="Name binding">late-bound</a></i>; it allows a method defined in one class to invoke another method that is defined later, in some subclass thereof.</li>
</ul>
<p>Similarly, in his 2003 book, <i>Concepts in programming languages</i>, John C. Mitchell identifies four main features: dynamic dispatch, <a href="http://en.m.wikipedia.org/wiki/Abstraction_(computer_science)" title="Abstraction (computer science)">abstraction</a>, subtype polymorphism, and inheritance.<sup id="cite_ref-15" class="reference"><a href="Object-oriented_programming#cite_note-15"><span>[</span>15<span>]</span></a></sup> Michael Lee Scott in <i>Programming Language Pragmatics</i> considers only encapsulation, inheritance and dynamic dispatch.<sup id="cite_ref-16" class="reference"><a href="Object-oriented_programming#cite_note-16"><span>[</span>16<span>]</span></a></sup></p>
<p>Additional concepts used in object-oriented programming include:</p>
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Class_(computer_science)" title="Class (computer science)" class="mw-redirect">Classes</a> of objects</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Instance_(computer_science)" title="Instance (computer science)">Instances</a> of classes</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Method_(computer_science)" title="Method (computer science)" class="mw-redirect">Methods</a> which act on the attached objects.</li>
<li><a href="http://en.m.wikipedia.org/wiki/Message_passing" title="Message passing">Message passing</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Abstraction_(computer_science)" title="Abstraction (computer science)">Abstraction</a></li>
</ul>
<h3> <span class="mw-headline" id="Decoupling">Decoupling</span>
</h3>
<p>Decoupling refers to careful controls that separate code modules from particular use cases, which increases code re-usability. A common use of decoupling in OOP is to polymorphically decouple the encapsulation (see <a href="http://en.m.wikipedia.org/wiki/Bridge_pattern" title="Bridge pattern">Bridge pattern</a> and <a href="http://en.m.wikipedia.org/wiki/Adapter_pattern" title="Adapter pattern">Adapter pattern</a>) - for example, using a method interface which an encapsulated object must satisfy, as opposed to using the object's class.</p>
<h2> <span class="mw-headline" id="Additional_features">Additional features</span>
</h2>
<dl>
<dt>Encapsulation Enforces Modularity</dt>
<dd>Encapsulation refers to the creation of self-contained modules that bind processing functions to the data. These user-defined data types are called "classes," and one instance of a class is an "object." For example, in a payroll system, a class could be Manager, and Pat and Jan could be two instances (two objects) of the Manager class. Encapsulation ensures good code modularity, which keeps routines separate and less prone to conflict with each other.</dd>
</dl>
<dl>
<dt>Inheritance Passes "Knowledge" Down</dt>
<dd>Classes are created in hierarchies, and inheritance allows the structure and methods in one class to be passed down the hierarchy. That means less programming is required when adding functions to complex systems. If a step is added at the bottom of a hierarchy, then only the processing and data associated with that unique step needs to be added. Everything else about that step is inherited. The ability to reuse existing objects is considered a major advantage of object technology.</dd>
</dl>
<dl>
<dt>Polymorphism Takes any Shape</dt>
<dd>Object-oriented programming allows procedures about objects to be created whose exact type is not known until runtime. For example, a screen cursor may change its shape from an arrow to a line depending on the program mode. The routine to move the cursor on screen in response to mouse movement would be written for "cursor," and polymorphism allows that cursor to take on whatever shape is required at runtime. It also allows new shapes to be easily integrated.</dd>
</dl>
<dl>
<dt>OOP Languages</dt>
<dd>Used for simulating system behavior in the late 1960s, SIMULA was the first object-oriented language. In the 1970s, Xerox's Smalltalk was the first object-oriented programming language and was used to create the graphical user interface (GUI). Today, C++ and Java are the major OOP languages, while C#, Visual Basic.NET, Python and JavaScript are also popular. ACTOR and Eiffel were earlier OOP languages. The following list compares some basic OOP terms with traditional programming.</dd>
</dl>
<h2> <span class="mw-headline" id="Formal_semantics">Formal semantics</span>
</h2>
<div class="rellink boilerplate seealso">See also: <a href="http://en.m.wikipedia.org/wiki/Formal_semantics_of_programming_languages" title="Formal semantics of programming languages" class="mw-redirect">Formal semantics of programming languages</a>
</div>
<p>There have been several attempts at formalizing the concepts used in object-oriented programming. The following concepts and constructs have been used as interpretations of OOP concepts:</p>
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/F-Coalgebra" title="F-Coalgebra" class="mw-redirect">coalgebraic data types</a> <sup id="cite_ref-poll97_17-0" class="reference"><a href="Object-oriented_programming#cite_note-poll97-17"><span>[</span>17<span>]</span></a></sup>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Abstract_data_type" title="Abstract data type">abstract data types</a> (which have <a href="http://en.m.wikipedia.org/wiki/Existential_types" title="Existential types" class="mw-redirect">existential types</a>) allow the definition of <a href="http://en.m.wikipedia.org/wiki/Module_(programming)" title="Module (programming)" class="mw-redirect">modules</a> but these do not support <a href="http://en.m.wikipedia.org/wiki/Dynamic_dispatch" title="Dynamic dispatch">dynamic dispatch</a>
</li>
<li><a href="http://en.m.wikipedia.org/wiki/Recursive_type" title="Recursive type" class="mw-redirect">recursive types</a></li>
<li>encapsulated state</li>
<li><a href="http://en.m.wikipedia.org/wiki/Inheritance_(object-oriented_programming)" title="Inheritance (object-oriented programming)">Inheritance</a></li>
<li>
<a href="Record_(computer_science)" title="Record (computer science)">records</a> are basis for understanding objects if <a href="http://en.m.wikipedia.org/wiki/Function_literal" title="Function literal" class="mw-redirect">function literals</a> can be stored in fields (like in functional programming languages), but the actual calculi need be considerably more complex to incorporate essential features of OOP. Several extensions of <a href="http://en.m.wikipedia.org/wiki/System_F-sub" title="System F-sub">System F<sub>&lt;:</sub></a> that deal with mutable objects have been studied;<sup id="cite_ref-AbadiCardelli_18-0" class="reference"><a href="Object-oriented_programming#cite_note-AbadiCardelli-18"><span>[</span>18<span>]</span></a></sup> these allow both <a href="http://en.m.wikipedia.org/wiki/Subtype_polymorphism" title="Subtype polymorphism" class="mw-redirect">subtype polymorphism</a> and <a href="http://en.m.wikipedia.org/wiki/Parametric_polymorphism" title="Parametric polymorphism">parametric polymorphism</a> (generics)</li>
</ul>
<p>Attempts to find a consensus definition or theory behind objects have not proven very successful (however, see Abadi &amp; Cardelli, <a rel="nofollow" class="external text" href="http://portal.acm.org/citation.cfm?id=547964&amp;dl=ACM&amp;coll=portal"><i>A Theory of Objects</i></a><sup id="cite_ref-AbadiCardelli_18-1" class="reference"><a href="Object-oriented_programming#cite_note-AbadiCardelli-18"><span>[</span>18<span>]</span></a></sup> for formal definitions of many OOP concepts and constructs), and often diverge widely. For example, some definitions focus on mental activities, and some on program structuring. One of the simpler definitions is that OOP is the act of using "map" data structures or arrays that can contain functions and pointers to other maps, all with some <a href="Syntactic_sugar" title="Syntactic sugar">syntactic and scoping sugar</a> on top. Inheritance can be performed by cloning the maps (sometimes called "prototyping"). OBJECT:=&gt;&gt; Objects are the run time entities in an object-oriented system. They may represent a person, a place, a bank account, a table of data or any item that the program has to handle.</p>
<h2> <span class="mw-headline" id="OOP_languages">OOP languages</span>
</h2>
<table class="metadata plainlinks ambox mbox-small-left ambox-content ambox-Unreferenced" style=""><tr>
<td class="mbox-image"><a href="File:Question_book-new.svg" class="image"><img alt="Question book-new.svg" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x"></a></td>
<td class="mbox-text" style=""><span class="mbox-text-span">This section <b>does not <a href="Wikipedia:Citing_sources" title="Wikipedia:Citing sources">cite</a> any <a href="Wikipedia:Verifiability" title="Wikipedia:Verifiability">references or sources</a></b>. <small><i>(August 2009)</i></small></span></td>
</tr></table>
<div class="rellink boilerplate seealso">See also: <a href="http://en.m.wikipedia.org/wiki/List_of_object-oriented_programming_languages" title="List of object-oriented programming languages">List of object-oriented programming languages</a>
</div>
<p><a href="http://en.m.wikipedia.org/wiki/Simula" title="Simula">Simula</a> (1967) is generally accepted as the first language to have the primary features of an object-oriented language. It was created for making <a href="http://en.m.wikipedia.org/wiki/Computer_simulation" title="Computer simulation">simulation programs</a>, in which what came to be called objects were the most important information representation. <a href="Smalltalk" title="Smalltalk">Smalltalk</a> (1972 to 1980) is arguably the canonical example, and the one with which much of the theory of object-oriented programming was developed. Concerning the degree of object orientation, the following distinctions can be made:</p>
<ul>
<li>Languages called "pure" OO languages, because everything in them is treated consistently as an object, from primitives such as characters and punctuation, all the way up to whole classes, prototypes, blocks, modules, etc. They were designed specifically to facilitate, even enforce, OO methods. Examples: <a href="http://en.m.wikipedia.org/wiki/Eiffel_(programming_language)" title="Eiffel (programming language)">Eiffel</a>, <a href="http://en.m.wikipedia.org/wiki/Emerald_(programming_language)" title="Emerald (programming language)">Emerald</a>.<sup id="cite_ref-19" class="reference"><a href="Object-oriented_programming#cite_note-19"><span>[</span>19<span>]</span></a></sup>, <a href="http://en.m.wikipedia.org/wiki/JADE_(programming_language)" title="JADE (programming language)">JADE</a>, <a href="http://en.m.wikipedia.org/wiki/Obix_programming_language" title="Obix programming language">Obix</a>, <a href="http://en.m.wikipedia.org/wiki/Scala_(programming_language)" title="Scala (programming language)">Scala</a>, <a href="Smalltalk" title="Smalltalk">Smalltalk</a>
</li>
<li>Languages designed mainly for OO programming, but with some procedural elements. Examples: <a href="C++" title="C++">C++</a>, <a href="Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, <a href="http://en.m.wikipedia.org/wiki/VB.NET" title="VB.NET" class="mw-redirect">VB.NET</a>, <a href="Python_(programming_language)" title="Python (programming language)">Python</a>.</li>
<li>Languages that are historically <a href="Procedural_programming" title="Procedural programming">procedural languages</a>, but have been extended with some OO features. Examples: <a href="http://en.m.wikipedia.org/wiki/Visual_Basic" title="Visual Basic">Visual Basic</a> (derived from BASIC), <a href="Fortran" title="Fortran">Fortran</a>, <a href="Perl" title="Perl">Perl</a>, <a href="http://en.m.wikipedia.org/wiki/COBOL" title="COBOL">COBOL</a> 2002, <a href="PHP" title="PHP">PHP</a>, <a href="http://en.m.wikipedia.org/wiki/ABAP" title="ABAP">ABAP</a>.</li>
<li>Languages with most of the features of objects (classes, methods, inheritance, reusability), but in a distinctly original form. Examples: <a href="http://en.m.wikipedia.org/wiki/Oberon_(programming_language)" title="Oberon (programming language)">Oberon</a> (Oberon-1 or Oberon-2) and <a href="http://en.m.wikipedia.org/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a>.</li>
<li>Languages with <a href="http://en.m.wikipedia.org/wiki/Abstract_data_type" title="Abstract data type">abstract data type</a> support, but not all features of object-orientation, sometimes called <a href="http://en.m.wikipedia.org/wiki/Object-based" title="Object-based">object-<i>based</i></a> languages. Examples: <a href="http://en.m.wikipedia.org/wiki/Modula-2" title="Modula-2">Modula-2</a>, <span class="new" title="Pliant (page does not exist)">Pliant</span>, <a href="http://en.m.wikipedia.org/wiki/CLU_(programming_language)" title="CLU (programming language)">CLU</a>.</li>
</ul>
<h3> <span class="mw-headline" id="OOP_in_dynamic_languages">OOP in dynamic languages</span>
</h3>
<p>In recent years, object-oriented programming has become especially popular in <a href="http://en.m.wikipedia.org/wiki/Dynamic_programming_language" title="Dynamic programming language">dynamic programming languages</a>. <a href="Python_(programming_language)" title="Python (programming language)">Python</a>, <a href="http://en.m.wikipedia.org/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a> and <a href="http://en.m.wikipedia.org/wiki/Groovy_(programming_language)" title="Groovy (programming language)">Groovy</a> are dynamic languages built on OOP principles, while <a href="Perl" title="Perl">Perl</a> and <a href="PHP" title="PHP">PHP</a> have been adding object oriented features since Perl 5 and PHP 4, and <a href="http://en.m.wikipedia.org/wiki/ColdFusion" title="ColdFusion" class="mw-redirect">ColdFusion</a> since version 5.</p>
<p>The <a href="http://en.m.wikipedia.org/wiki/Document_Object_Model" title="Document Object Model">Document Object Model</a> of <a href="http://en.m.wikipedia.org/wiki/HTML" title="HTML">HTML</a>, <a href="http://en.m.wikipedia.org/wiki/XHTML" title="XHTML">XHTML</a>, and <a href="http://en.m.wikipedia.org/wiki/XML" title="XML">XML</a> documents on the Internet have bindings to the popular <a href="JavaScript" title="JavaScript">JavaScript</a>/<a href="http://en.m.wikipedia.org/wiki/ECMAScript" title="ECMAScript">ECMAScript</a> language. JavaScript is perhaps the best known <a href="http://en.m.wikipedia.org/wiki/Prototype-based_programming" title="Prototype-based programming">prototype-based programming</a> language, which employs cloning from prototypes rather than inheriting from a class. Another scripting language that takes this approach is <a href="http://en.m.wikipedia.org/wiki/Lua_(programming_language)" title="Lua (programming language)">Lua</a>. Earlier versions of <a href="http://en.m.wikipedia.org/wiki/ActionScript" title="ActionScript">ActionScript</a> (a partial superset of the ECMA-262 R3, otherwise known as ECMAScript) also used a prototype-based object model. Later versions of ActionScript incorporate a combination of classification and prototype-based object models based largely on the currently incomplete ECMA-262 R4 specification, which has its roots in an early JavaScript 2 Proposal. Microsoft's JScript.NET also includes a mash-up of object models based on the same proposal, and is also a superset of the ECMA-262 R3 specification.</p>
<h2> <span class="mw-headline" id="Design_patterns">Design patterns</span>
</h2>
<p>Challenges of object-oriented design are addressed by several methodologies. Most common is known as the <a href="http://en.m.wikipedia.org/wiki/Design_Patterns_(book)" title="Design Patterns (book)" class="mw-redirect">design patterns codified by Gamma <i>et al.</i></a>. More broadly, the term "<a href="http://en.m.wikipedia.org/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)" class="mw-redirect">design patterns</a>" can be used to refer to any general, repeatable solution to a commonly occurring problem in software design. Some of these commonly occurring problems have implications and solutions particular to object-oriented development.</p>
<h3> <span class="mw-headline" id="Inheritance_and_behavioral_subtyping">Inheritance and behavioral subtyping</span>
</h3>
<div class="rellink boilerplate seealso">See also: <a href="http://en.m.wikipedia.org/wiki/Object_oriented_design" title="Object oriented design" class="mw-redirect">Object oriented design</a>
</div>
<p>It is intuitive to assume that inheritance creates a <a href="http://en.m.wikipedia.org/wiki/Program_semantics" title="Program semantics" class="mw-redirect">semantic</a> "<a href="http://en.m.wikipedia.org/wiki/Is_a" title="Is a" class="mw-redirect">is a</a>" relationship, and thus to infer that objects instantiated from subclasses can always be <i>safely</i> used instead of those instantiated from the superclass. This intuition is unfortunately false in most OOP languages, in particular in all those that allow <a href="http://en.m.wikipedia.org/wiki/Mutable" title="Mutable" class="mw-redirect">mutable</a> objects. <a href="http://en.m.wikipedia.org/wiki/Subtype_polymorphism" title="Subtype polymorphism" class="mw-redirect">Subtype polymorphism</a> as enforced by the <a href="http://en.m.wikipedia.org/wiki/Type_checker" title="Type checker" class="mw-redirect">type checker</a> in OOP languages (with mutable objects) cannot guarantee <a href="http://en.m.wikipedia.org/wiki/Behavioral_subtyping" title="Behavioral subtyping" class="mw-redirect">behavioral subtyping</a> in any context. Behavioral subtyping is undecidable in general, so it cannot be implemented by a program (compiler). Class or object hierarchies need to be carefully designed considering possible incorrect uses that cannot be detected syntactically. This issue is known as the <a href="http://en.m.wikipedia.org/wiki/Liskov_substitution_principle" title="Liskov substitution principle">Liskov substitution principle</a>.</p>
<h3> <span class="mw-headline" id="Gang_of_Four_design_patterns">Gang of Four design patterns</span>
</h3>
<div class="rellink relarticle mainarticle">Main article: <a href="http://en.m.wikipedia.org/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)" class="mw-redirect">Design pattern (computer science)</a>
</div>
<p><i><a href="http://en.m.wikipedia.org/wiki/Design_Patterns_(book)" title="Design Patterns (book)" class="mw-redirect">Design Patterns: Elements of Reusable Object-Oriented Software</a></i> is an influential book published in 1995 by <a href="http://en.m.wikipedia.org/wiki/Erich_Gamma" title="Erich Gamma">Erich Gamma</a>, <span class="new" title="Richard Helm (page does not exist)">Richard Helm</span>, <a href="http://en.m.wikipedia.org/wiki/Ralph_Johnson_(computer_scientist)" title="Ralph Johnson (computer scientist)">Ralph Johnson</a>, and <a href="http://en.m.wikipedia.org/wiki/John_Vlissides" title="John Vlissides">John Vlissides</a>, often referred to humorously as the "Gang of Four". Along with exploring the capabilities and pitfalls of object-oriented programming, it describes 23 common programming problems and patterns for solving them. As of April 2007, the book was in its 36th printing.</p>
<p>The book describes the following patterns:</p>
<ul>
<li>
<i><a href="http://en.m.wikipedia.org/wiki/Creational_pattern" title="Creational pattern">Creational patterns</a></i> (5): <a href="http://en.m.wikipedia.org/wiki/Factory_method_pattern" title="Factory method pattern">Factory method pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Abstract_factory_pattern" title="Abstract factory pattern">Abstract factory pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Singleton_pattern" title="Singleton pattern">Singleton pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Builder_pattern" title="Builder pattern">Builder pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Prototype_pattern" title="Prototype pattern">Prototype pattern</a>
</li>
<li>
<i><a href="http://en.m.wikipedia.org/wiki/Structural_pattern" title="Structural pattern">Structural patterns</a></i> (7): <a href="http://en.m.wikipedia.org/wiki/Adapter_pattern" title="Adapter pattern">Adapter pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Bridge_pattern" title="Bridge pattern">Bridge pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Composite_pattern" title="Composite pattern">Composite pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Decorator_pattern" title="Decorator pattern">Decorator pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Facade_pattern" title="Facade pattern">Facade pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Flyweight_pattern" title="Flyweight pattern">Flyweight pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Proxy_pattern" title="Proxy pattern">Proxy pattern</a>
</li>
<li>
<i><a href="http://en.m.wikipedia.org/wiki/Behavioral_pattern" title="Behavioral pattern">Behavioral patterns</a></i> (11): <a href="http://en.m.wikipedia.org/wiki/Chain-of-responsibility_pattern" title="Chain-of-responsibility pattern">Chain-of-responsibility pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Command_pattern" title="Command pattern">Command pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Interpreter_pattern" title="Interpreter pattern">Interpreter pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Iterator_pattern" title="Iterator pattern">Iterator pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Mediator_pattern" title="Mediator pattern">Mediator pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Memento_pattern" title="Memento pattern">Memento pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Observer_pattern" title="Observer pattern">Observer pattern</a>, <a href="http://en.m.wikipedia.org/wiki/State_pattern" title="State pattern">State pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Strategy_pattern" title="Strategy pattern">Strategy pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Template_method_pattern" title="Template method pattern">Template method pattern</a>, <a href="http://en.m.wikipedia.org/wiki/Visitor_pattern" title="Visitor pattern">Visitor pattern</a>...</li>
</ul>
<h3> <span class="mw-headline" id="Object-orientation_and_databases">Object-orientation and databases</span>
</h3>
<div class="rellink relarticle mainarticle">Main articles: <a href="http://en.m.wikipedia.org/wiki/Object-Relational_impedance_mismatch" title="Object-Relational impedance mismatch" class="mw-redirect">Object-Relational impedance mismatch</a>, <a href="http://en.m.wikipedia.org/wiki/Object-relational_mapping" title="Object-relational mapping">Object-relational mapping</a>, and <a href="http://en.m.wikipedia.org/wiki/Object_database" title="Object database">Object database</a>
</div>
<p>Both object-oriented programming and <a href="http://en.m.wikipedia.org/wiki/Relational_database_management_systems" title="Relational database management systems" class="mw-redirect">relational database management systems</a> (RDBMSs) are extremely common in software today<sup class="plainlinks noprint asof-tag update" style="display:none;"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit">[update]</a></sup>. Since <a href="http://en.m.wikipedia.org/wiki/Relational_database" title="Relational database">relational databases</a> don't store objects directly (though some RDBMSs have object-oriented features to approximate this), there is a general need to bridge the two worlds. The problem of bridging object-oriented programming accesses and data patterns with relational databases is known as <a href="http://en.m.wikipedia.org/wiki/Object-Relational_impedance_mismatch" title="Object-Relational impedance mismatch" class="mw-redirect">Object-Relational impedance mismatch</a>. There are a number of approaches to cope with this problem, but no general solution without downsides.<sup id="cite_ref-RDMDBobjectmis_20-0" class="reference"><a href="Object-oriented_programming#cite_note-RDMDBobjectmis-20"><span>[</span>20<span>]</span></a></sup> One of the most common approaches is <a href="http://en.m.wikipedia.org/wiki/Object-relational_mapping" title="Object-relational mapping">object-relational mapping</a>, as found in libraries like <a href="http://en.m.wikipedia.org/wiki/Java_Data_Objects" title="Java Data Objects">Java Data Objects</a> and <a href="http://en.m.wikipedia.org/wiki/Ruby_on_Rails" title="Ruby on Rails">Ruby on Rails</a>' ActiveRecord.</p>
<p>There are also <a href="http://en.m.wikipedia.org/wiki/Object_database" title="Object database">object databases</a> that can be used to replace RDBMSs, but these have not been as technically and commercially successful as RDBMSs.</p>
<h3> <span class="mw-headline" id="Real-world_modeling_and_relationships">Real-world modeling and relationships</span>
</h3>
<p>OOP can be used to associate real-world objects and processes with digital counterparts. However, not everyone agrees that OOP facilitates direct real-world mapping (see <a href="Object-oriented_programming#Criticism" title="Object-oriented programming">Negative Criticism</a> section) or that real-world mapping is even a worthy goal; <a href="http://en.m.wikipedia.org/wiki/Bertrand_Meyer" title="Bertrand Meyer">Bertrand Meyer</a> argues in <i><a href="http://en.m.wikipedia.org/wiki/Object-Oriented_Software_Construction" title="Object-Oriented Software Construction">Object-Oriented Software Construction</a></i><sup id="cite_ref-Meyer230_21-0" class="reference"><a href="Object-oriented_programming#cite_note-Meyer230-21"><span>[</span>21<span>]</span></a></sup> that a program is not a model of the world but a model of some part of the world; "Reality is a cousin twice removed". At the same time, some principal limitations of OOP had been noted.<sup id="cite_ref-22" class="reference"><a href="Object-oriented_programming#cite_note-22"><span>[</span>22<span>]</span></a></sup> For example, the <a href="http://en.m.wikipedia.org/wiki/Circle-ellipse_problem" title="Circle-ellipse problem">Circle-ellipse problem</a> is difficult to handle using OOP's concept of <a href="http://en.m.wikipedia.org/wiki/Inheritance_(object-oriented_programming)" title="Inheritance (object-oriented programming)">inheritance</a>.</p>
<p>However, <a href="http://en.m.wikipedia.org/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a> (who popularized the adage now known as <a href="http://en.m.wikipedia.org/wiki/Wirth%27s_law" title="Wirth's law">Wirth's law</a>: "Software is getting slower more rapidly than hardware becomes faster") said of OOP in his paper, "Good Ideas through the Looking Glass", "This paradigm closely reflects the structure of systems 'in the real world', and it is therefore well suited to model complex systems with complex behaviours" (contrast <a href="http://en.m.wikipedia.org/wiki/KISS_principle" title="KISS principle">KISS principle</a>).</p>
<p><a href="http://en.m.wikipedia.org/wiki/Steve_Yegge" title="Steve Yegge">Steve Yegge</a> and others noted that natural languages lack the OOP approach of strictly prioritizing <i>things</i> (objects/<a href="http://en.m.wikipedia.org/wiki/Noun" title="Noun">nouns</a>) before <i>actions</i> (methods/<a href="http://en.m.wikipedia.org/wiki/Verb" title="Verb">verbs</a>).<sup id="cite_ref-executioniKoN_23-0" class="reference"><a href="Object-oriented_programming#cite_note-executioniKoN-23"><span>[</span>23<span>]</span></a></sup> This problem may cause OOP to suffer more convoluted solutions than procedural programming.<sup id="cite_ref-executioniKoN2_24-0" class="reference"><a href="Object-oriented_programming#cite_note-executioniKoN2-24"><span>[</span>24<span>]</span></a></sup></p>
<h3> <span class="mw-headline" id="OOP_and_control_flow">OOP and control flow</span>
</h3>
<p>OOP was developed to increase the <a href="http://en.m.wikipedia.org/wiki/Code_reuse" title="Code reuse">reusability</a> and <a href="http://en.m.wikipedia.org/wiki/Software_maintenance" title="Software maintenance">maintainability</a> of source code.<sup id="cite_ref-realisticcodereuse_25-0" class="reference"><a href="Object-oriented_programming#cite_note-realisticcodereuse-25"><span>[</span>25<span>]</span></a></sup> Transparent representation of the <a href="http://en.m.wikipedia.org/wiki/Control_flow" title="Control flow">control flow</a> had no priority and was meant to be handled by a compiler. With the increasing relevance of parallel hardware and <a href="http://en.m.wikipedia.org/wiki/Thread_(computer_science)" title="Thread (computer science)" class="mw-redirect">multithreaded coding</a>, developer transparent control flow becomes more important, something hard to achieve with OOP.<sup id="cite_ref-flaws_26-0" class="reference"><a href="Object-oriented_programming#cite_note-flaws-26"><span>[</span>26<span>]</span></a></sup><sup id="cite_ref-multithreadingisaverb_27-0" class="reference"><a href="Object-oriented_programming#cite_note-multithreadingisaverb-27"><span>[</span>27<span>]</span></a></sup><sup id="cite_ref-multicore_28-0" class="reference"><a href="Object-oriented_programming#cite_note-multicore-28"><span>[</span>28<span>]</span></a></sup><sup id="cite_ref-29" class="reference"><a href="Object-oriented_programming#cite_note-29"><span>[</span>29<span>]</span></a></sup></p>
<h3> <span class="mw-headline" id="Responsibility-_vs._data-driven_design">Responsibility- vs. data-driven design</span>
</h3>
<p><a href="http://en.m.wikipedia.org/wiki/Responsibility-driven_design" title="Responsibility-driven design">Responsibility-driven design</a> defines classes in terms of a contract, that is, a class should be defined around a responsibility and the information that it shares. This is contrasted by Wirfs-Brock and Wilkerson with <a href="http://en.m.wikipedia.org/wiki/Data-driven_design" title="Data-driven design" class="mw-redirect">data-driven design</a>, where classes are defined around the data-structures that must be held. The authors hold that responsibility-driven design is preferable.</p>
<h2> <span class="mw-headline" id="Criticism">Criticism</span>
</h2>
<p>A number of well-known researchers and programmers have analysed the utility of OOP. Here is an incomplete list:</p>
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Luca_Cardelli" title="Luca Cardelli">Luca Cardelli</a> wrote a paper titled "Bad Engineering Properties of Object-Oriented Languages".<sup id="cite_ref-badprop_30-0" class="reference"><a href="Object-oriented_programming#cite_note-badprop-30"><span>[</span>30<span>]</span></a></sup>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Richard_Stallman" title="Richard Stallman">Richard Stallman</a> wrote in 1995, "Adding OOP to <a href="http://en.m.wikipedia.org/wiki/Emacs" title="Emacs">Emacs</a> is not clearly an improvement; I used OOP when working on the <a href="http://en.m.wikipedia.org/wiki/Lisp_Machine" title="Lisp Machine" class="mw-redirect">Lisp Machine</a> <a href="http://en.m.wikipedia.org/wiki/Window_system" title="Window system" class="mw-redirect">window systems</a>, and I disagree with the usual view that it is a superior way to program."<sup id="cite_ref-31" class="reference"><a href="Object-oriented_programming#cite_note-31"><span>[</span>31<span>]</span></a></sup>
</li>
<li>A study by Potok et al.<sup id="cite_ref-32" class="reference"><a href="Object-oriented_programming#cite_note-32"><span>[</span>32<span>]</span></a></sup> has shown no significant difference in productivity between OOP and procedural approaches.</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Christopher_J._Date" title="Christopher J. Date">Christopher J. Date</a> stated that critical comparison of OOP to other technologies, relational in particular, is difficult because of lack of an agreed-upon and rigorous definition of OOP.<sup id="cite_ref-DatePage650_33-0" class="reference"><a href="Object-oriented_programming#cite_note-DatePage650-33"><span>[</span>33<span>]</span></a></sup> Date and Darwen<sup id="cite_ref-ThirdManifesto_34-0" class="reference"><a href="Object-oriented_programming#cite_note-ThirdManifesto-34"><span>[</span>34<span>]</span></a></sup> propose a theoretical foundation on OOP that uses OOP as a kind of customizable <a href="Data_type" title="Data type">type system</a> to support RDBMS.</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Alexander_Stepanov" title="Alexander Stepanov">Alexander Stepanov</a> suggested that OOP provides a mathematically limited viewpoint and called it "almost as much of a hoax as <a href="http://en.m.wikipedia.org/wiki/Artificial_Intelligence" title="Artificial Intelligence" class="mw-redirect">Artificial Intelligence</a>. I have yet to see an interesting piece of code that comes from these OO people. In a sense, I am unfair to AI: I learned a lot of stuff from the <a href="http://en.m.wikipedia.org/wiki/MIT_AI_Lab" title="MIT AI Lab" class="mw-redirect">MIT AI Lab</a> crowd, they have done some really fundamental work....".<sup id="cite_ref-stepanov_35-0" class="reference"><a href="Object-oriented_programming#cite_note-stepanov-35"><span>[</span>35<span>]</span></a></sup>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Paul_Graham_(computer_programmer)" title="Paul Graham (computer programmer)">Paul Graham</a> has suggested that the purpose of OOP is to act as a "herding mechanism" that keeps mediocre programmers in mediocre organizations from "doing too much damage". This is at the expense of slowing down productive programmers who know how to use more powerful and more compact techniques.<sup id="cite_ref-graham_36-0" class="reference"><a href="Object-oriented_programming#cite_note-graham-36"><span>[</span>36<span>]</span></a></sup>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Joe_Armstrong_(programming)" title="Joe Armstrong (programming)" class="mw-redirect">Joe Armstrong</a>, the principal inventor of <a href="http://en.m.wikipedia.org/wiki/Erlang_(programming_language)" title="Erlang (programming language)">Erlang</a>, is quoted as saying "The problem with object-oriented languages is they've got all this implicit environment that they carry around with them. You wanted a banana but what you got was a gorilla holding the banana and the entire jungle."<sup id="cite_ref-armstrongjoe_37-0" class="reference"><a href="Object-oriented_programming#cite_note-armstrongjoe-37"><span>[</span>37<span>]</span></a></sup>
</li>
<li>Richard Mansfield, author and former editor of <i><a href="http://en.m.wikipedia.org/wiki/COMPUTE!" title="COMPUTE!" class="mw-redirect">COMPUTE!</a></i> magazine, states that "like countless other intellectual fads over the years ("relevance", communism, "modernism", and so on—history is littered with them), OOP will be with us until eventually reality asserts itself. But considering how OOP currently pervades both universities and workplaces, OOP may well prove to be a durable delusion. Entire generations of indoctrinated programmers continue to march out of the academy, committed to OOP and nothing but OOP for the rest of their lives."<sup id="cite_ref-mansfield1_38-0" class="reference"><a href="Object-oriented_programming#cite_note-mansfield1-38"><span>[</span>38<span>]</span></a></sup> He also is quoted as saying "OOP is to writing a program, what going through <a href="http://en.m.wikipedia.org/wiki/Airport_security" title="Airport security">airport security</a> is to flying".<sup id="cite_ref-mansfield2_39-0" class="reference"><a href="Object-oriented_programming#cite_note-mansfield2-39"><span>[</span>39<span>]</span></a></sup>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Steve_Yegge" title="Steve Yegge">Steve Yegge</a>, making a roundabout comparison with <a href="Functional_programming" title="Functional programming">Functional programming</a>, writes, "Object Oriented Programming puts the Nouns first and foremost. Why would you go to such lengths to put one part of speech on a pedestal? Why should one kind of concept take precedence over another? It's not as if OOP has suddenly made verbs less important in the way we actually think. It's a strangely skewed perspective." <sup id="cite_ref-40" class="reference"><a href="Object-oriented_programming#cite_note-40"><span>[</span>40<span>]</span></a></sup>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Rich_Hickey" title="Rich Hickey" class="mw-redirect">Rich Hickey</a>, creator of <a href="http://en.m.wikipedia.org/wiki/Clojure" title="Clojure">Clojure</a>, described object systems as over simplistic models of the real world. He emphasized the inability of OOP to model time properly, which is getting increasingly problematic as software systems become more concurrent.<sup id="cite_ref-41" class="reference"><a href="Object-oriented_programming#cite_note-41"><span>[</span>41<span>]</span></a></sup>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Carnegie-Mellon_University" title="Carnegie-Mellon University" class="mw-redirect">Carnegie-Mellon University</a> Professor <a href="http://en.m.wikipedia.org/wiki/Robert_Harper_(computer_scientist)" title="Robert Harper (computer scientist)">Robert Harper</a> in March 2011 wrote: "This semester Dan Licata and I are co-teaching a new course on <a href="Functional_programming" title="Functional programming">functional programming</a> for first-year prospective CS majors... Object-oriented programming is eliminated entirely from the introductory curriculum, because it is both anti-modular and anti-parallel by its very nature, and hence unsuitable for a modern CS curriculum. A proposed new course on object-oriented design methodology will be offered at the sophomore level for those students who wish to study this topic."<sup id="cite_ref-42" class="reference"><a href="Object-oriented_programming#cite_note-42"><span>[</span>42<span>]</span></a></sup>
</li>
</ul>
<h2> <span class="mw-headline" id="See_also">See also</span>
</h2>
<div class="noprint tright portal" style="border:solid #aaa 1px; margin:0.5em 0 0.5em 1em;">
<table style="background:#f9f9f9; font-size:85%; line-height:110%; max-width:175px;"><tr>
<td style="text-align: center;"><a href="http://en.m.wikipedia.org/wiki/File:8bit-dynamiclist.gif" class="image"><img alt="Portal icon" src="http://upload.wikimedia.org/wikipedia/commons/thumb/1/1d/8bit-dynamiclist.gif/28px-8bit-dynamiclist.gif" width="28" height="28" srcset="//upload.wikimedia.org/wikipedia/commons/1/1d/8bit-dynamiclist.gif 1.5x, //upload.wikimedia.org/wikipedia/commons/1/1d/8bit-dynamiclist.gif 2x"></a></td>
<td style="padding: 0 0.2em; vertical-align: middle; font-style: italic; font-weight: bold"><a href="http://en.m.wikipedia.org/wiki/Portal:Computer_programming" title="Portal:Computer programming">Computer programming  portal</a></td>
</tr></table>
</div>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Aspect-oriented_programming" title="Aspect-oriented programming">Aspect-oriented programming</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/CADES" title="CADES">CADES</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Circle-ellipse_problem" title="Circle-ellipse problem">Circle-ellipse problem</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Comparison_of_programming_languages_(object-oriented_programming)" title="Comparison of programming languages (object-oriented programming)">Comparison of programming languages (object-oriented programming)</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Comparison_of_programming_paradigms" title="Comparison of programming paradigms">Comparison of programming paradigms</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Component-based_software_engineering" title="Component-based software engineering">Component-based software engineering</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Concurrent_object-oriented_programming" title="Concurrent object-oriented programming">Concurrent object-oriented programming</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Constructor_overloading" title="Constructor overloading" class="mw-redirect">Constructor overloading</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/CORBA" title="CORBA" class="mw-redirect">CORBA</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Distributed_Component_Object_Model" title="Distributed Component Object Model">DCOM</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Design_by_contract" title="Design by contract">Design by contract</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/GRASP_(object-oriented_design)" title="GRASP (object-oriented design)">GRASP</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/IDEF4" title="IDEF4">IDEF4</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Interface_description_language" title="Interface description language">Interface description language</a></li>
<li><a href="Structured_programming" title="Structured programming">Structured programming</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Lepus3" title="Lepus3" class="mw-redirect">Lepus3</a></li>
<li><a href="Modular_programming" title="Modular programming">Modular programming</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Object_association" title="Object association" class="mw-redirect">Object association</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Object_database" title="Object database">Object database</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Object-oriented_analysis_and_design" title="Object-oriented analysis and design">Object-oriented analysis and design</a></li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Object-relational_impedance_mismatch" title="Object-relational impedance mismatch">Object-relational impedance mismatch</a> (and <a href="http://en.m.wikipedia.org/wiki/The_Third_Manifesto" title="The Third Manifesto">The Third Manifesto</a>)</li>
<li><a href="http://en.m.wikipedia.org/wiki/Object-relational_mapping" title="Object-relational mapping">Object-relational mapping</a></li>
<li><a href="Procedural_programming" title="Procedural programming">Procedural programming</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Refactoring" title="Refactoring" class="mw-redirect">Refactoring</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Solid_(object-oriented_design)" title="Solid (object-oriented design)" class="mw-redirect">SOLID</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/IBM_System_Object_Model" title="IBM System Object Model">System Object Model</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Visual_FoxPro" title="Visual FoxPro">Visual FoxPro</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/ZZT-oop" title="ZZT-oop">ZZT-oop</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Jeroo" title="Jeroo">Jeroo</a></li>
</ul>
<h2> <span class="mw-headline" id="References">References</span>
</h2>
<div class="reflist references-column-count references-column-count-2" style="-moz-column-count: 2; -webkit-column-count: 2; column-count: 2; list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-1">^</a></b></span> <span class="reference-text"><span class="citation Journal">McCarthy, J.; <span class="new" title="Robert Brayton (computer scientist) (page does not exist)">Brayton, R.</span>; <span class="new" title="Daniel Edwards (programmer) (page does not exist)">Edwards, D.</span>; <a href="http://en.m.wikipedia.org/wiki/Phyllis_Fox" title="Phyllis Fox">Fox, P.</a>; <a href="http://en.m.wikipedia.org/wiki/Louis_Hodes" title="Louis Hodes">Hodes, L.</a>; <a href="http://en.m.wikipedia.org/wiki/David_Luckham" title="David Luckham">Luckham, D.</a>; <span class="new" title="Klim Maling (programmer) (page does not exist)">Maling, K.</span>; <a href="http://en.m.wikipedia.org/wiki/David_Park_(computer_scientist)" title="David Park (computer scientist)">Park, D.</a> et al. (March 1960). <a rel="nofollow" class="external text" href="http://history.siam.org/sup/Fox_1960_LISP.pdf"><i>LISP I Programmers Manual</i></a>. <a href="http://en.m.wikipedia.org/wiki/Boston" title="Boston">Boston</a>, <a href="http://en.m.wikipedia.org/wiki/Massachusetts" title="Massachusetts">Massachusetts</a>: Artificial Intelligence Group, <a href="http://en.m.wikipedia.org/wiki/M.I.T._Computation_Center" title="M.I.T. Computation Center">M.I.T. Computation Center</a> and <a href="http://en.m.wikipedia.org/wiki/Research_Laboratory_of_Electronics_at_MIT" title="Research Laboratory of Electronics at MIT">Research Laboratory</a>. p. 88f<span class="printonly">. <a rel="nofollow" class="external free" href="http://history.siam.org/sup/Fox_1960_LISP.pdf">http://history.siam.org/sup/Fox_1960_LISP.pdf</a></span>. "In the local M.I.T. patois, association lists [of atomic symbols] are also referred to as "property lists", and atomic symbols are sometimes called "objects"."</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=LISP+I+Programmers+Manual&amp;rft.aulast=McCarthy&amp;rft.aufirst=J.&amp;rft.au=McCarthy%2C%26%2332%3BJ.&amp;rft.au=Brayton%2C%26%2332%3BR.&amp;rft.au=Edwards%2C%26%2332%3BD.&amp;rft.au=Fox%2C%26%2332%3BP.&amp;rft.au=Hodes%2C%26%2332%3BL.&amp;rft.au=Luckham%2C%26%2332%3BD.&amp;rft.au=Maling%2C%26%2332%3BK.&amp;rft.au=Park%2C%26%2332%3BD.&amp;rft.au=Russell%2C%26%2332%3BS.&amp;rft.date=March+1960&amp;rft.pages=p.%26nbsp%3B88f&amp;rft.place=%5B%5BBoston%5D%5D%2C+%5B%5BMassachusetts%5D%5D&amp;rft.pub=Artificial+Intelligence+Group%2C+%5B%5BM.I.T.+Computation+Center%5D%5D+and+%5B%5BResearch+Laboratory+of+Electronics+at+MIT%7CResearch+Laboratory%5D%5D&amp;rft_id=http%3A%2F%2Fhistory.siam.org%2Fsup%2FFox_1960_LISP.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-2">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-2">^</a></b></span> <span class="reference-text"><span class="citation book"><a href="http://en.m.wikipedia.org/wiki/John_McCarthy_(computer_scientist)" title="John McCarthy (computer scientist)">McCarthy, John</a>; Abrahams, Paul W.; <span class="new" title="Daniel Edwards (programmer) (page does not exist)">Edwards, Daniel J.</span>; Hart, swapnil d.; Levin, Michael I. (1962). <a rel="nofollow" class="external text" href="http://community.computerhistory.org/scc/projects/LISP/book/LISP%201.5%20Programmers%20Manual.pdf"><i>LISP 1.5 Programmer's Manual</i></a>. <a href="http://en.m.wikipedia.org/wiki/MIT_Press" title="MIT Press">MIT Press</a>. p. 105. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-262-13011-4" title="Special:BookSources/0-262-13011-4">0-262-13011-4</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://community.computerhistory.org/scc/projects/LISP/book/LISP%201.5%20Programmers%20Manual.pdf">http://community.computerhistory.org/scc/projects/LISP/book/LISP%201.5%20Programmers%20Manual.pdf</a></span>. "Object - a synonym for atomic symbol"</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=LISP+1.5+Programmer%27s+Manual&amp;rft.aulast=McCarthy&amp;rft.aufirst=John&amp;rft.au=McCarthy%2C%26%2332%3BJohn&amp;rft.au=Abrahams%2C%26%2332%3BPaul+W.&amp;rft.au=Edwards%2C%26%2332%3BDaniel+J.&amp;rft.au=Hart%2C%26%2332%3Bswapnil+d.&amp;rft.au=Levin%2C%26%2332%3BMichael+I.&amp;rft.date=1962&amp;rft.pages=p.%26nbsp%3B105&amp;rft.pub=%5B%5BMIT+Press%5D%5D&amp;rft.isbn=0-262-13011-4&amp;rft_id=http%3A%2F%2Fcommunity.computerhistory.org%2Fscc%2Fprojects%2FLISP%2Fbook%2FLISP%25201.5%2520Programmers%2520Manual.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-alanKayOnOO-3">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-alanKayOnOO_3-0">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://www.purl.org/stefan_ram/pub/doc_kay_oop_en">"Dr. Alan Kay on the Meaning of "Object-Oriented Programming""</a>. 2003<span class="printonly">. <a rel="nofollow" class="external free" href="http://www.purl.org/stefan_ram/pub/doc_kay_oop_en">http://www.purl.org/stefan_ram/pub/doc_kay_oop_en</a></span><span class="reference-accessdate">. Retrieved 11 February 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Dr.+Alan+Kay+on+the+Meaning+of+%22Object-Oriented+Programming%22&amp;rft.atitle=&amp;rft.date=2003&amp;rft_id=http%3A%2F%2Fwww.purl.org%2Fstefan_ram%2Fpub%2Fdoc_kay_oop_en&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-4">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-4">^</a></b></span> <span class="reference-text"><span class="citation web">Sutherland, I. E. (30 January 1963). <a rel="nofollow" class="external text" href="http://handle.dtic.mil/100.2/AD404549">"Sketchpad: A Man-Machine Graphical Communication System"</a> (PDF). Technical Report No. 296, Lincoln Laboratory, Massachusetts Institute of Technology via Defense Technical Information Center (stinet.dtic.mil)<span class="printonly">. <a rel="nofollow" class="external free" href="http://handle.dtic.mil/100.2/AD404549">http://handle.dtic.mil/100.2/AD404549</a></span><span class="reference-accessdate">. Retrieved 3 November 2007</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Sketchpad%3A+A+Man-Machine+Graphical+Communication+System&amp;rft.atitle=&amp;rft.aulast=Sutherland%2C+I.+E.&amp;rft.au=Sutherland%2C+I.+E.&amp;rft.date=30+January+1963&amp;rft.pub=Technical+Report+No.+296%2C+Lincoln+Laboratory%2C+Massachusetts+Institute+of+Technology+via+Defense+Technical+Information+Center+%28stinet.dtic.mil%29&amp;rft_id=http%3A%2F%2Fhandle.dtic.mil%2F100.2%2FAD404549&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-simuladev-5">
<span class="mw-cite-backlink">^ <a href="Object-oriented_programming#cite_ref-simuladev_5-0"><sup><i><b>a</b></i></sup></a> <a href="Object-oriented_programming#cite_ref-simuladev_5-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">The Development of the Simula Languages, <a href="http://en.m.wikipedia.org/wiki/Kristen_Nygaard" title="Kristen Nygaard">Kristen Nygaard</a>, <a href="http://en.m.wikipedia.org/wiki/Ole-Johan_Dahl" title="Ole-Johan Dahl">Ole-Johan Dahl</a>, p.254 <a rel="nofollow" class="external text" href="http://cs-exhibitions.uni-klu.ac.at/fileadmin/template/documents/text/The_development_of_the_simula_languages.pdf">Uni-kl.ac.at</a></span>
</li>
<li id="cite_note-6">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-6">^</a></b></span> <span class="reference-text"><span class="citation web">Ross, Doug. <a rel="nofollow" class="external text" href="http://www.csail.mit.edu/timeline/timeline.php?query=event&amp;id=19">"The first software engineering language"</a>. <i>LCS/AI Lab Timeline:</i>. MIT Computer Science and Artificial Intelligence Laboratory<span class="printonly">. <a rel="nofollow" class="external free" href="http://www.csail.mit.edu/timeline/timeline.php?query=event&amp;id=19">http://www.csail.mit.edu/timeline/timeline.php?query=event&amp;id=19</a></span><span class="reference-accessdate">. Retrieved 13 May 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+first+software+engineering+language&amp;rft.atitle=LCS%2FAI+Lab+Timeline%3A&amp;rft.aulast=Ross&amp;rft.aufirst=Doug&amp;rft.au=Ross%2C%26%2332%3BDoug&amp;rft.pub=MIT+Computer+Science+and+Artificial+Intelligence+Laboratory&amp;rft_id=http%3A%2F%2Fwww.csail.mit.edu%2Ftimeline%2Ftimeline.php%3Fquery%3Devent%26id%3D19&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-7">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-7">^</a></b></span> <span class="reference-text"><span class="citation Journal">Holmevik, Jan Rune (1994). <a rel="nofollow" class="external text" href="http://www.idi.ntnu.no/grupper/su/publ/simula/holmevik-simula-ieeeannals94.pdf">"Compiling Simula: A historical study of technological genesis"</a>. <i>IEEE Annals in the History of Computing</i> <b>16</b> (4): 25–37. <a href="Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1109%2F85.329756">10.1109/85.329756</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://www.idi.ntnu.no/grupper/su/publ/simula/holmevik-simula-ieeeannals94.pdf">http://www.idi.ntnu.no/grupper/su/publ/simula/holmevik-simula-ieeeannals94.pdf</a></span><span class="reference-accessdate">. Retrieved 12 May 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Compiling+Simula%3A+A+historical+study+of+technological+genesis&amp;rft.jtitle=IEEE+Annals+in+the+History+of+Computing&amp;rft.aulast=Holmevik&amp;rft.aufirst=Jan+Rune&amp;rft.au=Holmevik%2C%26%2332%3BJan+Rune&amp;rft.date=1994&amp;rft.volume=16&amp;rft.issue=4&amp;rft.pages=25%E2%80%9337&amp;rft_id=info:doi/10.1109%2F85.329756&amp;rft_id=http%3A%2F%2Fwww.idi.ntnu.no%2Fgrupper%2Fsu%2Fpubl%2Fsimula%2Fholmevik-simula-ieeeannals94.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-8">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-8">^</a></b></span> <span class="reference-text"><span class="citation Journal"><a href="http://en.m.wikipedia.org/wiki/Tony_Hoare" title="Tony Hoare">Hoare, C. A.</a> (Nov 1965). "Record Handling". <i><a href="http://en.m.wikipedia.org/wiki/ALGOL_Bulletin" title="ALGOL Bulletin">ALGOL Bulletin</a></i> (21): 39–69. <a href="Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1145%2F1061032.1061041">10.1145/1061032.1061041</a></span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Record+Handling&amp;rft.jtitle=%5B%5BALGOL+Bulletin%5D%5D&amp;rft.aulast=Hoare&amp;rft.aufirst=C.+A.&amp;rft.au=Hoare%2C%26%2332%3BC.+A.&amp;rft.date=Nov+1965&amp;rft.issue=21&amp;rft.pages=39%E2%80%9369&amp;rft_id=info:doi/10.1145%2F1061032.1061041&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-st-9">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-st_9-0">^</a></b></span> <span class="reference-text"><span class="citation web">Kay, Alan. <a rel="nofollow" class="external text" href="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html">"The Early History of Smalltalk"</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html">http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html</a></span><span class="reference-accessdate">. Retrieved 13 September 2007</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+Early+History+of+Smalltalk&amp;rft.atitle=&amp;rft.aulast=Kay&amp;rft.aufirst=Alan&amp;rft.au=Kay%2C%26%2332%3BAlan&amp;rft_id=http%3A%2F%2Fgagne.homedns.org%2F%7Etgagne%2Fcontrib%2FEarlyHistoryST.html&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-10">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-10">^</a></b></span> <span class="reference-text">1995 (June) Visual <a href="http://en.m.wikipedia.org/wiki/FoxPro" title="FoxPro">FoxPro</a> 3.0, FoxPro evolves from a procedural language to an object-oriented language. Visual FoxPro 3.0 introduces a database container, seamless client/server capabilities, support for ActiveX technologies, and OLE Automation and null support. <a rel="nofollow" class="external text" href="http://www.foxprohistory.org/foxprotimeline.htm#summary_of_fox_releases">Summary of Fox releases</a></span>
</li>
<li id="cite_note-11">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-11">^</a></b></span> <span class="reference-text">FoxPro History web site: <a rel="nofollow" class="external text" href="http://www.foxprohistory.org/tableofcontents.htm">Foxprohistory.org</a></span>
</li>
<li id="cite_note-12">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-12">^</a></b></span> <span class="reference-text">1995 Reviewers Guide to Visual FoxPro 3.0: <a rel="nofollow" class="external text" href="http://www.dfpug.de/loseblattsammlung/migration/whitepapers/vfp_rg.htm">DFpug.de</a></span>
</li>
<li id="cite_note-ArmstrongQuarks-13">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-ArmstrongQuarks_13-0">^</a></b></span> <span class="reference-text">Armstrong, <i>The Quarks of Object-Oriented Development</i>. In descending order of popularity, the "quarks" are: Inheritance, Object, Class, Encapsulation, Method, Message Passing, Polymorphism, Abstraction</span>
</li>
<li id="cite_note-14">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-14">^</a></b></span> <span class="reference-text"><span class="citation book">Pierce, Benjamin (2002). <i><a href="http://en.m.wikipedia.org/wiki/Types_and_Programming_Languages" title="Types and Programming Languages">Types and Programming Languages</a></i>. MIT Press. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-262-16209-1" title="Special:BookSources/0-262-16209-1">0-262-16209-1</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=%5B%5BTypes+and+Programming+Languages%5D%5D&amp;rft.aulast=Pierce&amp;rft.aufirst=Benjamin&amp;rft.au=Pierce%2C%26%2332%3BBenjamin&amp;rft.date=2002&amp;rft.pub=MIT+Press&amp;rft.isbn=0-262-16209-1&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>, section 18.1 "What is Object-Oriented Programming?"</span>
</li>
<li id="cite_note-15">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-15">^</a></b></span> <span class="reference-text"><a href="http://en.m.wikipedia.org/wiki/John_C._Mitchell" title="John C. Mitchell">John C. Mitchell</a>, <i>Concepts in programming languages</i>, Cambridge University Press, 2003, <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0521780985" class="internal mw-magiclink-isbn">ISBN 0-521-78098-5</a>, p.278</span>
</li>
<li id="cite_note-16">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-16">^</a></b></span> <span class="reference-text">Michael Lee Scott, <i>Programming language pragmatics</i>, Edition 2, Morgan Kaufmann, 2006, <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0126339511" class="internal mw-magiclink-isbn">ISBN 0-12-633951-1</a>, p. 470 vikas</span>
</li>
<li id="cite_note-poll97-17">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-poll97_17-0">^</a></b></span> <span class="reference-text"><span class="citation web">Poll, Erik. <a rel="nofollow" class="external text" href="http://www.cs.ru.nl/E.Poll/papers/kyoto97.pdf">"Subtyping and Inheritance for Categorical Datatypes"</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://www.cs.ru.nl/E.Poll/papers/kyoto97.pdf">http://www.cs.ru.nl/E.Poll/papers/kyoto97.pdf</a></span><span class="reference-accessdate">. Retrieved 5 June 2011</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Subtyping+and+Inheritance+for+Categorical+Datatypes&amp;rft.atitle=&amp;rft.aulast=Poll&amp;rft.aufirst=Erik&amp;rft.au=Poll%2C%26%2332%3BErik&amp;rft_id=http%3A%2F%2Fwww.cs.ru.nl%2FE.Poll%2Fpapers%2Fkyoto97.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-AbadiCardelli-18">
<span class="mw-cite-backlink">^ <a href="Object-oriented_programming#cite_ref-AbadiCardelli_18-0"><sup><i><b>a</b></i></sup></a> <a href="Object-oriented_programming#cite_ref-AbadiCardelli_18-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Martin_Abadi" title="Martin Abadi" class="mw-redirect">Abadi, Martin</a>; Cardelli, Luca (1996). <a rel="nofollow" class="external text" href="http://portal.acm.org/citation.cfm?id=547964&amp;dl=ACM&amp;coll=portal"><i>A Theory of Objects</i></a>. Springer-Verlag New York, Inc.. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-387-94775-2" title="Special:BookSources/0-387-94775-2">0-387-94775-2</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://portal.acm.org/citation.cfm?id=547964&amp;dl=ACM&amp;coll=portal">http://portal.acm.org/citation.cfm?id=547964&amp;dl=ACM&amp;coll=portal</a></span><span class="reference-accessdate">. Retrieved 21 April 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=A+Theory+of+Objects&amp;rft.aulast=Abadi&amp;rft.aufirst=Martin&amp;rft.au=Abadi%2C%26%2332%3BMartin&amp;rft.date=1996&amp;rft.pub=Springer-Verlag+New+York%2C+Inc.&amp;rft.isbn=0-387-94775-2&amp;rft_id=http%3A%2F%2Fportal.acm.org%2Fcitation.cfm%3Fid%3D547964%26dl%3DACM%26coll%3Dportal&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-19">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-19">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://www.emeraldprogramminglanguage.org/">"The Emerald Programming Language"</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://www.emeraldprogramminglanguage.org/">http://www.emeraldprogramminglanguage.org/</a></span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+Emerald+Programming+Language&amp;rft.atitle=&amp;rft_id=http%3A%2F%2Fwww.emeraldprogramminglanguage.org%2F&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-RDMDBobjectmis-20">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-RDMDBobjectmis_20-0">^</a></b></span> <span class="reference-text"><span class="citation web">Neward, Ted (26 June 2006). <a rel="nofollow" class="external text" href="http://blogs.tedneward.com/2006/06/26/The+Vietnam+Of+Computer+Science.aspx">"The Vietnam of Computer Science"</a>. Interoperability Happens<span class="printonly">. <a rel="nofollow" class="external free" href="http://blogs.tedneward.com/2006/06/26/The+Vietnam+Of+Computer+Science.aspx">http://blogs.tedneward.com/2006/06/26/The+Vietnam+Of+Computer+Science.aspx</a></span><span class="reference-accessdate">. Retrieved 2 June 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=The+Vietnam+of+Computer+Science&amp;rft.atitle=&amp;rft.aulast=Neward&amp;rft.aufirst=Ted&amp;rft.au=Neward%2C%26%2332%3BTed&amp;rft.date=26+June+2006&amp;rft.pub=Interoperability+Happens&amp;rft_id=http%3A%2F%2Fblogs.tedneward.com%2F2006%2F06%2F26%2FThe%2BVietnam%2BOf%2BComputer%2BScience.aspx&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-Meyer230-21">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-Meyer230_21-0">^</a></b></span> <span class="reference-text">Meyer, Second Edition, p. 230</span>
</li>
<li id="cite_note-22">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-22">^</a></b></span> <span class="reference-text">M.Trofimov, <i>OOOP - The Third "O" Solution: Open OOP.</i> First Class, <a href="http://en.m.wikipedia.org/wiki/Object_Management_Group" title="Object Management Group">OMG</a>, 1993, Vol. 3, issue 3, p.14.</span>
</li>
<li id="cite_note-executioniKoN-23">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-executioniKoN_23-0">^</a></b></span> <span class="reference-text"><span class="citation web">Yegge, Steve (30 March 2006). <a rel="nofollow" class="external text" href="http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html">"Execution in the Kingdom of Nouns"</a>. steve-yegge.blogspot.com<span class="printonly">. <a rel="nofollow" class="external free" href="http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html">http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html</a></span><span class="reference-accessdate">. Retrieved 3 July 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Execution+in+the+Kingdom+of+Nouns&amp;rft.atitle=&amp;rft.aulast=Yegge&amp;rft.aufirst=Steve&amp;rft.au=Yegge%2C%26%2332%3BSteve&amp;rft.date=30+March+2006&amp;rft.pub=steve-yegge.blogspot.com&amp;rft_id=http%3A%2F%2Fsteve-yegge.blogspot.com%2F2006%2F03%2Fexecution-in-kingdom-of-nouns.html&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-executioniKoN2-24">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-executioniKoN2_24-0">^</a></b></span> <span class="reference-text"><span class="citation web">Boronczyk, Timothy (11 June 2009). <a rel="nofollow" class="external text" href="http://zaemis.blogspot.com/2009/06/whats-wrong-with-oop.html">"What's Wrong with OOP"</a>. zaemis.blogspot.com<span class="printonly">. <a rel="nofollow" class="external free" href="http://zaemis.blogspot.com/2009/06/whats-wrong-with-oop.html">http://zaemis.blogspot.com/2009/06/whats-wrong-with-oop.html</a></span><span class="reference-accessdate">. Retrieved 3 July 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=What%27s+Wrong+with+OOP&amp;rft.atitle=&amp;rft.aulast=Boronczyk&amp;rft.aufirst=Timothy&amp;rft.au=Boronczyk%2C%26%2332%3BTimothy&amp;rft.date=11+June+2009&amp;rft.pub=zaemis.blogspot.com&amp;rft_id=http%3A%2F%2Fzaemis.blogspot.com%2F2009%2F06%2Fwhats-wrong-with-oop.html&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-realisticcodereuse-25">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-realisticcodereuse_25-0">^</a></b></span> <span class="reference-text"><span class="citation web">Ambler, Scott (1 January 1998). <a rel="nofollow" class="external text" href="http://www.drdobbs.com/184415594">"A Realistic Look at Object-Oriented Reuse"</a>. www.drdobbs.com<span class="printonly">. <a rel="nofollow" class="external free" href="http://www.drdobbs.com/184415594">http://www.drdobbs.com/184415594</a></span><span class="reference-accessdate">. Retrieved 4 July 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=A+Realistic+Look+at+Object-Oriented+Reuse&amp;rft.atitle=&amp;rft.aulast=Ambler&amp;rft.aufirst=Scott&amp;rft.au=Ambler%2C%26%2332%3BScott&amp;rft.date=1+January+1998&amp;rft.pub=www.drdobbs.com&amp;rft_id=http%3A%2F%2Fwww.drdobbs.com%2F184415594&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-flaws-26">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-flaws_26-0">^</a></b></span> <span class="reference-text"><span class="citation web">Shelly, Asaf (22 August 2008). <a rel="nofollow" class="external text" href="http://software.intel.com/en-us/blogs/2008/08/22/flaws-of-object-oriented-modeling/">"Flaws of Object Oriented Modeling"</a>. Intel Software Network<span class="printonly">. <a rel="nofollow" class="external free" href="http://software.intel.com/en-us/blogs/2008/08/22/flaws-of-object-oriented-modeling/">http://software.intel.com/en-us/blogs/2008/08/22/flaws-of-object-oriented-modeling/</a></span><span class="reference-accessdate">. Retrieved 4 July 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Flaws+of+Object+Oriented+Modeling&amp;rft.atitle=&amp;rft.aulast=Shelly&amp;rft.aufirst=Asaf&amp;rft.au=Shelly%2C%26%2332%3BAsaf&amp;rft.date=22+August+2008&amp;rft.pub=Intel+Software+Network&amp;rft_id=http%3A%2F%2Fsoftware.intel.com%2Fen-us%2Fblogs%2F2008%2F08%2F22%2Fflaws-of-object-oriented-modeling%2F&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-multithreadingisaverb-27">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-multithreadingisaverb_27-0">^</a></b></span> <span class="reference-text"><span class="citation web">James, Justin (1 October 2007). <a rel="nofollow" class="external text" href="http://blogs.techrepublic.com.com/programming-and-development/?p=518">"Multithreading is a verb not a noun"</a>. techrepublic.com<span class="printonly">. <a rel="nofollow" class="external free" href="http://blogs.techrepublic.com.com/programming-and-development/?p=518">http://blogs.techrepublic.com.com/programming-and-development/?p=518</a></span><span class="reference-accessdate">. Retrieved 4 July 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Multithreading+is+a+verb+not+a+noun&amp;rft.atitle=&amp;rft.aulast=James&amp;rft.aufirst=Justin&amp;rft.au=James%2C%26%2332%3BJustin&amp;rft.date=1+October+2007&amp;rft.pub=techrepublic.com&amp;rft_id=http%3A%2F%2Fblogs.techrepublic.com.com%2Fprogramming-and-development%2F%3Fp%3D518&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-multicore-28">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-multicore_28-0">^</a></b></span> <span class="reference-text"><span class="citation web">Shelly, Asaf (22 August 2008). <a rel="nofollow" class="external text" href="http://support.microsoft.com/?scid=kb%3Ben-us%3B558117">"HOW TO: Multicore Programming (Multiprocessing) Visual C++ Class Design Guidelines, Member Functions"</a>. support.microsoft.com<span class="printonly">. <a rel="nofollow" class="external free" href="http://support.microsoft.com/?scid=kb%3Ben-us%3B558117">http://support.microsoft.com/?scid=kb%3Ben-us%3B558117</a></span><span class="reference-accessdate">. Retrieved 4 July 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=HOW+TO%3A+Multicore+Programming+%28Multiprocessing%29+Visual+C%2B%2B+Class+Design+Guidelines%2C+Member+Functions&amp;rft.atitle=&amp;rft.aulast=Shelly&amp;rft.aufirst=Asaf&amp;rft.au=Shelly%2C%26%2332%3BAsaf&amp;rft.date=22+August+2008&amp;rft.pub=support.microsoft.com&amp;rft_id=http%3A%2F%2Fsupport.microsoft.com%2F%3Fscid%3Dkb%253Ben-us%253B558117&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-29">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-29">^</a></b></span> <span class="reference-text"><span class="citation web"><a href="http://en.m.wikipedia.org/wiki/Robert_Harper_(computer_scientist)" title="Robert Harper (computer scientist)">Robert Harper</a> (17 April 2011). <a rel="nofollow" class="external text" href="http://existentialtype.wordpress.com/2011/04/17/some-advice-on-teaching-fp/">"Some thoughts on teaching FP"</a>. Existential Type Blog<span class="printonly">. <a rel="nofollow" class="external free" href="http://existentialtype.wordpress.com/2011/04/17/some-advice-on-teaching-fp/">http://existentialtype.wordpress.com/2011/04/17/some-advice-on-teaching-fp/</a></span><span class="reference-accessdate">. Retrieved 5 December 2011</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Some+thoughts+on+teaching+FP&amp;rft.atitle=&amp;rft.aulast=%5B%5BRobert+Harper+%28computer+scientist%29%7CRobert+Harper%5D%5D&amp;rft.au=%5B%5BRobert+Harper+%28computer+scientist%29%7CRobert+Harper%5D%5D&amp;rft.date=17+April+2011&amp;rft.pub=Existential+Type+Blog&amp;rft_id=http%3A%2F%2Fexistentialtype.wordpress.com%2F2011%2F04%2F17%2Fsome-advice-on-teaching-fp%2F&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-badprop-30">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-badprop_30-0">^</a></b></span> <span class="reference-text"><span class="citation Journal"><a href="http://en.m.wikipedia.org/wiki/Luca_Cardelli" title="Luca Cardelli">Cardelli, Luca</a> (1996). <a rel="nofollow" class="external text" href="http://lucacardelli.name/Papers/BadPropertiesOfOO.html">"Bad Engineering Properties of Object-Oriented Languages"</a>. <i>ACM Comput. Surv.</i> (ACM) <b>28</b> (4es): 150. <a href="Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1145%2F242224.242415">10.1145/242224.242415</a>. <a href="http://en.m.wikipedia.org/wiki/International_Standard_Serial_Number" title="International Standard Serial Number">ISSN</a> <a rel="nofollow" class="external text" href="http://www.worldcat.org/issn/0360-0300">0360-0300</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://lucacardelli.name/Papers/BadPropertiesOfOO.html">http://lucacardelli.name/Papers/BadPropertiesOfOO.html</a></span><span class="reference-accessdate">. Retrieved 21 April 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Bad+Engineering+Properties+of+Object-Oriented+Languages&amp;rft.jtitle=ACM+Comput.+Surv.&amp;rft.aulast=Cardelli&amp;rft.aufirst=Luca&amp;rft.au=Cardelli%2C%26%2332%3BLuca&amp;rft.date=1996&amp;rft.volume=28&amp;rft.issue=4es&amp;rft.pages=150&amp;rft.pub=ACM&amp;rft_id=info:doi/10.1145%2F242224.242415&amp;rft.issn=0360-0300&amp;rft_id=http%3A%2F%2Flucacardelli.name%2FPapers%2FBadPropertiesOfOO.html&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-31">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-31">^</a></b></span> <span class="reference-text"><span class="citation web"><a href="http://en.m.wikipedia.org/wiki/Richard_Stallman" title="Richard Stallman">Stallman, Richard</a> (16 January 1995). <a rel="nofollow" class="external text" href="http://groups.google.com/group/comp.emacs.xemacs/browse_thread/thread/d0af257a2837640c/37f251537fafbb03?lnk=st&amp;q=%22Richard+Stallman%22+oop&amp;rnum=5&amp;hl=en#37f251537fafbb03">"Mode inheritance, cloning, hooks &amp; OOP"</a>. Google Groups Discussion<span class="printonly">. <a rel="nofollow" class="external free" href="http://groups.google.com/group/comp.emacs.xemacs/browse_thread/thread/d0af257a2837640c/37f251537fafbb03?lnk=st&amp;q=%22Richard+Stallman%22+oop&amp;rnum=5&amp;hl=en#37f251537fafbb03">http://groups.google.com/group/comp.emacs.xemacs/browse_thread/thread/d0af257a2837640c/37f251537fafbb03?lnk=st&amp;q=%22Richard+Stallman%22+oop&amp;rnum=5&amp;hl=en#37f251537fafbb03</a></span><span class="reference-accessdate">. Retrieved 21 June 2008</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Mode+inheritance%2C+cloning%2C+hooks+%26+OOP&amp;rft.atitle=&amp;rft.aulast=Stallman&amp;rft.aufirst=Richard&amp;rft.au=Stallman%2C%26%2332%3BRichard&amp;rft.date=16+January+1995&amp;rft.pub=Google+Groups+Discussion&amp;rft_id=http%3A%2F%2Fgroups.google.com%2Fgroup%2Fcomp.emacs.xemacs%2Fbrowse_thread%2Fthread%2Fd0af257a2837640c%2F37f251537fafbb03%3Flnk%3Dst%26q%3D%2522Richard%2BStallman%2522%2Boop%26rnum%3D5%26hl%3Den%2337f251537fafbb03&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-32">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-32">^</a></b></span> <span class="reference-text"><span class="citation Journal">Potok, Thomas; Mladen Vouk, Andy Rindos (1999). <a rel="nofollow" class="external text" href="http://www.csm.ornl.gov/~v8q/Homepage/Papers%20Old/spetep-%20printable.pdf">"Productivity Analysis of Object-Oriented Software Developed in a Commercial Environment"</a>. <i>Software – Practice and Experience</i> <b>29</b> (10): 833–847. <a href="Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1002%2F%28SICI%291097-024X%28199908%2929%3A10%3C833%3A%3AAID-SPE258%3E3.0.CO%3B2-P">10.1002/(SICI)1097-024X(199908)29:10&lt;833::AID-SPE258&gt;3.0.CO;2-P</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://www.csm.ornl.gov/~v8q/Homepage/Papers%20Old/spetep-%20printable.pdf">http://www.csm.ornl.gov/~v8q/Homepage/Papers%20Old/spetep-%20printable.pdf</a></span><span class="reference-accessdate">. Retrieved 21 April 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Productivity+Analysis+of+Object-Oriented+Software+Developed+in+a+Commercial+Environment&amp;rft.jtitle=Software+%E2%80%93+Practice+and+Experience&amp;rft.aulast=Potok&amp;rft.aufirst=Thomas&amp;rft.au=Potok%2C%26%2332%3BThomas&amp;rft.date=1999&amp;rft.volume=29&amp;rft.issue=10&amp;rft.pages=833%E2%80%93847&amp;rft_id=info:doi/10.1002%2F%28SICI%291097-024X%28199908%2929%3A10%3C833%3A%3AAID-SPE258%3E3.0.CO%3B2-P&amp;rft_id=http%3A%2F%2Fwww.csm.ornl.gov%2F%7Ev8q%2FHomepage%2FPapers%2520Old%2Fspetep-%2520printable.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-DatePage650-33">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-DatePage650_33-0">^</a></b></span> <span class="reference-text">C. J. Date, Introduction to Database Systems, 6th-ed., Page 650</span>
</li>
<li id="cite_note-ThirdManifesto-34">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-ThirdManifesto_34-0">^</a></b></span> <span class="reference-text">C. J. Date, Hugh Darwen. <i>Foundation for Future Database Systems: The Third Manifesto</i> (2nd Edition)</span>
</li>
<li id="cite_note-stepanov-35">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-stepanov_35-0">^</a></b></span> <span class="reference-text"><span class="citation web"><a href="http://en.m.wikipedia.org/wiki/Alexander_Stepanov" title="Alexander Stepanov">Stepanov, Alexander</a>. <a rel="nofollow" class="external text" href="http://www.stlport.org/resources/StepanovUSA.html">"STLport: An Interview with A. Stepanov"</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://www.stlport.org/resources/StepanovUSA.html">http://www.stlport.org/resources/StepanovUSA.html</a></span><span class="reference-accessdate">. Retrieved 21 April 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=STLport%3A+An+Interview+with+A.+Stepanov&amp;rft.atitle=&amp;rft.aulast=Stepanov&amp;rft.aufirst=Alexander&amp;rft.au=Stepanov%2C%26%2332%3BAlexander&amp;rft_id=http%3A%2F%2Fwww.stlport.org%2Fresources%2FStepanovUSA.html&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-graham-36">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-graham_36-0">^</a></b></span> <span class="reference-text"><span class="citation web"><a href="http://en.m.wikipedia.org/wiki/Paul_Graham_(computer_programmer)" title="Paul Graham (computer programmer)">Graham, Paul</a>. <a rel="nofollow" class="external text" href="http://www.paulgraham.com/noop.html">"Why ARC isn't especially Object–Oriented."</a>. PaulGraham.com<span class="printonly">. <a rel="nofollow" class="external free" href="http://www.paulgraham.com/noop.html">http://www.paulgraham.com/noop.html</a></span><span class="reference-accessdate">. Retrieved 13 November 2009</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Why+ARC+isn%27t+especially+Object%26ndash%3BOriented.&amp;rft.atitle=&amp;rft.aulast=Graham&amp;rft.aufirst=Paul&amp;rft.au=Graham%2C%26%2332%3BPaul&amp;rft.pub=PaulGraham.com&amp;rft_id=http%3A%2F%2Fwww.paulgraham.com%2Fnoop.html&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-armstrongjoe-37">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-armstrongjoe_37-0">^</a></b></span> <span class="reference-text">Armstrong, Joe. In <i>Coders at Work: Reflections on the Craft of Programming.</i> Peter Seibel, ed. <a rel="nofollow" class="external text" href="http://www.codersatwork.com/">Codersatwork.com</a>, Accessed 13 November 2009.</span>
</li>
<li id="cite_note-mansfield1-38">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-mansfield1_38-0">^</a></b></span> <span class="reference-text">Mansfield, Richard. "Has OOP Failed?" 2005. Available at <a rel="nofollow" class="external text" href="http://www.4js.com/en/fichiers/b_genero/pourquoi/Has_OOP_Failed_Sept_2005.pdf">4JS.com</a>, Accessed 13 November 2009.</span>
</li>
<li id="cite_note-mansfield2-39">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-mansfield2_39-0">^</a></b></span> <span class="reference-text">Mansfield, Richard. "OOP Is Much Better in Theory Than in Practice" 2005. Available at <a rel="nofollow" class="external text" href="http://www.devx.com/DevX/Article/26776">Devx.com</a> Accessed 7 January 2010.</span>
</li>
<li id="cite_note-40">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-40">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html">Stevey's Blog Rants</a></span>
</li>
<li id="cite_note-41">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-41">^</a></b></span> <span class="reference-text">Rich Hickey, JVM Languages Summit 2009 keynote, <a rel="nofollow" class="external text" href="http://www.infoq.com/presentations/Are-We-There-Yet-Rich-Hickey">Are We There Yet?</a> November 2009.</span>
</li>
<li id="cite_note-42">
<span class="mw-cite-backlink"><b><a href="Object-oriented_programming#cite_ref-42">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://existentialtype.wordpress.com/2011/03/15/teaching-fp-to-freshmen/">Teaching FP to Freshmen</a>, from Harper's blog about teaching introductory computer science.<a rel="nofollow" class="external autonumber" href="http://existentialtype.wordpress.com/2011/03/15/getting-started/">[1]</a></span>
</li>
</ol>
</div>
<h2> <span class="mw-headline" id="Further_reading">Further reading</span>
</h2>
<table class="metadata mbox-small plainlinks" style="border:1px solid #aaa; background-color:#f9f9f9;"><tr>
<td class="mbox-image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Wikiversity-logo.svg/40px-Wikiversity-logo.svg.png" width="40" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/9/91/Wikiversity-logo.svg/60px-Wikiversity-logo.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/9/91/Wikiversity-logo.svg/80px-Wikiversity-logo.svg.png 2x"></td>
<td class="mbox-text plainlist" style="">Wikiversity has learning materials about <i><b><a href="http://en.wikiversity.org/wiki/Special:Search/Object-oriented_programming" class="extiw" title="v:Special:Search/Object-oriented programming">Object-oriented programming</a></b></i> at
<div style="margin-left: 10px;"><a href="http://en.wikiversity.org/wiki/Topic:Object-Oriented_Programming" class="extiw" title="v:Topic:Object-Oriented Programming">Topic:Object-Oriented Programming</a></div>
</td>
</tr></table>
<ul>
<li>
<span class="citation book">[<a rel="nofollow" class="external text" href="http://www.linkedin.com/in/mattweisfeld">|Weisfeld, Matt</a>] (2009). <i>The Object-Oriented Thought Process, Third Edition</i>. <a href="http://en.m.wikipedia.org/wiki/Addison-Wesley" title="Addison-Wesley">Addison-Wesley</a>. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-672-33016-4" title="Special:BookSources/0-672-33016-4">0-672-33016-4</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Object-Oriented+Thought+Process%2C+Third+Edition&amp;rft.aulast=Weisfeld&amp;rft.aufirst=Matt&amp;rft.au=Weisfeld%2C%26%2332%3BMatt&amp;rft.date=2009&amp;rft.pub=%5B%5BAddison-Wesley%5D%5D&amp;rft.isbn=0-672-33016-4&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book">Schach, Stephen (2006). <i>Object-Oriented and Classical Software Engineering, Seventh Edition</i>. <a href="http://en.m.wikipedia.org/wiki/McGraw-Hill" title="McGraw-Hill">McGraw-Hill</a>. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-07-319126-4" title="Special:BookSources/0-07-319126-4">0-07-319126-4</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Object-Oriented+and+Classical+Software+Engineering%2C+Seventh+Edition&amp;rft.aulast=Schach&amp;rft.aufirst=Stephen&amp;rft.au=Schach%2C%26%2332%3BStephen&amp;rft.date=2006&amp;rft.pub=%5B%5BMcGraw-Hill%5D%5D&amp;rft.isbn=0-07-319126-4&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Martin_Abadi" title="Martin Abadi" class="mw-redirect">Abadi, Martin</a>; <a href="http://en.m.wikipedia.org/wiki/Luca_Cardelli" title="Luca Cardelli">Luca Cardelli</a> (1998). <i>A Theory of Objects</i>. <a href="http://en.m.wikipedia.org/wiki/Springer_Verlag" title="Springer Verlag" class="mw-redirect">Springer Verlag</a>. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-387-94775-2" title="Special:BookSources/0-387-94775-2">0-387-94775-2</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=A+Theory+of+Objects&amp;rft.aulast=Abadi&amp;rft.aufirst=Martin&amp;rft.au=Abadi%2C%26%2332%3BMartin&amp;rft.date=1998&amp;rft.pub=%5B%5BSpringer+Verlag%5D%5D&amp;rft.isbn=0-387-94775-2&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Harold_Abelson" title="Harold Abelson" class="mw-redirect">Abelson, Harold</a>; <a href="http://en.m.wikipedia.org/wiki/Gerald_Jay_Sussman" title="Gerald Jay Sussman">Gerald Jay Sussman</a>, (1997). <a rel="nofollow" class="external text" href="http://mitpress.mit.edu/sicp/"><i>Structure and Interpretation of Computer Programs</i></a>. <a href="http://en.m.wikipedia.org/wiki/MIT_Press" title="MIT Press">MIT Press</a>. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-262-01153-0" title="Special:BookSources/0-262-01153-0">0-262-01153-0</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://mitpress.mit.edu/sicp/">http://mitpress.mit.edu/sicp/</a></span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Structure+and+Interpretation+of+Computer+Programs&amp;rft.aulast=Abelson&amp;rft.aufirst=Harold&amp;rft.au=Abelson%2C%26%2332%3BHarold&amp;rft.date=1997&amp;rft.pub=%5B%5BMIT+Press%5D%5D&amp;rft.isbn=0-262-01153-0&amp;rft_id=http%3A%2F%2Fmitpress.mit.edu%2Fsicp%2F&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation Journal">Armstrong, Deborah J. (February 2006). <a rel="nofollow" class="external text" href="http://portal.acm.org/citation.cfm?id=1113040">"The Quarks of Object-Oriented Development"</a>. <i>Communications of the ACM</i> <b>49</b> (2): 123–128. <a href="Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1145%2F1113034.1113040">10.1145/1113034.1113040</a>. <a href="http://en.m.wikipedia.org/wiki/International_Standard_Serial_Number" title="International Standard Serial Number">ISSN</a> <a rel="nofollow" class="external text" href="http://www.worldcat.org/issn/0001-0782">0001-0782</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://portal.acm.org/citation.cfm?id=1113040">http://portal.acm.org/citation.cfm?id=1113040</a></span><span class="reference-accessdate">. Retrieved 8 August 2006</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=The+Quarks+of+Object-Oriented+Development&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.aulast=Armstrong&amp;rft.aufirst=Deborah+J.&amp;rft.au=Armstrong%2C%26%2332%3BDeborah+J.&amp;rft.date=February+2006&amp;rft.volume=49&amp;rft.issue=2&amp;rft.pages=123%E2%80%93128&amp;rft_id=info:doi/10.1145%2F1113034.1113040&amp;rft.issn=0001-0782&amp;rft_id=http%3A%2F%2Fportal.acm.org%2Fcitation.cfm%3Fid%3D1113040&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Grady_Booch" title="Grady Booch">Booch, Grady</a> (1997). <i>Object-Oriented Analysis and Design with Applications</i>. <a href="http://en.m.wikipedia.org/wiki/Addison-Wesley" title="Addison-Wesley">Addison-Wesley</a>. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-8053-5340-2" title="Special:BookSources/0-8053-5340-2">0-8053-5340-2</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Object-Oriented+Analysis+and+Design+with+Applications&amp;rft.aulast=Booch&amp;rft.aufirst=Grady&amp;rft.au=Booch%2C%26%2332%3BGrady&amp;rft.date=1997&amp;rft.pub=%5B%5BAddison-Wesley%5D%5D&amp;rft.isbn=0-8053-5340-2&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book">Eeles, Peter; Oliver Sims (1998). <i>Building Business Objects</i>. <a href="http://en.m.wikipedia.org/wiki/John_Wiley_%26_Sons" title="John Wiley &amp; Sons">John Wiley &amp; Sons</a>. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-471-19176-0" title="Special:BookSources/0-471-19176-0">0-471-19176-0</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Building+Business+Objects&amp;rft.aulast=Eeles&amp;rft.aufirst=Peter&amp;rft.au=Eeles%2C%26%2332%3BPeter&amp;rft.date=1998&amp;rft.pub=%5B%5BJohn+Wiley+%26+Sons%5D%5D&amp;rft.isbn=0-471-19176-0&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Erich_Gamma" title="Erich Gamma">Gamma, Erich</a>; <span class="new" title="Richard Helm (page does not exist)">Richard Helm</span>, <a href="http://en.m.wikipedia.org/wiki/Ralph_Johnson_(computer_scientist)" title="Ralph Johnson (computer scientist)">Ralph Johnson</a>, <a href="http://en.m.wikipedia.org/wiki/John_Vlissides" title="John Vlissides">John Vlissides</a> (1995). <i>Design Patterns: Elements of Reusable Object Oriented Software</i>. Addison-Wesley. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-201-63361-2" title="Special:BookSources/0-201-63361-2">0-201-63361-2</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Design+Patterns%3A+Elements+of+Reusable+Object+Oriented+Software&amp;rft.aulast=Gamma&amp;rft.aufirst=Erich&amp;rft.au=Gamma%2C%26%2332%3BErich&amp;rft.date=1995&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-201-63361-2&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Paul_Harmon_(management_author)" title="Paul Harmon (management author)">Harmon, Paul</a>; William Morrissey (1996). <i>The Object Technology Casebook - Lessons from Award-Winning Business Applications</i>. John Wiley &amp; Sons. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-471-14717-6" title="Special:BookSources/0-471-14717-6">0-471-14717-6</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Object+Technology+Casebook+-+Lessons+from+Award-Winning+Business+Applications&amp;rft.aulast=Harmon&amp;rft.aufirst=Paul&amp;rft.au=Harmon%2C%26%2332%3BPaul&amp;rft.date=1996&amp;rft.pub=John+Wiley+%26+Sons&amp;rft.isbn=0-471-14717-6&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Ivar_Jacobson" title="Ivar Jacobson">Jacobson, Ivar</a> (1992). <i>Object-Oriented Software Engineering: A <a href="http://en.m.wikipedia.org/wiki/Use_case" title="Use case">Use Case</a>-Driven Approach</i>. Addison-Wesley. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-201-54435-0" title="Special:BookSources/0-201-54435-0">0-201-54435-0</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Object-Oriented+Software+Engineering%3A+A+%5B%5Buse+case%7CUse+Case%5D%5D-Driven+Approach&amp;rft.aulast=Jacobson&amp;rft.aufirst=Ivar&amp;rft.au=Jacobson%2C%26%2332%3BIvar&amp;rft.date=1992&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-201-54435-0&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Alan_Kay" title="Alan Kay">Kay, Alan</a>. <a rel="nofollow" class="external text" href="http://gagne.homedns.org/%7etgagne/contrib/EarlyHistoryST.html"><i>The Early History of Smalltalk</i></a><span class="printonly">. <a rel="nofollow" class="external free" href="http://gagne.homedns.org/%7etgagne/contrib/EarlyHistoryST.html">http://gagne.homedns.org/%7etgagne/contrib/EarlyHistoryST.html</a></span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Early+History+of+Smalltalk&amp;rft.aulast=Kay&amp;rft.aufirst=Alan&amp;rft.au=Kay%2C%26%2332%3BAlan&amp;rft_id=http%3A%2F%2Fgagne.homedns.org%2F%257etgagne%2Fcontrib%2FEarlyHistoryST.html&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Bertrand_Meyer" title="Bertrand Meyer">Meyer, Bertrand</a> (1997). <i><a href="http://en.m.wikipedia.org/wiki/Object-Oriented_Software_Construction" title="Object-Oriented Software Construction">Object-Oriented Software Construction</a></i>. <a href="Prentice_Hall" title="Prentice Hall">Prentice Hall</a>. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-13-629155-4" title="Special:BookSources/0-13-629155-4">0-13-629155-4</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=%5B%5BObject-Oriented+Software+Construction%5D%5D&amp;rft.aulast=Meyer&amp;rft.aufirst=Bertrand&amp;rft.au=Meyer%2C%26%2332%3BBertrand&amp;rft.date=1997&amp;rft.pub=%5B%5BPrentice+Hall%5D%5D&amp;rft.isbn=0-13-629155-4&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book"><a href="http://en.m.wikipedia.org/wiki/James_Rumbaugh" title="James Rumbaugh">Rumbaugh, James</a>; Michael Blaha, William Premerlani, Frederick Eddy, William Lorensen (1991). <i>Object-Oriented Modeling and Design</i>. Prentice Hall. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-13-629841-9" title="Special:BookSources/0-13-629841-9">0-13-629841-9</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Object-Oriented+Modeling+and+Design&amp;rft.aulast=Rumbaugh&amp;rft.aufirst=James&amp;rft.au=Rumbaugh%2C%26%2332%3BJames&amp;rft.date=1991&amp;rft.pub=Prentice+Hall&amp;rft.isbn=0-13-629841-9&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book">Taylor, David A. (1992). <i>Object-Oriented Information Systems - Planning and Implementation</i>. John Wiley &amp; Sons. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-471-54364-0" title="Special:BookSources/0-471-54364-0">0-471-54364-0</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Object-Oriented+Information+Systems+-+Planning+and+Implementation&amp;rft.aulast=Taylor&amp;rft.aufirst=David+A.&amp;rft.au=Taylor%2C%26%2332%3BDavid+A.&amp;rft.date=1992&amp;rft.pub=John+Wiley+%26+Sons&amp;rft.isbn=0-471-54364-0&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
<li>
<span class="citation book">Schreiner, Axel-Tobias (1993). <i>Object oriented programming with ANSI-C</i>. Hanser. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/3-446-17426-5" title="Special:BookSources/3-446-17426-5">3-446-17426-5</a>. <a href="http://en.m.wikipedia.org/wiki/Handle_System" title="Handle System">hdl</a>:<a rel="nofollow" class="external text" href="http://hdl.handle.net/1850%2F8544">1850/8544</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Object+oriented+programming+with+ANSI-C&amp;rft.aulast=Schreiner&amp;rft.aufirst=Axel-Tobias&amp;rft.au=Schreiner%2C%26%2332%3BAxel-Tobias&amp;rft.date=1993&amp;rft.pub=Hanser&amp;rft.isbn=3-446-17426-5&amp;rfr_id=info:sid/en.wikipedia.org:Object-oriented_programming"><span style="display: none;"> </span></span>
</li>
</ul>
<h2> <span class="mw-headline" id="External_links">External links</span>
</h2>
<table class="metadata mbox-small plainlinks" style="border:1px solid #aaa; background-color:#f9f9f9;"><tr>
<td class="mbox-image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/60px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/80px-Wikibooks-logo-en-noslogan.svg.png 2x"></td>
<td class="mbox-text plainlist" style="">Wikibooks has a book on the topic of: <i><b><a href="http://en.wikibooks.org/wiki/Object_Oriented_Programming" class="extiw" title="wikibooks:Object Oriented Programming">Object Oriented Programming</a></b></i>
</td>
</tr></table>
<ul>
<li>
<a rel="nofollow" class="external text" href="http://www.dmoz.org/Computers/Programming/Methodologies/Object-Oriented/">Object-oriented programming</a> at the <a href="http://en.m.wikipedia.org/wiki/Open_Directory_Project" title="Open Directory Project">Open Directory Project</a>
</li>
<li>
<a rel="nofollow" class="external text" href="http://www.polberger.se/components/read/demystifying-dynamic-dispatch-wikipedia.html">Chapter on implementing OOP in the programming language C</a> by David Polberger</li>
<li><a rel="nofollow" class="external text" href="http://software.intel.com/en-us/blogs/2008/08/22/flaws-of-object-oriented-modeling/">Discussion about the flaws of OOD</a></li>
<li><a rel="nofollow" class="external text" href="http://java.sun.com/docs/books/tutorial/java/concepts/index.html">OOP Concepts (Java Tutorials)</a></li>
<li><a rel="nofollow" class="external text" href="http://software.intel.com/en-us/blogs/2011/05/18/the-first-thing-we-do-lets-kill-all-the-object-oriented-programming/">Intel blog - killing OOP</a></li>
</ul>
<table cellspacing="0" class="navbox" style="border-spacing:0;;"><tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;;">
<tr>
<th scope="col" style=";" class="navbox-title" colspan="2">
<div class="noprint plainlinks hlist navbar mini" style="">
<ul>
<li class="nv-view"><a href="http://en.m.wikipedia.org/wiki/Template:Types_of_programming_languages" title="Template:Types of programming languages"><span title="View this template" style=";;background:none transparent;border:none;">v</span></a></li>
<li class="nv-talk"><a href="http://en.m.wikipedia.org/wiki/Template_talk:Types_of_programming_languages" title="Template talk:Types of programming languages"><span title="Discuss this template" style=";;background:none transparent;border:none;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Types_of_programming_languages&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;">e</span></a></li>
</ul>
</div>
<div class="" style="font-size:110%;"><a href="Programming_paradigm" title="Programming paradigm">Types of programming languages</a></div>
</th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td colspan="2" style="width:100%;padding:0px;;;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Array_programming" title="Array programming">Array</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Aspect-oriented_programming" title="Aspect-oriented programming">Aspect-oriented</a></li>
<li><a href="Assembly_language" title="Assembly language">Assembly</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Class-based_programming" title="Class-based programming">Class-based</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Compiled_language" title="Compiled language">Compiled</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Concatenative_programming_language" title="Concatenative programming language">Concatenative</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Concurrent_computing" title="Concurrent computing">Concurrent</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Data-structured_language" title="Data-structured language">Data-structured</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Dataflow_programming" title="Dataflow programming">Dataflow</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Declarative_programming" title="Declarative programming">Declarative</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Domain-specific_language" title="Domain-specific language">Domain-specific</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Dynamic_programming_language" title="Dynamic programming language">Dynamic</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Esoteric_programming_language" title="Esoteric programming language">Esoteric</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Event-driven_programming" title="Event-driven programming">Event-driven</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Extensible_programming" title="Extensible programming">Extensible</a></li>
<li><a href="Functional_programming" title="Functional programming">Functional</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/High-level_programming_language" title="High-level programming language">High-level</a></li>
<li><a href="Imperative_programming" title="Imperative programming">Imperative</a></li>
<li><a href="Interpreted_language" title="Interpreted language">Interpreted</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Logic_programming" title="Logic programming">Logic</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Low-level_programming_language" title="Low-level programming language">Low-level</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Machine_code" title="Machine code">Machine</a></li>
<li><a href="Macro_(computer_science)" title="Macro (computer science)">Macro</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Metaprogramming" title="Metaprogramming">Metaprogramming</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Multi-paradigm_programming_language" title="Multi-paradigm programming language" class="mw-redirect">Multi-paradigm</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Non-English-based_programming_languages" title="Non-English-based programming languages">Non-English-based</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Object-based_language" title="Object-based language">Object-based</a></li>
<li><strong class="selflink">Object-oriented</strong></li>
<li><a href="http://en.m.wikipedia.org/wiki/Off-side_rule" title="Off-side rule">Off-side rule</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Pipeline_programming" title="Pipeline programming">Pipeline</a></li>
<li><a href="Procedural_programming" title="Procedural programming">Procedural</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Prototype-based_programming" title="Prototype-based programming">Prototype-based</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Reflection_(computer_programming)" title="Reflection (computer programming)">Reflective</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Rule-based_system" title="Rule-based system">Rule-based</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Scripting_language" title="Scripting language">Scripting</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Synchronous_programming_language" title="Synchronous programming language">Synchronous</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Very_high-level_programming_language" title="Very high-level programming language">Very high-level</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Visual_programming_language" title="Visual programming language">Visual</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr></table>
<table cellspacing="0" class="navbox" style="border-spacing:0;;"><tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks hlist collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;;">
<tr>
<th scope="col" style=";" class="navbox-title" colspan="2">
<div class="noprint plainlinks hlist navbar mini" style="">
<ul>
<li class="nv-view"><a href="http://en.m.wikipedia.org/wiki/Template:Software_engineering" title="Template:Software engineering"><span title="View this template" style=";;background:none transparent;border:none;">v</span></a></li>
<li class="nv-talk"><a href="http://en.m.wikipedia.org/wiki/Template_talk:Software_engineering" title="Template talk:Software engineering"><span title="Discuss this template" style=";;background:none transparent;border:none;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Software_engineering&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;">e</span></a></li>
</ul>
</div>
<div class="" style="font-size:110%;"><a href="http://en.m.wikipedia.org/wiki/Software_engineering" title="Software engineering">Software engineering</a></div>
</th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Fields</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Requirements_analysis" title="Requirements analysis">Requirements analysis</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Systems_analysis" title="Systems analysis">Systems analysis</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Software_design" title="Software design">Software design</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Computer_programming" title="Computer programming">Computer programming</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Formal_methods" title="Formal methods">Formal methods</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Software_testing" title="Software testing">Software testing</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Software_deployment" title="Software deployment">Software deployment</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Software_maintenance" title="Software maintenance">Software maintenance</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Concepts</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Data_modeling" title="Data modeling">Data modeling</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Enterprise_architecture" title="Enterprise architecture">Enterprise architecture</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Functional_specification" title="Functional specification">Functional specification</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Modeling_language" title="Modeling language">Modeling language</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Orthogonality_(programming)" title="Orthogonality (programming)">Orthogonality</a></li>
<li><a href="Programming_paradigm" title="Programming paradigm">Programming paradigm</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Software" title="Software">Software</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Software_architecture" title="Software architecture">Software architecture</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Software_development_methodology" title="Software development methodology">Software development methodology</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Software_development_process" title="Software development process">Software development process</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Software_quality" title="Software quality">Software quality</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Software_quality_assurance" title="Software quality assurance">Software quality assurance</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Software_archaeology" title="Software archaeology">Software archaeology</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Structured_analysis" title="Structured analysis">Structured analysis</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Orientations</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Agile_software_development" title="Agile software development">Agile</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Aspect-oriented_software_development" title="Aspect-oriented software development">Aspect-oriented</a></li>
<li><strong class="selflink">Object orientation</strong></li>
<li><a href="http://en.m.wikipedia.org/wiki/Ontology_(information_science)" title="Ontology (information science)">Ontology</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Service-oriented_architecture" title="Service-oriented architecture">Service orientation</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Systems_development_life-cycle" title="Systems development life-cycle">SDLC</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Models</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em"></div>
<table cellspacing="0" class="nowraplinks navbox-subgroup" style="border-spacing:0;;;;">
<tr>
<th scope="row" class="navbox-group" style=";padding-left:0em;padding-right:0em;;">
<div style="padding:0em 0.75em;">Development models</div>
</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Agile_software_development" title="Agile software development">Agile</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Iterative_and_incremental_development" title="Iterative and incremental development">Iterative model</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/IBM_Rational_Unified_Process" title="IBM Rational Unified Process">RUP</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Enterprise_Unified_Process" title="Enterprise Unified Process">EUP</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Scrum_(development)" title="Scrum (development)">Scrum</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Spiral_model" title="Spiral model">Spiral model</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Waterfall_model" title="Waterfall model">Waterfall model</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Extreme_Programming" title="Extreme Programming" class="mw-redirect">XP</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/V-Model_(software_development)" title="V-Model (software development)">V-Model</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Incremental_build_model" title="Incremental build model">Incremental model</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Software_prototyping" title="Software prototyping">Prototype model</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";padding-left:0em;padding-right:0em;;">
<div style="padding:0em 0.75em;">Other models</div>
</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/ISO/IEC_15504" title="ISO/IEC 15504">Automotive SPICE</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Capability_Maturity_Model_Integration" title="Capability Maturity Model Integration">CMMI</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Data_model" title="Data model">Data model</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Function_model" title="Function model">Function model</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Information_model" title="Information model">Information model</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Metamodeling" title="Metamodeling">Metamodeling</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Object_model" title="Object model">Object model</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Systems_modeling" title="Systems modeling">Systems model</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/View_model" title="View model">View model</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";padding-left:0em;padding-right:0em;;">
<div style="padding:0em 0.75em;">Modeling languages</div>
</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/IDEF" title="IDEF">IDEF</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Unified_Modeling_Language" title="Unified Modeling Language">UML</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Systems_Modeling_Language" title="Systems Modeling Language">SysML</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Software<br>
engineers</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Kent_Beck" title="Kent Beck">Kent Beck</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Grady_Booch" title="Grady Booch">Grady Booch</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Fred_Brooks" title="Fred Brooks">Fred Brooks</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Barry_Boehm" title="Barry Boehm">Barry Boehm</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Peter_Chen" title="Peter Chen">Peter Chen</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Ward_Cunningham" title="Ward Cunningham">Ward Cunningham</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Ole-Johan_Dahl" title="Ole-Johan Dahl">Ole-Johan Dahl</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Tom_DeMarco" title="Tom DeMarco">Tom DeMarco</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Martin_Fowler" title="Martin Fowler">Martin Fowler</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Tony_Hoare" title="Tony Hoare">C. A. R. Hoare</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Watts_Humphrey" title="Watts Humphrey">Watts Humphrey</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Michael_A._Jackson" title="Michael A. Jackson">Michael A. Jackson</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Ivar_Jacobson" title="Ivar Jacobson">Ivar Jacobson</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/James_Martin_(author)" title="James Martin (author)">James Martin</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Bertrand_Meyer" title="Bertrand Meyer">Bertrand Meyer</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/David_Parnas" title="David Parnas">David Parnas</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Winston_W._Royce" title="Winston W. Royce">Winston W. Royce</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/James_Rumbaugh" title="James Rumbaugh">James Rumbaugh</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Edward_Yourdon" title="Edward Yourdon">Edward Yourdon</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Victor_Basili" title="Victor Basili">Victor Basili</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;">Related fields</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Computer_science" title="Computer science">Computer science</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Computer_engineering" title="Computer engineering">Computer engineering</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Enterprise_engineering" title="Enterprise engineering">Enterprise engineering</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/History_of_software_engineering" title="History of software engineering">History</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Management" title="Management">Management</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Project_management" title="Project management">Project management</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Quality_management" title="Quality management">Quality management</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Ergonomics" title="Ergonomics" class="mw-redirect">Software ergonomics</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Systems_engineering" title="Systems engineering">Systems engineering</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-abovebelow" style=";" colspan="2">
<div>
<ul>
<li>
<img alt="Category" src="http://upload.wikimedia.org/wikipedia/en/thumb/4/48/Folder_Hexagonal_Icon.svg/16px-Folder_Hexagonal_Icon.svg.png" width="16" height="14" srcset="//upload.wikimedia.org/wikipedia/en/thumb/4/48/Folder_Hexagonal_Icon.svg/24px-Folder_Hexagonal_Icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/4/48/Folder_Hexagonal_Icon.svg/32px-Folder_Hexagonal_Icon.svg.png 2x"><a href="http://en.m.wikipedia.org/wiki/Category:Software_engineering" title="Category:Software engineering"><b>Category</b></a>
</li>
<li>
<img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/12px-Commons-logo.svg.png" width="12" height="16" srcset="//upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/18px-Commons-logo.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/24px-Commons-logo.svg.png 2x"> <a href="http://commons.wikimedia.org/wiki/Software_engineering" class="extiw" title="commons:Software engineering"><b>Commons</b></a>
</li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr></table>

						<div class="section" id="mw-mf-language-section">
				<h2 id="section_language" class="section_heading">Read in another language</h2>
				<div id="content_language" class="content_block">
					<p>This article is available in 62 languages</p>
					<ul id="mw-mf-language-selection"><li><a href="http://af.m.wikipedia.org/wiki/Objekgeori%C3%ABnteerde_programmering" lang="af" hreflang="af">Afrikaans</a></li><li><a href="http://ar.m.wikipedia.org/wiki/%D8%A8%D8%B1%D9%85%D8%AC%D8%A9_%D9%83%D8%A7%D8%A6%D9%86%D9%8A%D8%A9_%D8%A7%D9%84%D8%AA%D9%88%D8%AC%D9%87" lang="ar" hreflang="ar">العربية</a></li><li><a href="http://az.m.wikipedia.org/wiki/Obyekt_y%C3%B6n%C3%BCml%C3%BC_proqramla%C5%9Fd%C4%B1rma" lang="az" hreflang="az">azərbaycanca</a></li><li><a href="http://bn.m.wikipedia.org/wiki/%E0%A6%85%E0%A6%AC%E0%A6%9C%E0%A7%87%E0%A6%95%E0%A7%8D%E0%A6%9F_%E0%A6%93%E0%A6%B0%E0%A6%BF%E0%A6%AF%E0%A6%BC%E0%A7%87%E0%A6%A8%E0%A7%8D%E0%A6%9F%E0%A7%87%E0%A6%A1_%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82" lang="bn" hreflang="bn">বাংলা</a></li><li><a href="http://be.m.wikipedia.org/wiki/%D0%90%D0%B1%27%D0%B5%D0%BA%D1%82%D0%BD%D0%B0-%D0%B0%D1%80%D1%8B%D0%B5%D0%BD%D1%82%D0%B0%D0%B2%D0%B0%D0%BD%D0%B0%D0%B5_%D0%BF%D1%80%D0%B0%D0%B3%D1%80%D0%B0%D0%BC%D0%B0%D0%B2%D0%B0%D0%BD%D0%BD%D0%B5" lang="be" hreflang="be">беларуская</a></li><li><a href="http://be-x-old.m.wikipedia.org/wiki/%D0%90%D0%B1%E2%80%99%D0%B5%D0%BA%D1%82%D0%BD%D0%B0-%D0%B0%D1%80%D1%8B%D0%B5%D0%BD%D1%82%D0%B0%D0%B2%D0%B0%D0%BD%D0%B0%D0%B5_%D0%BF%D1%80%D0%B0%D0%B3%D1%80%D0%B0%D0%BC%D0%B0%D0%B2%D0%B0%D0%BD%D1%8C%D0%BD%D0%B5" lang="be-x-old" hreflang="be-x-old">беларуская (тарашкевіца)‎</a></li><li><a href="http://bg.m.wikipedia.org/wiki/%D0%9E%D0%B1%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%B0%D0%BD%D0%BE_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8%D1%80%D0%B0%D0%BD%D0%B5" lang="bg" hreflang="bg">български</a></li><li><a href="http://bs.m.wikipedia.org/wiki/Objektno_orijentisano_programiranje" lang="bs" hreflang="bs">bosanski</a></li><li><a href="http://ca.m.wikipedia.org/wiki/Programaci%C3%B3_orientada_a_objectes" lang="ca" hreflang="ca">català</a></li><li><a href="http://cs.m.wikipedia.org/wiki/Objektov%C4%9B_orientovan%C3%A9_programov%C3%A1n%C3%AD" lang="cs" hreflang="cs">česky</a></li><li><a href="http://da.m.wikipedia.org/wiki/Objektorienteret_programmering" lang="da" hreflang="da">dansk</a></li><li><a href="http://de.m.wikipedia.org/wiki/Objektorientierte_Programmierung" lang="de" hreflang="de">Deutsch</a></li><li><a href="http://et.m.wikipedia.org/wiki/Objektorienteeritud_programmeerimine" lang="et" hreflang="et">eesti</a></li><li><a href="http://el.m.wikipedia.org/wiki/%CE%91%CE%BD%CF%84%CE%B9%CE%BA%CE%B5%CE%B9%CE%BC%CE%B5%CE%BD%CE%BF%CF%83%CF%84%CF%81%CE%B5%CF%86%CE%AE%CF%82_%CF%80%CF%81%CE%BF%CE%B3%CF%81%CE%B1%CE%BC%CE%BC%CE%B1%CF%84%CE%B9%CF%83%CE%BC%CF%8C%CF%82" lang="el" hreflang="el">Ελληνικά</a></li><li><a href="http://es.m.wikipedia.org/wiki/Programaci%C3%B3n_orientada_a_objetos" lang="es" hreflang="es">español</a></li><li><a href="http://eo.m.wikipedia.org/wiki/Objektema_programado" lang="eo" hreflang="eo">Esperanto</a></li><li><a href="http://eu.m.wikipedia.org/wiki/Objektuei_orientatutako_programazio" lang="eu" hreflang="eu">euskara</a></li><li><a href="http://fa.m.wikipedia.org/wiki/%D8%A8%D8%B1%D9%86%D8%A7%D9%85%D9%87%E2%80%8C%D9%86%D9%88%DB%8C%D8%B3%DB%8C_%D8%B4%D8%A6%E2%80%8C%DA%AF%D8%B1%D8%A7" lang="fa" hreflang="fa">فارسی</a></li><li><a href="http://fr.m.wikipedia.org/wiki/Programmation_orient%C3%A9e_objet" lang="fr" hreflang="fr">français</a></li><li><a href="http://gl.m.wikipedia.org/wiki/Programaci%C3%B3n_orientada_a_obxectos" lang="gl" hreflang="gl">galego</a></li><li><a href="http://ko.m.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_%EC%A7%80%ED%96%A5_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D" lang="ko" hreflang="ko">한국어</a></li><li><a href="http://hr.m.wikipedia.org/wiki/Objektno_orijentirano_programiranje" lang="hr" hreflang="hr">hrvatski</a></li><li><a href="http://io.m.wikipedia.org/wiki/Objekt-orientizita_programifo" lang="io" hreflang="io">Ido</a></li><li><a href="http://id.m.wikipedia.org/wiki/Pemrograman_berorientasi_objek" lang="id" hreflang="id">Bahasa Indonesia</a></li><li><a href="http://is.m.wikipedia.org/wiki/Hlutbundin_forritun" lang="is" hreflang="is">íslenska</a></li><li><a href="http://it.m.wikipedia.org/wiki/Programmazione_orientata_agli_oggetti" lang="it" hreflang="it">italiano</a></li><li><a href="http://he.m.wikipedia.org/wiki/%D7%AA%D7%9B%D7%A0%D7%95%D7%AA_%D7%9E%D7%95%D7%A0%D7%97%D7%94-%D7%A2%D7%A6%D7%9E%D7%99%D7%9D" lang="he" hreflang="he">עברית</a></li><li><a href="http://ka.m.wikipedia.org/wiki/%E1%83%9D%E1%83%91%E1%83%98%E1%83%94%E1%83%A5%E1%83%A2%E1%83%96%E1%83%94_%E1%83%9D%E1%83%A0%E1%83%98%E1%83%94%E1%83%9C%E1%83%A2%E1%83%98%E1%83%A0%E1%83%94%E1%83%91%E1%83%A3%E1%83%9A%E1%83%98_%E1%83%9E%E1%83%A0%E1%83%9D%E1%83%92%E1%83%A0%E1%83%90%E1%83%9B%E1%83%98%E1%83%A0%E1%83%94%E1%83%91%E1%83%90" lang="ka" hreflang="ka">ქართული</a></li><li><a href="http://kk.m.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%96%D0%B3%D0%B5-%D0%B1%D0%B0%D2%93%D1%8B%D1%82%D1%82%D0%B0%D0%BB%D2%93%D0%B0%D0%BD_%D0%B1%D0%B0%D2%93%D0%B4%D0%B0%D1%80%D0%BB%D0%B0%D0%BC%D0%B0%D0%BB%D0%B0%D1%83" lang="kk" hreflang="kk">қазақша</a></li><li><a href="http://ky.m.wikipedia.org/wiki/%D0%9E%D0%B1%D0%B6%D0%B5%D0%BA%D1%82%D0%BA%D0%B5_%D0%B1%D0%B0%D0%B3%D1%8B%D1%82%D1%82%D0%B0%D0%BB%D0%B3%D0%B0%D0%BD_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0%D0%BB%D0%BE%D0%BE" lang="ky" hreflang="ky">Кыргызча</a></li><li><a href="http://lv.m.wikipedia.org/wiki/Objektorient%C4%93t%C4%81_programm%C4%93%C5%A1ana" lang="lv" hreflang="lv">latviešu</a></li><li><a href="http://lt.m.wikipedia.org/wiki/Objektinis_programavimas" lang="lt" hreflang="lt">lietuvių</a></li><li><a href="http://hu.m.wikipedia.org/wiki/Objektumorient%C3%A1lt_programoz%C3%A1s" lang="hu" hreflang="hu">magyar</a></li><li><a href="http://mk.m.wikipedia.org/wiki/%D0%9E%D0%B1%D1%98%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%B0%D0%BD%D0%BE_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8%D1%80%D0%B0%D1%9A%D0%B5" lang="mk" hreflang="mk">македонски</a></li><li><a href="http://ms.m.wikipedia.org/wiki/Pengaturcaraan_berorientasi_objek" lang="ms" hreflang="ms">Bahasa Melayu</a></li><li><a href="http://mn.m.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82_%D1%85%D0%B0%D0%BD%D0%B4%D0%B0%D0%BB%D1%82%D0%B0%D1%82_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%87%D0%BB%D0%B0%D0%BB" lang="mn" hreflang="mn">монгол</a></li><li><a href="http://my.m.wikipedia.org/wiki/%E1%80%A1%E1%80%B1%E1%80%AC%E1%80%B7%E1%80%97%E1%80%BA%E1%80%82%E1%80%BB%E1%80%80%E1%80%BA_%E1%80%A1%E1%80%AD%E1%80%AF%E1%80%9B%E1%80%AE%E1%80%9A%E1%80%84%E1%80%B7%E1%80%BA%E1%80%90%E1%80%80%E1%80%BA_%E1%80%95%E1%80%9B%E1%80%AD%E1%80%AF%E1%80%82%E1%80%9B%E1%80%99%E1%80%BA%E1%80%B8%E1%80%99%E1%80%84%E1%80%BA%E1%80%B8" lang="my" hreflang="my">မြန်မာဘာသာ</a></li><li><a href="http://nl.m.wikipedia.org/wiki/Objectgeori%C3%ABnteerd" lang="nl" hreflang="nl">Nederlands</a></li><li><a href="http://ja.m.wikipedia.org/wiki/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91" lang="ja" hreflang="ja">日本語</a></li><li><a href="http://no.m.wikipedia.org/wiki/Objektorientert_programmering" lang="no" hreflang="no">norsk (bokmål)‎</a></li><li><a href="http://nn.m.wikipedia.org/wiki/Objektorientert_programmering" lang="nn" hreflang="nn">norsk (nynorsk)‎</a></li><li><a href="http://pl.m.wikipedia.org/wiki/Programowanie_obiektowe" lang="pl" hreflang="pl">polski</a></li><li><a href="http://pt.m.wikipedia.org/wiki/Orienta%C3%A7%C3%A3o_a_objetos" lang="pt" hreflang="pt">português</a></li><li><a href="http://ro.m.wikipedia.org/wiki/Programare_orientat%C4%83_pe_obiecte" lang="ro" hreflang="ro">română</a></li><li><a href="http://rue.m.wikipedia.org/wiki/%D0%9E%D0%B1%D1%94%D0%BA%D1%82%D0%BE%D0%B2%D0%BE_%D0%BE%D1%80%D1%8C%D1%94%D0%BD%D1%82%D0%BE%D0%B2%D0%B0%D0%BD%D0%B5_%D0%BF%D1%80%D0%BE%D2%91%D1%80%D0%B0%D0%BC%D0%BE%D0%B2%D0%B0%D0%BD%D1%8F" lang="rue" hreflang="rue">русиньскый</a></li><li><a href="http://ru.m.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5" lang="ru" hreflang="ru">русский</a></li><li><a href="http://sq.m.wikipedia.org/wiki/Programimi_i_orientuar_n%C3%AB_objekte" lang="sq" hreflang="sq">shqip</a></li><li><a href="http://scn.m.wikipedia.org/wiki/Prugrammazzioni_urientata_all%27uggetta" lang="scn" hreflang="scn">sicilianu</a></li><li><a href="http://simple.m.wikipedia.org/wiki/Object-oriented_programming" lang="simple" hreflang="simple">Simple English</a></li><li><a href="http://sk.m.wikipedia.org/wiki/Objektov%C3%A9_programovanie" lang="sk" hreflang="sk">slovenčina</a></li><li><a href="http://sr.m.wikipedia.org/wiki/%D0%9E%D0%B1%D1%98%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D1%98%D0%B5%D0%BD%D1%82%D0%B8%D1%81%D0%B0%D0%BD%D0%BE_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8%D1%80%D0%B0%D1%9A%D0%B5" lang="sr" hreflang="sr">српски / srpski</a></li><li><a href="http://sh.m.wikipedia.org/wiki/Objektno_orijentisano_programiranje" lang="sh" hreflang="sh">srpskohrvatski / српскохрватски</a></li><li><a href="http://fi.m.wikipedia.org/wiki/Olio-ohjelmointi" lang="fi" hreflang="fi">suomi</a></li><li><a href="http://sv.m.wikipedia.org/wiki/Objektorienterad_programmering" lang="sv" hreflang="sv">svenska</a></li><li><a href="http://ta.m.wikipedia.org/wiki/%E0%AE%AA%E0%AF%8A%E0%AE%B0%E0%AF%81%E0%AE%B3%E0%AF%8D_%E0%AE%A8%E0%AF%8B%E0%AE%95%E0%AF%8D%E0%AE%95%E0%AF%81_%E0%AE%A8%E0%AE%BF%E0%AE%B0%E0%AE%B2%E0%AE%BE%E0%AE%95%E0%AF%8D%E0%AE%95%E0%AE%AE%E0%AF%8D" lang="ta" hreflang="ta">தமிழ்</a></li><li><a href="http://th.m.wikipedia.org/wiki/%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B9%80%E0%B8%82%E0%B8%B5%E0%B8%A2%E0%B8%99%E0%B9%82%E0%B8%9B%E0%B8%A3%E0%B9%81%E0%B8%81%E0%B8%A3%E0%B8%A1%E0%B9%80%E0%B8%8A%E0%B8%B4%E0%B8%87%E0%B8%A7%E0%B8%B1%E0%B8%95%E0%B8%96%E0%B8%B8" lang="th" hreflang="th">ไทย</a></li><li><a href="http://tr.m.wikipedia.org/wiki/Nesne_Y%C3%B6nelimli_Programlama" lang="tr" hreflang="tr">Türkçe</a></li><li><a href="http://uk.m.wikipedia.org/wiki/%D0%9E%D0%B1%27%D1%94%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D1%96%D1%94%D0%BD%D1%82%D0%BE%D0%B2%D0%B0%D0%BD%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F" lang="uk" hreflang="uk">українська</a></li><li><a href="http://ur.m.wikipedia.org/wiki/%D8%A8%D8%B1%D9%85%D8%AC%DB%81_%D8%B4%D8%A6%DB%92_%D8%A7%D9%84%D8%AA%D9%88%D8%AC%DB%81" lang="ur" hreflang="ur">اردو</a></li><li><a href="http://vi.m.wikipedia.org/wiki/L%E1%BA%ADp_tr%C3%ACnh_h%C6%B0%E1%BB%9Bng_%C4%91%E1%BB%91i_t%C6%B0%E1%BB%A3ng" lang="vi" hreflang="vi">Tiếng Việt</a></li><li><a href="http://wuu.m.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BC%8F%E7%BC%96%E5%88%B6" lang="wuu" hreflang="wuu">吴语</a></li><li><a href="http://zh.m.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1" lang="zh" hreflang="zh">中文</a></li></ul>
				</div>
			</div>			</div><!-- close #content_wrapper -->
			<div id="footer">
			<h2 class="section_heading" id="section_footer">
		<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/logo-copyright-en.png" class="license" alt="Wikipedia ®" />	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=history">contributors</a> like you<br>
				Content available under <a href="Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>				<span>| <a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span>
			</li>
		</ul>
		<ul class="links">
						<li>
			<a href='http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Object-oriented+programming&amp;feedbacksource=MobileFrontend'>
				Contact Wikipedia			</a>
			</li><li>
						<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div><!-- close footer.div / #content_footer -->
	</div><!-- close #footer -->
					</div><!-- close #mw-mf-page-center -->
		</div><!-- close #mw-mf-viewport -->
		
					</body>
	</html>