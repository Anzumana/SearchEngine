<!doctype html>
	<html lang="en" dir="ltr" class="">
	<head>
		<title>Assignment (computer science) - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="robots" content="noindex,nofollow"/>		<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile%7Cmobile.production-only%2Cproduction-jquery%7Cmobile.device.default&amp;only=styles&amp;skin=mobile&amp;version=1352163471&amp;*" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=mobile.site&amp;only=styles&amp;skin=mobile&amp;*" />		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png" />		<script type="text/javascript">
			var _mwStart = +new Date;
			window._evq = window._evq || [];
			if ( typeof console === 'undefined' ) {
				console = { log: function() {} };
			}
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"mobile-frontend-watchlist-add":"Added $1 to your watchlist","mobile-frontend-watchlist-removed":"Removed $1 from your watchlist","mobile-frontend-watchlist-view":"View your watchlist","mobile-frontend-ajax-random-heading":"Locating knowledge...","mobile-frontend-ajax-random-quote":"Intellectual growth should commence at birth and cease only at death","mobile-frontend-ajax-random-quote-author":"Albert Einstein","mobile-frontend-ajax-random-question":"Read this article?","mobile-frontend-ajax-random-yes":"Yes","mobile-frontend-ajax-random-retry":"Try again","mobile-frontend-ajax-page-loading":"Loading $1","mobile-frontend-page-saving":"Saving $1","mobile-frontend-ajax-page-error":"Whoops! Something went wrong there. Please try refreshing your browser window.","mobile-frontend-meta-data-issues":"This article has some issues","mobile-frontend-meta-data-issues-header":"Issues","expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-footer":"<a href="http://en.m.wikipedia.org/wiki/\&quot;\/wiki\/Special:MobileOptions\/Language\&quot;">Note: This article may not be written in your preferred language. You can see which languages Wikipedia supports by clicking here.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"action":"","authenticated":false,"scriptPath":"\/w","shim":"\/\/bits.wikimedia.org\/static-1.21wmf3\/extensions\/MobileFrontend\/stylesheets\/common\/images\/blank.gif","pageUrl":"\/wiki\/$1","beta":null,"title":"Assignment (computer science)","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			function _mwLogEvent( data, additionalInformation ) {
				var timestamp = + new Date;
				var ev = { event_id: 'mobile', delta: timestamp - _mwStart, data: data, beta: mwMobileFrontendConfig.settings.beta,
					session: _mwStart, page: mwMobileFrontendConfig.settings.title, info: additionalInformation || '' };
				_evq.push( ev );
				console.log( typeof JSON === 'undefined' ? ev : JSON.stringify( ev ) );
			}
		</script>
				<link rel="canonical" href="http://en.wikipedia.org/wiki/Assignment_(computer_science)" >
	</head>
	<body class="mobile live">
				<div id="mw-mf-viewport">
		<div id="mw-mf-page-left">
		<div id='mw-mf-content-left'>
		<ul id="mw-mf-menu-main">
			<li class='icon'><a href="Main_Page"
				title="Home">
				Home</a></li>
			<li class='icon2'><a href="Special:Random#mw-mf-page-left" id="randomButton"
				title="Random"
				class="button">Random</a></li>
						<li class='icon5'>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions&amp;returnto=Assignment+%28computer+science%29"
					title="Settings">
				Settings				</a>
			</li>
					</ul>
		</div>
		</div>
		<div id='mw-mf-page-center'>
									<div id="mw-mf-header">
		<a title="Open main menu" href="Special:MobileMenu#mw-mf-page-left" id="mw-mf-main-menu-button">				<img alt="menu"
				src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif">
		</a>			<form id="mw-mf-searchForm" action="http://en.m.wikipedia.org/w/index.php" class="search_bar" method="get">
			<input type="hidden" value="Special:Search" name="title" />
			<div id="mw-mf-sq" class="divclearable">
				<input type="search" name="search" id="mw-mf-search" size="22" value="" autocomplete="off" maxlength="1024" class="search"
					placeholder="Search Wikipedia"
					/>
				<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear"/>
				<input class='searchSubmit' type="submit" value="Go">
			</div>
		</form>
	</div>
	<div id="results"></div>
		<div class='show ' id='content_wrapper'>
						<h1 id="firstHeading">Assignment (computer science)</h1>			
<p>In <a href="http://en.m.wikipedia.org/wiki/Computer_programming" title="Computer programming">computer programming</a>, an <b>assignment statement</b> sets or re-sets the <a href="http://en.m.wikipedia.org/wiki/Value_(computer_science)" title="Value (computer science)">value</a> stored in the storage location(s) denoted by a <a href="Variable_(programming)" title="Variable (programming)" class="mw-redirect">variable</a> <a href="http://en.m.wikipedia.org/wiki/Name" title="Name">name</a>. In most <a href="Imperative_programming" title="Imperative programming">imperative</a> <a href="http://en.m.wikipedia.org/wiki/Computer" title="Computer">computer</a> <a href="Programming_language" title="Programming language">programming languages</a>, assignment statements are one of the basic <a href="Statement_(programming)" title="Statement (programming)" class="mw-redirect">statements</a>. Common notations for the assignment <a href="Operator_(programming)" title="Operator (programming)" class="mw-redirect">operator</a> are <code>=</code> and <code>:=</code>.<sup id="cite_ref-weisskop_0-0" class="reference"><a href="Assignment_(computer_science)#cite_note-weisskop-0"><span>[</span>1<span>]</span></a></sup></p>
<p>Assignment statements typically allow for the same variable to contain different values at different times during <a href="http://en.m.wikipedia.org/wiki/Computer_program" title="Computer program">program</a> execution. Thus, languages featuring destructive assignment rarely enforce <a href="http://en.m.wikipedia.org/wiki/Referential_transparency_(computer_science)" title="Referential transparency (computer science)">referential transparency</a>, which requires a procedure to return the same results for a given set of inputs at any point in time.</p>
<h2> <span class="mw-headline" id="Semantics">Semantics</span>
</h2>
<p>An assignment operation is a process in <a href="Imperative_programming" title="Imperative programming">imperative programming</a> in which different values are associated with a particular variable name as time passes.<sup id="cite_ref-2CS24_1-0" class="reference"><a href="Assignment_(computer_science)#cite_note-2CS24-1"><span>[</span>2<span>]</span></a></sup> The program, in such model, operates by changing its state using successive assignment statements.<sup id="cite_ref-weisskop_0-1" class="reference"><a href="Assignment_(computer_science)#cite_note-weisskop-0"><span>[</span>1<span>]</span></a></sup><sup id="cite_ref-Flaig2008_2-0" class="reference"><a href="Assignment_(computer_science)#cite_note-Flaig2008-2"><span>[</span>3<span>]</span></a></sup> Primitives of imperative programming languages rely on assignment to do <a href="http://en.m.wikipedia.org/wiki/Iteration#Computing" title="Iteration">iteration</a>.<sup id="cite_ref-Bruce_Tate_3-0" class="reference"><a href="Assignment_(computer_science)#cite_note-Bruce_Tate-3"><span>[</span>4<span>]</span></a></sup> At the lowest level, assignment is implemented using <a href="Assembly_language" title="Assembly language">machine operations</a> such as <code>MOVE</code> or <code>STORE</code>.<sup id="cite_ref-weisskop_0-2" class="reference"><a href="Assignment_(computer_science)#cite_note-weisskop-0"><span>[</span>1<span>]</span></a></sup><sup id="cite_ref-Bruce_Tate_3-1" class="reference"><a href="Assignment_(computer_science)#cite_note-Bruce_Tate-3"><span>[</span>4<span>]</span></a></sup></p>
<p>The <a href="Variable_(programming)" title="Variable (programming)" class="mw-redirect">variables</a> are containers for values. It is possible to put a value into variable and later replace it with a new one. An assignment operation modifies the current state of the executing program.<sup id="cite_ref-Flaig2008_2-1" class="reference"><a href="Assignment_(computer_science)#cite_note-Flaig2008-2"><span>[</span>3<span>]</span></a></sup> Consequently, assignment is dependent on the concept of <a href="Variable_(programming)" title="Variable (programming)" class="mw-redirect">variables</a>. In an assignment:</p>
<ul>
<li>The <code><i>expression</i></code> is evaluated in the current state of the program.</li>
<li>The <code><i>variable</i></code> is assigned the computed value, replacing the prior value of that variable.</li>
</ul>
<p>Example: Assuming that <code>a</code> is a numeric variable, the assignment <code>a := 2*a</code> means that the content of the variable <code>a</code> is doubled after the execution of the statement. The case that the assigned value depends on previous one is so common that many imperative languages, most notably <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> and the majority of its descendants, <a href="Augmented_assignment" title="Augmented assignment">augment the notion of assignment</a> by defining special <a href="http://en.m.wikipedia.org/wiki/Binary_operation" title="Binary operation">binary operators</a> like <code>*=</code> for convenience so that the example becomes <code>a *= 2</code>.<sup id="cite_ref-Flaig2008_2-2" class="reference"><a href="Assignment_(computer_science)#cite_note-Flaig2008-2"><span>[</span>3<span>]</span></a></sup></p>
<p>An example segment of <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> code:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">int</span> x <span class="sy0">=</span> <span class="nu0">10</span><span class="sy0">;</span> 
<span class="kw4">float</span> y<span class="sy0">;</span>
x <span class="sy0">=</span> <span class="nu0">23</span><span class="sy0">;</span>
y <span class="sy0">=</span> <span class="nu16">32.4</span><span class="sy0">;</span>
</pre>
</div>
</div>
<p>In this sample, the variable <code>x</code> is first declared as an int, and is then assigned the value of 10. Notice that the declaration and assignment occur in the same statement. In the second line, <code>y</code> is declared without an assignment. In the third line, <code>x</code> is reassigned the value of 23. Finally, <code>y</code> is assigned the value of 32.4.</p>
<p>For an assignment operation, it is necessary that the value of the <code><i>expression</i></code> is well-defined (it is a valid <a href="http://en.m.wikipedia.org/wiki/Value_(computer_science)" title="Value (computer science)">rvalue</a>) and that the <code><i>variable</i></code> represents a modifiable entity (it is a valid modifiable (non-<a href="http://en.m.wikipedia.org/wiki/Const" title="Const" class="mw-redirect">const</a>) <a href="http://en.m.wikipedia.org/wiki/Value_(computer_science)" title="Value (computer science)">lvalue</a>). In some languages, typically <a href="http://en.m.wikipedia.org/wiki/Dynamic_programming_language" title="Dynamic programming language">dynamic</a> ones, it is not necessary to declare a variable prior to assigning it a value.</p>
<h3> <span class="mw-headline" id="Single_assignment">Single assignment</span>
</h3>
<div class="rellink boilerplate seealso">See also: <a href="http://en.m.wikipedia.org/wiki/Static_single_assignment_form" title="Static single assignment form">Static single assignment form</a>
</div>
<div class="thumb tright">
<div class="thumbinner" style="width:73px;">
<a href="http://en.m.wikipedia.org/wiki/File:Fp_no_destructive_assignment.png" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/3/30/Fp_no_destructive_assignment.png" width="71" height="71" class="thumbimage"></a>
<div class="thumbcaption">

In pure <a href="Functional_programming" title="Functional programming">functional programming</a>, destructive assignment is not allowed, because of <a href="http://en.m.wikipedia.org/wiki/Side_effect_(computer_science)" title="Side effect (computer science)">side effects</a><sup id="cite_ref-csci210_4-0" class="reference"><a href="Assignment_(computer_science)#cite_note-csci210-4"><span>[</span>5<span>]</span></a></sup>
</div>
</div>
</div>
<p>Any assignment that changes an existing value (e.g. <code>x := x + 1</code>) is disallowed in <a href="http://en.m.wikipedia.org/wiki/Purely_functional" title="Purely functional">purely functional</a> languages.<sup id="cite_ref-Bruce_Tate_3-2" class="reference"><a href="Assignment_(computer_science)#cite_note-Bruce_Tate-3"><span>[</span>4<span>]</span></a></sup> In <a href="Functional_programming" title="Functional programming">functional programming</a>, assignment is discouraged in favor of single assignment, also called <i>initialization</i>. Single assignment is an example of <a href="http://en.m.wikipedia.org/wiki/Name_binding" title="Name binding">name binding</a> and differs from assignment as described in this article in that it can only be done once, usually when the variable is created; no subsequent re-assignment is allowed. Once created by single assignment, named values are not variables but <a href="http://en.m.wikipedia.org/wiki/Immutable_object" title="Immutable object">immutable objects</a>.</p>
<p>An evaluation of expression does not have a <a href="http://en.m.wikipedia.org/wiki/Side_effect_(computer_science)" title="Side effect (computer science)">side effect</a> if it does not change an observable state of the machine,<sup id="cite_ref-Mitchell2003_5-0" class="reference"><a href="Assignment_(computer_science)#cite_note-Mitchell2003-5"><span>[</span>6<span>]</span></a></sup> and produces same values for same input.<sup id="cite_ref-Bruce_Tate_3-3" class="reference"><a href="Assignment_(computer_science)#cite_note-Bruce_Tate-3"><span>[</span>4<span>]</span></a></sup> Imperative assignment can introduce side effects while destroying and making the old value unavailable while substituting it with a new one,<sup id="cite_ref-csci210_4-1" class="reference"><a href="Assignment_(computer_science)#cite_note-csci210-4"><span>[</span>5<span>]</span></a></sup> and is referred to as <i>destructive assignment</i> for that reason in <a href="http://en.m.wikipedia.org/wiki/LISP" title="LISP" class="mw-redirect">LISP</a> and <a href="Functional_programming" title="Functional programming">functional programming</a>, similar to <a href="http://en.m.wikipedia.org/wiki/Destructive_update" title="Destructive update" class="mw-redirect">destructive updating</a>.</p>
<p>Single assignment is the only form of assignment available in <a href="http://en.m.wikipedia.org/wiki/Purely_functional" title="Purely functional">purely functional</a> languages, such as Haskell, which do not have variables in the sense of imperative programming languages<sup id="cite_ref-Bruce_Tate_3-4" class="reference"><a href="Assignment_(computer_science)#cite_note-Bruce_Tate-3"><span>[</span>4<span>]</span></a></sup> but rather named constant values possibly of compound nature with their elements progressively defined <i>on-demand</i>. Purely functional languages can provide an opportunity for <a href="http://en.m.wikipedia.org/wiki/Parallel_computing" title="Parallel computing">computation to be performed in parallel</a>, avoiding <a href="http://en.m.wikipedia.org/wiki/Von_Neumann_bottleneck" title="Von Neumann bottleneck" class="mw-redirect">von Neumann bottleneck</a> of sequential one step at time execution, since values are independent of each other.<sup id="cite_ref-Mitchell2003.1_6-0" class="reference"><a href="Assignment_(computer_science)#cite_note-Mitchell2003.1-6"><span>[</span>7<span>]</span></a></sup></p>
<p>Impure functional languages provide both single assignment as well as true assignment (though true assignment is typically used with less frequency than in imperative programming languages). For example, in Scheme, both single assignment (with <code>let</code>) and true assignment (with <code>set!</code>) can be used on all variables, and specialized primitives are provided for destructive update inside lists, vectors, strings, etc. In OCaml, only single assignment is allowed for variables, via the <code>let <i>name</i> = <i>value</i></code> syntax; however destructive update can be used on elements of arrays and strings with separate <code>&lt;-</code> operator, as well as on fields of records and objects that have been explicitly declared <a href="http://en.m.wikipedia.org/wiki/Mutable" title="Mutable" class="mw-redirect">mutable</a> (meaning capable of being changed after their initial declaration) by the programmer.</p>
<p>Functional programming languages that use single assignment include <a href="http://en.m.wikipedia.org/wiki/Clojure" title="Clojure">Clojure</a>, <a href="http://en.m.wikipedia.org/wiki/Erlang_(programming_language)" title="Erlang (programming language)">Erlang</a>, <a href="http://en.m.wikipedia.org/wiki/F_Sharp_(programming_language)" title="F Sharp (programming language)">F#</a>, <a href="http://en.m.wikipedia.org/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a>, <a href="http://en.m.wikipedia.org/wiki/Lava_(programming_language)" title="Lava (programming language)">Lava</a>, <a href="http://en.m.wikipedia.org/wiki/OCaml" title="OCaml">OCaml</a>, <a href="http://en.m.wikipedia.org/wiki/Oz_(programming_language)" title="Oz (programming language)">Oz</a>, <a href="http://en.m.wikipedia.org/wiki/SASL_(programming_language)" title="SASL (programming language)">SASL</a>, <a href="http://en.m.wikipedia.org/wiki/Scala_(programming_language)" title="Scala (programming language)">Scala</a> (for vals), <a href="http://en.m.wikipedia.org/wiki/SISAL" title="SISAL">SISAL</a>, <a href="http://en.m.wikipedia.org/wiki/Standard_ML" title="Standard ML">Standard ML</a>. Non-<a href="http://en.m.wikipedia.org/wiki/Backtracking" title="Backtracking">backtracking</a> <a href="http://en.m.wikipedia.org/wiki/Prolog" title="Prolog">Prolog</a> code can be considered <i>explicit</i> single-assignment, explicit in a sense that its (named) variables can be in explicitly unassigned state, or be set exactly once. In Haskell, by contrast, there can be no unassigned variables, and every variable can be thought of as being implicitly set to its value (or rather to a computational object that will produce its value <i>on demand</i>) when it is created.</p>
<h2> <span class="mw-headline" id="Value_of_an_assignment">Value of an assignment</span>
</h2>
<p>In some programming languages, an assignment statement returns a value, while in others it does not.</p>
<p>In most <a href="http://en.m.wikipedia.org/wiki/Expression-oriented_programming_languages" title="Expression-oriented programming languages" class="mw-redirect">expression-oriented programming languages</a> (for example, <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a>), the assignment statement returns the assigned value, allowing such idioms as <code>x = y = a</code>, in which the assignment statement <code>y = a</code> returns the value of <code>a</code>, which is then assigned to <code>x</code>. In a statement such as <code>while (f = read()) {<i>…</i>}</code>, the return value of a function is used to control a loop while assigning that same value to a variable.</p>
<p>In other programming languages, <a href="http://en.m.wikipedia.org/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> for example, the return value of an assignment is undefined and such idioms are invalid.</p>
<p>In <a href="http://en.m.wikipedia.org/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a>,<sup id="cite_ref-haskell_7-0" class="reference"><a href="Assignment_(computer_science)#cite_note-haskell-7"><span>[</span>8<span>]</span></a></sup> there is no variable assignment; but operations similar to assignment (like assigning to a field of an array or a field of a mutable data structure) usually evaluate to <a href="http://en.m.wikipedia.org/wiki/Unit_type" title="Unit type">unit</a>, the value of the unit type, which is typically the type of an expression that is evaluated purely for its side effects.</p>
<h2> <span class="mw-headline" id="Chained_assignment">Chained assignment</span>
</h2>
<p>A statement like <code>w = x = y = z</code> is called a <b>chained assignment</b> in which the value of <code>z</code> is assigned to multiple variables <code>w, x,</code> and <code>y</code>. Chained assignments are often used to initialize multiple variables, as in</p>
<p><code>a = b = c = d = f = 0</code></p>
<p>Not all programming languages support chained assignment.</p>
<p>In some programming languages (<a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> for example), chained assignments are supported because assignments return values. In <a href="C++" title="C++">C++</a> they are also available for values of class types by making appropriate return type for the assignment operator. This is however strongly discouraged because it also allows values of class types to be assigned to temporary objects, which results in a statement with no effect (assignment to temporary objects is detected as error only for non-class types).</p>
<p>In <a href="Python_(programming_language)" title="Python (programming language)">Python</a>, assignment statements are not expressions and thus do not return a value. Instead, chained assignments are a series of statements with multiple targets for a single expression. The assignments are executed left-to-right so that <code>i = arr[i] = f()</code> evaluates the expression <code>f()</code>, then assigns the result to the leftmost target, <code>i</code>, and then assigns the same result to the next target, <code>arr[i]</code>, using the new value of <code>i</code>.<sup id="cite_ref-8" class="reference"><a href="Assignment_(computer_science)#cite_note-8"><span>[</span>9<span>]</span></a></sup></p>
<h2> <span class="mw-headline" id="Parallel_assignment">Parallel assignment</span>
</h2>
<p>Some programming languages, such as <a href="JavaScript" title="JavaScript">JavaScript</a> (since 1.7), Lua, <a href="http://en.m.wikipedia.org/wiki/Occam_(programming_language)#occam_2" title="Occam (programming language)">occam 2</a>,<sup id="cite_ref-occam_9-0" class="reference"><a href="Assignment_(computer_science)#cite_note-occam-9"><span>[</span>10<span>]</span></a></sup><a href="Perl" title="Perl">Perl</a>,<sup id="cite_ref-perl_10-0" class="reference"><a href="Assignment_(computer_science)#cite_note-perl-10"><span>[</span>11<span>]</span></a></sup><a href="Python_(programming_language)" title="Python (programming language)">Python</a>,<sup id="cite_ref-python_11-0" class="reference"><a href="Assignment_(computer_science)#cite_note-python-11"><span>[</span>12<span>]</span></a></sup><a href="http://en.m.wikipedia.org/wiki/REBOL" title="REBOL">REBOL</a>, <a href="http://en.m.wikipedia.org/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a>,<sup id="cite_ref-ruby_12-0" class="reference"><a href="Assignment_(computer_science)#cite_note-ruby-12"><span>[</span>13<span>]</span></a></sup> and <a href="http://en.m.wikipedia.org/wiki/Windows_PowerShell" title="Windows PowerShell">Windows PowerShell</a> allow several variables to be assigned in parallel, with syntax like:</p>
<pre>
<code>a,b := 0,1</code>
</pre>
<p>which simultaneously assigns 0 to <code>a</code> and 1 to <code>b</code>. If the right-hand side of the assignment is an array variable, this feature is sometimes called <i>sequence unpacking</i>:</p>
<pre>
<code><b>var</b> list := {0, 1}
a,b := list</code>
</pre>
<p>The list will be unpacked so that 0 is assigned to <code>a</code> and 1 to <code>b</code>. More interestingly,</p>
<pre>
<code>a,b := b,a</code>
</pre>
<p>Swaps the values of <code>a</code> and <code>b</code>. In languages without parallel assignment, this would have to be written to use a temporary variable</p>
<pre>
<code><b>var</b> t := a
a := b
b := t</code>
</pre>
<p>since <code>a:=b ; b:=a</code> leaves both <code>a</code> and <code>b</code> with the original value of <code>b</code>.</p>
<p>Parallel assignment was introduced in <a href="http://en.m.wikipedia.org/wiki/CPL_(programming_language)" title="CPL (programming language)">CPL</a> in 1963, under the name <b>simultaneous assignment</b>.<sup id="cite_ref-13" class="reference"><a href="Assignment_(computer_science)#cite_note-13"><span>[</span>14<span>]</span></a></sup></p>
<h2> <span class="mw-headline" id="Assignment_versus_equality">Assignment versus equality</span>
</h2>
<blockquote class="templatequote">
<div class="Bug6200">A notorious example for a bad idea was the choice of the equal sign to denote assignment. It goes back to Fortran in 1957 and has blindly been copied by armies of language designers. Why is it a bad idea? Because it overthrows a century old tradition to let “=” denote a comparison for equality, a predicate which is either true or false. But Fortran made it to mean assignment, the enforcing of equality. In this case, the operands are on unequal footing: The left operand (a variable) is to be made equal to the right operand (an expression). x = y does not mean the same thing as y = x.<sup id="cite_ref-14" class="reference"><a href="Assignment_(computer_science)#cite_note-14"><span>[</span>15<span>]</span></a></sup>
</div>
<div class="templatequotecite">—<a href="http://en.m.wikipedia.org/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a>, <cite><i>Good Ideas, Through the Looking Glass</i></cite>
</div>
</blockquote>
<p>Beginning programmers sometimes confuse assignment with the <a href="http://en.m.wikipedia.org/wiki/Relational_operator" title="Relational operator">relational operator</a> for equality, as "=" means <a href="Equality_(mathematics)" title="Equality (mathematics)">equality</a> in mathematics, and is used for assignment in many languages. But assignment alters the value of a variable, while equality testing tests whether two expressions have the same value.</p>
<p>In some languages, such as <a href="http://en.m.wikipedia.org/wiki/BASIC" title="BASIC">BASIC</a>, a single equals sign (<code>"="</code>) is used for both the assignment operator and the equality relational operator, with context determining which is meant. Other languages use different symbols for the two operators. For example:</p>
<ul>
<li>In <a href="Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a>, the assignment operator is a colon and an equals sign (<code>":="</code>) while the equality operator is a single equals (<code>"="</code>).</li>
<li>In <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a>, the assignment operator is a single equals sign (<code>"="</code>) while the equality operator is a pair of equals signs (<code>"=="</code>).</li>
</ul>
<p>The similarity in the two symbols can lead to errors if the programmer forgets which form ("<code>=</code>", "<code>==</code>", "<code>:=</code>") is appropriate, or mistypes "<code>=</code>" when "<code>==</code>" was intended. This is a common programming problem with languages such as C, where the assignment operator also returns the value assigned, and can be validly nested inside expressions (in the same way that a function returns a value). If the intention was to compare two values in an <code>if</code> statement, for instance, an assignment is quite likely to return a value interpretable as Boolean true, in which case the <code>then</code> clause will be executed, leading the program to behave unexpectedly. Some language processors (such as <a href="GNU_Compiler_Collection" title="GNU Compiler Collection">gcc</a>) can detect such situations, and warn the programmer of the potential error.</p>
<h2> <span class="mw-headline" id="Notation">Notation</span>
</h2>
<p>Common textual representations of the assignment include an <a href="http://en.m.wikipedia.org/wiki/Equals_sign" title="Equals sign">equals sign</a> (<code>=</code>) and colon-equals (<code>:=</code>). These two forms are typical of programming languages that classify assignment as an infix <a href="Operator_(programming)" title="Operator (programming)" class="mw-redirect">operator</a>.</p>
<dl>
<dd>
<table class="wikitable">
<tr>
<td><code><i>variable</i> = <i>expression</i></code></td>
<td>
<a href="http://en.m.wikipedia.org/wiki/BASIC" title="BASIC">BASIC</a>, <a href="http://en.m.wikipedia.org/wiki/Bourne_shell" title="Bourne shell">Bourne shell</a>, <a href="http://en.m.wikipedia.org/wiki/C_(programming_language)" title="C (programming language)">C</a> (and many of <a href="Category:C_programming_language_family" title="Category:C programming language family">its descendants</a>), <a href="Fortran" title="Fortran">Fortran</a>, <a href="Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="PL/I" title="PL/I">PL/I</a>, <a href="Python_(programming_language)" title="Python (programming language)">Python</a>, <a href="http://en.m.wikipedia.org/wiki/R_(programming_language)" title="R (programming language)">R</a>, <a href="http://en.m.wikipedia.org/wiki/Windows_PowerShell" title="Windows PowerShell">Windows PowerShell</a>...</td>
</tr>
<tr>
<td><code><i>variable</i> := <i>expression</i></code></td>
<td>
<a href="ALGOL" title="ALGOL">ALGOL</a>, <a href="http://en.m.wikipedia.org/wiki/Simula" title="Simula">Simula</a>, <a href="http://en.m.wikipedia.org/wiki/Algol68" title="Algol68" class="mw-redirect">Algol68</a>, <a href="http://en.m.wikipedia.org/wiki/Algol_W" title="Algol W" class="mw-redirect">Algol W</a>, <a href="http://en.m.wikipedia.org/wiki/CPL_(programming_language)" title="CPL (programming language)">CPL</a>, <a href="BCPL" title="BCPL">BCPL</a>, <a href="Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a><sup id="cite_ref-pascal_15-0" class="reference"><a href="Assignment_(computer_science)#cite_note-pascal-15"><span>[</span>16<span>]</span></a></sup>, <a href="http://en.m.wikipedia.org/wiki/Mary_(programming_language)" title="Mary (programming language)">Mary</a>, <a href="http://en.m.wikipedia.org/wiki/Modula_(programming_language)" title="Modula (programming language)" class="mw-redirect">Modula</a>, <a href="http://en.m.wikipedia.org/wiki/Ada_(programming_language)" title="Ada (programming language)">Ada</a>, <a href="http://en.m.wikipedia.org/wiki/Smalltalk_(programming_language)" title="Smalltalk (programming language)" class="mw-redirect">Smalltalk</a>, <a href="http://en.m.wikipedia.org/wiki/Eiffel_(programming_language)" title="Eiffel (programming language)">Eiffel</a>,<sup id="cite_ref-eiffel1_16-0" class="reference"><a href="Assignment_(computer_science)#cite_note-eiffel1-16"><span>[</span>17<span>]</span></a></sup><sup id="cite_ref-eiffel2_17-0" class="reference"><a href="Assignment_(computer_science)#cite_note-eiffel2-17"><span>[</span>18<span>]</span></a></sup>, <a href="http://en.m.wikipedia.org/wiki/Modula-2_(programming_language)" title="Modula-2 (programming language)" class="mw-redirect">Modula-2</a>, <a href="http://en.m.wikipedia.org/wiki/Modula-2%2B" title="Modula-2+">Modula-2+</a>, <a href="http://en.m.wikipedia.org/wiki/Oberon_(programming_language)" title="Oberon (programming language)">Oberon</a>, <a href="http://en.m.wikipedia.org/wiki/Modula-3_(programming_language)" title="Modula-3 (programming language)" class="mw-redirect">Modula-3</a>, <a href="http://en.m.wikipedia.org/wiki/Dylan_(programming_language)" title="Dylan (programming language)">Dylan</a>,<sup id="cite_ref-dylan_18-0" class="reference"><a href="Assignment_(computer_science)#cite_note-dylan-18"><span>[</span>19<span>]</span></a></sup><a href="Seed7" title="Seed7">Seed7</a>, <a href="http://en.m.wikipedia.org/wiki/Io_(programming_language)" title="Io (programming language)">Io</a>
</td>
</tr>
</table>
</dd>
</dl>
<p>Other possibilities include a left arrow or a keyword, though there are other, rarer, variants:</p>
<dl>
<dd>
<table class="wikitable">
<tr>
<td><code><i>variable</i> &lt;&lt; <i>expression</i></code></td>
<td><a href="http://en.m.wikipedia.org/wiki/Magik_(programming_language)" title="Magik (programming language)">Magik</a></td>
</tr>
<tr>
<td><code><i>variable</i> &lt;- <i>expression</i></code></td>
<td>
<a href="http://en.m.wikipedia.org/wiki/OCaml" title="OCaml">OCaml</a>, <a href="http://en.m.wikipedia.org/wiki/R_(programming_language)" title="R (programming language)">R</a>, <a href="http://en.m.wikipedia.org/wiki/S_(programming_language)" title="S (programming language)">S</a>
</td>
</tr>
<tr>
<td><code><i>variable</i> &lt;&lt;- <i>expression</i></code></td>
<td><a href="http://en.m.wikipedia.org/wiki/R_(programming_language)" title="R (programming language)">R</a></td>
</tr>
<tr>
<td><code><i>variable</i> ← <i>expression</i></code></td>
<td>
<a href="http://en.m.wikipedia.org/wiki/APL_(programming_language)" title="APL (programming language)">APL</a><sup id="cite_ref-aplbook_19-0" class="reference"><a href="Assignment_(computer_science)#cite_note-aplbook-19"><span>[</span>20<span>]</span></a></sup>
</td>
</tr>
<tr>
<td><code><i>variable</i> =: <i>expression</i></code></td>
<td><a href="http://en.m.wikipedia.org/wiki/J_(programming_language)" title="J (programming language)">J</a></td>
</tr>
<tr>
<td><code>LET <i>variable</i> = <i>expression</i></code></td>
<td><a href="http://en.m.wikipedia.org/wiki/BASIC" title="BASIC">BASIC</a></td>
</tr>
<tr>
<td><code>set <i>variable</i> to <i>expression</i></code></td>
<td><a href="http://en.m.wikipedia.org/wiki/AppleScript" title="AppleScript">AppleScript</a></td>
</tr>
<tr>
<td><code>set <i>variable</i> = <i>expression</i></code></td>
<td><a href="C_shell" title="C shell">C shell</a></td>
</tr>
<tr>
<td><code>Set-Variable <i>variable</i> <i>(expression)</i></code></td>
<td><a href="http://en.m.wikipedia.org/wiki/Windows_PowerShell" title="Windows PowerShell">Windows PowerShell</a></td>
</tr>
<tr>
<td><code>val <i>variable</i> = <i>expression</i></code></td>
<td>
<a href="http://en.m.wikipedia.org/wiki/ML_(programming_language)" title="ML (programming language)">ML</a><sup id="cite_ref-ml_20-0" class="reference"><a href="Assignment_(computer_science)#cite_note-ml-20"><span>[</span>21<span>]</span></a></sup>
</td>
</tr>
<tr>
<td><code><i>variable</i> : <i>expression</i></code></td>
<td><a href="http://en.m.wikipedia.org/wiki/Macsyma" title="Macsyma">Macsyma, Maxima</a></td>
</tr>
<tr>
<td><code>var <i>variable</i> <i>expression</i></code></td>
<td><a href="http://en.m.wikipedia.org/wiki/MIRC_scripting_language" title="MIRC scripting language">mIRC scripting language</a></td>
</tr>
</table>
</dd>
</dl>
<p>Some platforms put the expression on the left and the variable on the right:</p>
<dl>
<dd>
<table class="wikitable">
<tr>
<td style="padding-right: 1em"><code>MOVE <i>expression</i> TO <i>variable</i></code></td>
<td><a href="http://en.m.wikipedia.org/wiki/COBOL" title="COBOL">COBOL</a></td>
</tr>
<tr>
<td style="padding-right: 1em"><code><i>expression</i> → <i>variable</i></code></td>
<td>
<a href="http://en.m.wikipedia.org/wiki/TI-BASIC" title="TI-BASIC">TI-BASIC</a>, <a href="http://en.m.wikipedia.org/wiki/Casio_graphic_calculators" title="Casio graphic calculators">Casio</a> BASIC</td>
</tr>
<tr>
<td style="padding-right: 1em"><code><i>expression</i> -&gt; <i>variable</i></code></td>
<td><a href="http://en.m.wikipedia.org/wiki/R_(programming_language)" title="R (programming language)">R</a></td>
</tr>
</table>
</dd>
</dl>
<p>Some expression-oriented languages, such as <a href="http://en.m.wikipedia.org/wiki/Lisp_(programming_language)" title="Lisp (programming language)">Lisp</a><sup id="cite_ref-clisp_21-0" class="reference"><a href="Assignment_(computer_science)#cite_note-clisp-21"><span>[</span>22<span>]</span></a></sup><sup id="cite_ref-cmlisp_22-0" class="reference"><a href="Assignment_(computer_science)#cite_note-cmlisp-22"><span>[</span>23<span>]</span></a></sup> and Tcl, uniformly use prefix syntax for all statements, including assignment.</p>
<dl>
<dd>
<table class="wikitable">
<tr>
<td style="padding-right: 1em"><code>(setf <i>variable</i> <i>expression</i>)</code></td>
<td><a href="http://en.m.wikipedia.org/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a></td>
</tr>
<tr>
<td><code>(set! <i>variable</i> <i>expression</i>)</code></td>
<td>
<a href="http://en.m.wikipedia.org/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a><sup id="cite_ref-scheme_23-0" class="reference"><a href="Assignment_(computer_science)#cite_note-scheme-23"><span>[</span>24<span>]</span></a></sup><sup id="cite_ref-schemeint_24-0" class="reference"><a href="Assignment_(computer_science)#cite_note-schemeint-24"><span>[</span>25<span>]</span></a></sup><sup id="cite_ref-sussman_25-0" class="reference"><a href="Assignment_(computer_science)#cite_note-sussman-25"><span>[</span>26<span>]</span></a></sup>
</td>
</tr>
<tr>
<td><code>set <i>variable</i> <i>expression</i></code></td>
<td><a href="http://en.m.wikipedia.org/wiki/Tcl" title="Tcl">Tcl</a></td>
</tr>
</table>
</dd>
</dl>
<h2> <span class="mw-headline" id="Assignment_in_object_oriented_languages">Assignment in object oriented languages</span>
</h2>
<p>In most <a href="http://en.m.wikipedia.org/wiki/Object_oriented" title="Object oriented" class="mw-redirect">object oriented</a> languages, the expression <code>object1 = object2</code> assigns a <a href="Reference_(computer_science)" title="Reference (computer science)">reference</a> of the <code>object2</code> to <code>object1</code>.</p>
<h2> <span class="mw-headline" id="See_also">See also</span>
</h2>
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Assignment_operator_in_C%2B%2B" title="Assignment operator in C++" class="mw-redirect">Assignment operator in C++</a></li>
<li><a href="Operator_(programming)" title="Operator (programming)" class="mw-redirect">Operator (programming)</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Name_binding" title="Name binding">Name binding</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Unification_(computing)" title="Unification (computing)" class="mw-redirect">Unification (computing)</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Immutable_object" title="Immutable object">Immutable object</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Const-correctness" title="Const-correctness">Const-correctness</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Drive_letter_assignment" title="Drive letter assignment">Drive letter assignment</a></li>
</ul>
<h2> <span class="mw-headline" id="References">References</span>
</h2>
<div class="reflist references-column-count references-column-count-2" style="-moz-column-count: 2; -webkit-column-count: 2; column-count: 2; list-style-type: decimal;">
<ol class="references">
<li id="cite_note-weisskop-0">
<span class="mw-cite-backlink">^ <a href="Assignment_(computer_science)#cite_ref-weisskop_0-0"><sup><i><b>a</b></i></sup></a> <a href="Assignment_(computer_science)#cite_ref-weisskop_0-1"><sup><i><b>b</b></i></sup></a> <a href="Assignment_(computer_science)#cite_ref-weisskop_0-2"><sup><i><b>c</b></i></sup></a></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www.cs.uah.edu/~weisskop/Notes424-524/ch12.ppt">Imperative Programming</a></span>
</li>
<li id="cite_note-2CS24-1">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-2CS24_1-0">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www.csc.liv.ac.uk/~frans/OldLectures/2CS24/declarative.html">Topics in Information Processing</a></span>
</li>
<li id="cite_note-Flaig2008-2">
<span class="mw-cite-backlink">^ <a href="Assignment_(computer_science)#cite_ref-Flaig2008_2-0"><sup><i><b>a</b></i></sup></a> <a href="Assignment_(computer_science)#cite_ref-Flaig2008_2-1"><sup><i><b>b</b></i></sup></a> <a href="Assignment_(computer_science)#cite_ref-Flaig2008_2-2"><sup><i><b>c</b></i></sup></a></span> <span class="reference-text"><span class="citation book">Ruediger-Marcus Flaig (2008). <a rel="nofollow" class="external text" href="http://books.google.com/books?id=kS7Dye-dv54C&amp;pg=PA98"><i>Bioinformatics programming in Python: a practical course for beginners</i></a>. Wiley-VCH. pp. 98–99. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/978-3-527-32094-3" title="Special:BookSources/978-3-527-32094-3">978-3-527-32094-3</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://books.google.com/books?id=kS7Dye-dv54C&amp;pg=PA98">http://books.google.com/books?id=kS7Dye-dv54C&amp;pg=PA98</a></span><span class="reference-accessdate">. Retrieved 25 December 2010</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Bioinformatics+programming+in+Python%3A+a+practical+course+for+beginners&amp;rft.aulast=Ruediger-Marcus+Flaig&amp;rft.au=Ruediger-Marcus+Flaig&amp;rft.date=2008&amp;rft.pages=pp.%26nbsp%3B98%E2%80%9399&amp;rft.pub=Wiley-VCH&amp;rft.isbn=978-3-527-32094-3&amp;rft_id=http%3A%2F%2Fbooks.google.com%2Fbooks%3Fid%3DkS7Dye-dv54C%26pg%3DPA98&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-Bruce_Tate-3">
<span class="mw-cite-backlink">^ <a href="Assignment_(computer_science)#cite_ref-Bruce_Tate_3-0"><sup><i><b>a</b></i></sup></a> <a href="Assignment_(computer_science)#cite_ref-Bruce_Tate_3-1"><sup><i><b>b</b></i></sup></a> <a href="Assignment_(computer_science)#cite_ref-Bruce_Tate_3-2"><sup><i><b>c</b></i></sup></a> <a href="Assignment_(computer_science)#cite_ref-Bruce_Tate_3-3"><sup><i><b>d</b></i></sup></a> <a href="Assignment_(computer_science)#cite_ref-Bruce_Tate_3-4"><sup><i><b>e</b></i></sup></a></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www.ibm.com/developerworks/java/library/j-cb07186.html">Crossing borders: Explore functional programming with Haskell</a>, by Bruce Tate</span>
</li>
<li id="cite_note-csci210-4">
<span class="mw-cite-backlink">^ <a href="Assignment_(computer_science)#cite_ref-csci210_4-0"><sup><i><b>a</b></i></sup></a> <a href="Assignment_(computer_science)#cite_ref-csci210_4-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www.seas.gwu.edu/~bell/csci210/lectures/imperative_languages.pdf">Imperative Programming Languages (IPL)</a></span>
</li>
<li id="cite_note-Mitchell2003-5">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-Mitchell2003_5-0">^</a></b></span> <span class="reference-text"><span class="citation book"><a href="http://en.m.wikipedia.org/wiki/John_C._Mitchell" title="John C. Mitchell">Mitchell, John C.</a> (2003). <a rel="nofollow" class="external text" href="http://books.google.com/books?id=7Uh8XGfJbEIC&amp;pg=PA23"><i>Concepts in programming languages</i></a>. Cambridge University Press. p. 23. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/978-0-521-78098-8" title="Special:BookSources/978-0-521-78098-8">978-0-521-78098-8</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://books.google.com/books?id=7Uh8XGfJbEIC&amp;pg=PA23">http://books.google.com/books?id=7Uh8XGfJbEIC&amp;pg=PA23</a></span><span class="reference-accessdate">. Retrieved 3 January 2011</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Concepts+in+programming+languages&amp;rft.aulast=Mitchell&amp;rft.aufirst=John+C.&amp;rft.au=Mitchell%2C%26%2332%3BJohn+C.&amp;rft.date=2003&amp;rft.pages=p.%26nbsp%3B23&amp;rft.pub=Cambridge+University+Press&amp;rft.isbn=978-0-521-78098-8&amp;rft_id=http%3A%2F%2Fbooks.google.com%2Fbooks%3Fid%3D7Uh8XGfJbEIC%26pg%3DPA23&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-Mitchell2003.1-6">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-Mitchell2003.1_6-0">^</a></b></span> <span class="reference-text"><span class="citation book">John C. Mitchell (2003). <a rel="nofollow" class="external text" href="http://books.google.com/books?id=7Uh8XGfJbEIC&amp;pg=PA81"><i>Concepts in programming languages</i></a>. Cambridge University Press. pp. 81–82. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/978-0-521-78098-8" title="Special:BookSources/978-0-521-78098-8">978-0-521-78098-8</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://books.google.com/books?id=7Uh8XGfJbEIC&amp;pg=PA81">http://books.google.com/books?id=7Uh8XGfJbEIC&amp;pg=PA81</a></span><span class="reference-accessdate">. Retrieved 3 January 2011</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Concepts+in+programming+languages&amp;rft.aulast=John+C.+Mitchell&amp;rft.au=John+C.+Mitchell&amp;rft.date=2003&amp;rft.pages=pp.%26nbsp%3B81%E2%80%9382&amp;rft.pub=Cambridge+University+Press&amp;rft.isbn=978-0-521-78098-8&amp;rft_id=http%3A%2F%2Fbooks.google.com%2Fbooks%3Fid%3D7Uh8XGfJbEIC%26pg%3DPA81&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-haskell-7">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-haskell_7-0">^</a></b></span> <span class="reference-text"><span class="citation book">Hudak, Paul (2000). <i>The Haskell School of Expression: Learning Functional Programming Through Multimedia</i>. Cambridge: Cambridge University Press. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-521-64408-9" title="Special:BookSources/0-521-64408-9">0-521-64408-9</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Haskell+School+of+Expression%3A+Learning+Functional+Programming+Through+Multimedia&amp;rft.aulast=Hudak&amp;rft.aufirst=Paul&amp;rft.au=Hudak%2C%26%2332%3BPaul&amp;rft.date=2000&amp;rft.place=Cambridge&amp;rft.pub=Cambridge+University+Press&amp;rft.isbn=0-521-64408-9&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-8">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-8">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://docs.python.org/reference/simple_stmts.html#assignment-statements">http://docs.python.org/reference/simple_stmts.html#assignment-statements</a></span>
</li>
<li id="cite_note-occam-9">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-occam_9-0">^</a></b></span> <span class="reference-text"><span class="citation book">INMOS Limited, ed. (1988). <i>Occam 2 Reference Manual</i>. New Jersey: Prentice Hall. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-13-629312-3" title="Special:BookSources/0-13-629312-3">0-13-629312-3</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Occam+2+Reference+Manual&amp;rft.date=1988&amp;rft.place=New+Jersey&amp;rft.pub=Prentice+Hall&amp;rft.isbn=0-13-629312-3&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-perl-10">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-perl_10-0">^</a></b></span> <span class="reference-text"><span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Larry_Wall" title="Larry Wall">Wall, Larry</a>; Christiansen, Tom; Schwartz, Randal C. (1996). <i>Perl Programming Language</i> (2 ed.). Cambridge: O´Reilly. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/1-56592-149-6" title="Special:BookSources/1-56592-149-6">1-56592-149-6</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Perl+Programming+Language&amp;rft.aulast=Wall&amp;rft.aufirst=Larry&amp;rft.au=Wall%2C%26%2332%3BLarry&amp;rft.date=1996&amp;rft.edition=2&amp;rft.place=Cambridge&amp;rft.pub=O%C2%B4Reilly&amp;rft.isbn=1-56592-149-6&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-python-11">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-python_11-0">^</a></b></span> <span class="reference-text"><span class="citation book">Lutz, Mark (2001). <i>Python Programming Language</i> (2 ed.). Sebastopol: O´Reilly. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-596-00085-5" title="Special:BookSources/0-596-00085-5">0-596-00085-5</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Python+Programming+Language&amp;rft.aulast=Lutz&amp;rft.aufirst=Mark&amp;rft.au=Lutz%2C%26%2332%3BMark&amp;rft.date=2001&amp;rft.edition=2&amp;rft.place=Sebastopol&amp;rft.pub=O%C2%B4Reilly&amp;rft.isbn=0-596-00085-5&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-ruby-12">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-ruby_12-0">^</a></b></span> <span class="reference-text"><span class="citation book">Thomas, David; Hunt, Andrew (2001). <i>Programming Ruby: The Pragmatic Programmer´s Guide</i>. Upper Saddle River: Addison Wesley. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-201-71089-7" title="Special:BookSources/0-201-71089-7">0-201-71089-7</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Programming+Ruby%3A+The+Pragmatic+Programmer%C2%B4s+Guide&amp;rft.aulast=Thomas&amp;rft.aufirst=David&amp;rft.au=Thomas%2C%26%2332%3BDavid&amp;rft.date=2001&amp;rft.place=Upper+Saddle+River&amp;rft.pub=Addison+Wesley&amp;rft.isbn=0-201-71089-7&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-13">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-13">^</a></b></span> <span class="reference-text">D.W. Barron <i>et al.</i>, "The main features of CPL", <i>Computer Journal</i> <b>6</b>:2:140 (1963). <a rel="nofollow" class="external text" href="http://comjnl.oxfordjournals.org/cgi/reprint/6/2/134">full text (subscription)</a></span>
</li>
<li id="cite_note-14">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-14">^</a></b></span> <span class="reference-text"><span class="citation web">Niklaus Wirth. "Good Ideas, Through the Looking Glass". <a href="http://en.m.wikipedia.org/wiki/CiteSeer#CiteSeerX" title="CiteSeer">CiteSeerX</a>: <span class="url"><a rel="nofollow" class="external text" href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.88.8309">10.1.1.88.8309</a></span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Good+Ideas%2C+Through+the+Looking+Glass&amp;rft.atitle=&amp;rft.aulast=Niklaus+Wirth&amp;rft.au=Niklaus+Wirth&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-pascal-15">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-pascal_15-0">^</a></b></span> <span class="reference-text"><span class="citation book">Moore, Lawrie (1980). <i>Foundations of Programming with Pascal</i>. New York: John Wiley &amp; Sons. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-470-26939-1" title="Special:BookSources/0-470-26939-1">0-470-26939-1</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Foundations+of+Programming+with+Pascal&amp;rft.aulast=Moore&amp;rft.aufirst=Lawrie&amp;rft.au=Moore%2C%26%2332%3BLawrie&amp;rft.date=1980&amp;rft.place=New+York&amp;rft.pub=John+Wiley+%26+Sons&amp;rft.isbn=0-470-26939-1&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-eiffel1-16">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-eiffel1_16-0">^</a></b></span> <span class="reference-text"><span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Bertrand_Meyer" title="Bertrand Meyer">Meyer, Bertrand</a> (1992). <i>Eiffel the Language</i>. Hemel Hempstead: Prentice Hall International(UK). <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-13-247925-7" title="Special:BookSources/0-13-247925-7">0-13-247925-7</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Eiffel+the+Language&amp;rft.aulast=Meyer&amp;rft.aufirst=Bertrand&amp;rft.au=Meyer%2C%26%2332%3BBertrand&amp;rft.date=1992&amp;rft.place=Hemel+Hempstead&amp;rft.pub=Prentice+Hall+International%28UK%29&amp;rft.isbn=0-13-247925-7&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-eiffel2-17">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-eiffel2_17-0">^</a></b></span> <span class="reference-text"><span class="citation book">Wiener, Richard (1996). <i>An Object-Oriented Introduction to Computer Science Using Eiffel</i>. Upper Saddle River, New Jersey: Prentice Hall. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-13-183872-5" title="Special:BookSources/0-13-183872-5">0-13-183872-5</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=An+Object-Oriented+Introduction+to+Computer+Science+Using+Eiffel&amp;rft.aulast=Wiener&amp;rft.aufirst=Richard&amp;rft.au=Wiener%2C%26%2332%3BRichard&amp;rft.date=1996&amp;rft.place=Upper+Saddle+River%2C+New+Jersey&amp;rft.pub=Prentice+Hall&amp;rft.isbn=0-13-183872-5&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-dylan-18">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-dylan_18-0">^</a></b></span> <span class="reference-text"><span class="citation book">Feinberg, Neal; Keene, Sonya E.; Mathews, Robert O.; Withington, P. Tucker (1997). <i>Dylan Programming</i>. Massachusetts: Addison Wesley. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-201-47976-1" title="Special:BookSources/0-201-47976-1">0-201-47976-1</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Dylan+Programming&amp;rft.aulast=Feinberg&amp;rft.aufirst=Neal&amp;rft.au=Feinberg%2C%26%2332%3BNeal&amp;rft.date=1997&amp;rft.place=Massachusetts&amp;rft.pub=Addison+Wesley&amp;rft.isbn=0-201-47976-1&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-aplbook-19">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-aplbook_19-0">^</a></b></span> <span class="reference-text"><span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Kenneth_E._Iverson" title="Kenneth E. Iverson">Iverson, Kenneth E.</a> (1962). <a rel="nofollow" class="external text" href="http://www.softwarepreservation.org/projects/apl/book/APROGRAMMING%20LANGUAGE/view"><i>A Programming Language</i></a>. John Wiley and Sons. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-471-43014-5" title="Special:BookSources/0-471-43014-5">0-471-43014-5</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://www.softwarepreservation.org/projects/apl/book/APROGRAMMING%20LANGUAGE/view">http://www.softwarepreservation.org/projects/apl/book/APROGRAMMING%20LANGUAGE/view</a></span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=A+Programming+Language&amp;rft.aulast=Iverson&amp;rft.aufirst=Kenneth+E.&amp;rft.au=Iverson%2C%26%2332%3BKenneth+E.&amp;rft.date=1962&amp;rft.pub=John+Wiley+and+Sons&amp;rft.isbn=0-471-43014-5&amp;rft_id=http%3A%2F%2Fwww.softwarepreservation.org%2Fprojects%2Fapl%2Fbook%2FAPROGRAMMING%2520LANGUAGE%2Fview&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-ml-20">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-ml_20-0">^</a></b></span> <span class="reference-text"><span class="citation book">Ullman, Jeffrey D. (1998). <i>Elements of ML Programming: ML97 Edition</i>. Englewood Cliffs, New Jersey: Prentice Hall. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-13-790387-1" title="Special:BookSources/0-13-790387-1">0-13-790387-1</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Elements+of+ML+Programming%3A+ML97+Edition&amp;rft.aulast=Ullman&amp;rft.aufirst=Jeffrey+D.&amp;rft.au=Ullman%2C%26%2332%3BJeffrey+D.&amp;rft.date=1998&amp;rft.place=Englewood+Cliffs%2C+New+Jersey&amp;rft.pub=Prentice+Hall&amp;rft.isbn=0-13-790387-1&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-clisp-21">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-clisp_21-0">^</a></b></span> <span class="reference-text"><span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Paul_Graham_(computer_programmer)" title="Paul Graham (computer programmer)">Graham, Paul</a> (1996). <i>ANSI Common Lisp</i>. New Jersey: Prentice Hall. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-13-370875-6" title="Special:BookSources/0-13-370875-6">0-13-370875-6</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=ANSI+Common+Lisp&amp;rft.aulast=Graham&amp;rft.aufirst=Paul&amp;rft.au=Graham%2C%26%2332%3BPaul&amp;rft.date=1996&amp;rft.place=New+Jersey&amp;rft.pub=Prentice+Hall&amp;rft.isbn=0-13-370875-6&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-cmlisp-22">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-cmlisp_22-0">^</a></b></span> <span class="reference-text"><span class="citation book"><a href="http://en.m.wikipedia.org/wiki/Guy_L._Steele,_Jr." title="Guy L. Steele, Jr.">Steele, Guy L.</a> (1990). <i>Common Lisp: The Language</i>. Lexington: Digital Press. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/1-55558-041-6" title="Special:BookSources/1-55558-041-6">1-55558-041-6</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Common+Lisp%3A+The+Language&amp;rft.aulast=Steele&amp;rft.aufirst=Guy+L.&amp;rft.au=Steele%2C%26%2332%3BGuy+L.&amp;rft.date=1990&amp;rft.place=Lexington&amp;rft.pub=Digital+Press&amp;rft.isbn=1-55558-041-6&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-scheme-23">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-scheme_23-0">^</a></b></span> <span class="reference-text"><span class="citation book">Dybvig, R. Kent (1996). <i>The Scheme Programming Language: ANSI Scheme</i>. New Jersey: Prentice Hall. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-13-454646-6" title="Special:BookSources/0-13-454646-6">0-13-454646-6</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=The+Scheme+Programming+Language%3A+ANSI+Scheme&amp;rft.aulast=Dybvig&amp;rft.aufirst=R.+Kent&amp;rft.au=Dybvig%2C%26%2332%3BR.+Kent&amp;rft.date=1996&amp;rft.place=New+Jersey&amp;rft.pub=Prentice+Hall&amp;rft.isbn=0-13-454646-6&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-schemeint-24">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-schemeint_24-0">^</a></b></span> <span class="reference-text"><span class="citation book">Smith, Jerry D. (1988). <i>Introduction to Scheme</i>. New Jersey: Prentice Hall. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-13-496712-7" title="Special:BookSources/0-13-496712-7">0-13-496712-7</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Introduction+to+Scheme&amp;rft.aulast=Smith&amp;rft.aufirst=Jerry+D.&amp;rft.au=Smith%2C%26%2332%3BJerry+D.&amp;rft.date=1988&amp;rft.place=New+Jersey&amp;rft.pub=Prentice+Hall&amp;rft.isbn=0-13-496712-7&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
<li id="cite_note-sussman-25">
<span class="mw-cite-backlink"><b><a href="Assignment_(computer_science)#cite_ref-sussman_25-0">^</a></b></span> <span class="reference-text"><span class="citation book">Abelson, Harold; Sussman, Gerald Jay; Sussman, Julie (1996). <i>Structure and Interpretation of Computer Programs</i>. New Jersey: McGraw-Hill. <a href="International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0-07-000484-6" title="Special:BookSources/0-07-000484-6">0-07-000484-6</a>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Structure+and+Interpretation+of+Computer+Programs&amp;rft.aulast=Abelson&amp;rft.aufirst=Harold&amp;rft.au=Abelson%2C%26%2332%3BHarold&amp;rft.date=1996&amp;rft.place=New+Jersey&amp;rft.pub=McGraw-Hill&amp;rft.isbn=0-07-000484-6&amp;rfr_id=info:sid/en.wikipedia.org:Assignment_(computer_science)"><span style="display: none;"> </span></span></span>
</li>
</ol>
</div>





						<div class="section" id="mw-mf-language-section">
				<h2 id="section_language" class="section_heading">Read in another language</h2>
				<div id="content_language" class="content_block">
					<p>This article is available in 11 languages</p>
					<ul id="mw-mf-language-selection"><li><a href="http://cs.m.wikipedia.org/wiki/P%C5%99i%C5%99azen%C3%AD" lang="cs" hreflang="cs">česky</a></li><li><a href="http://de.m.wikipedia.org/wiki/Zuweisung" lang="de" hreflang="de">Deutsch</a></li><li><a href="http://fr.m.wikipedia.org/wiki/Affectation_(informatique)" lang="fr" hreflang="fr">français</a></li><li><a href="http://hr.m.wikipedia.org/wiki/Dodjela_(ra%C4%8Dunarstvo)" lang="hr" hreflang="hr">hrvatski</a></li><li><a href="http://it.m.wikipedia.org/wiki/Operatore_di_assegnamento" lang="it" hreflang="it">italiano</a></li><li><a href="http://he.m.wikipedia.org/wiki/%D7%A4%D7%A7%D7%95%D7%93%D7%AA_%D7%94%D7%A9%D7%9E%D7%94" lang="he" hreflang="he">עברית</a></li><li><a href="http://pl.m.wikipedia.org/wiki/Przypisanie" lang="pl" hreflang="pl">polski</a></li><li><a href="http://pt.m.wikipedia.org/wiki/Atribui%C3%A7%C3%A3o_(computa%C3%A7%C3%A3o)" lang="pt" hreflang="pt">português</a></li><li><a href="http://ru.m.wikipedia.org/wiki/%D0%9F%D1%80%D0%B8%D1%81%D0%B2%D0%B0%D0%B8%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5" lang="ru" hreflang="ru">русский</a></li><li><a href="http://th.m.wikipedia.org/wiki/%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B8%81%E0%B8%B3%E0%B8%AB%E0%B8%99%E0%B8%94%E0%B8%84%E0%B9%88%E0%B8%B2" lang="th" hreflang="th">ไทย</a></li><li><a href="http://uk.m.wikipedia.org/wiki/%D0%9F%D1%80%D0%B8%D1%81%D0%B2%D0%BE%D1%94%D0%BD%D0%BD%D1%8F_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F)" lang="uk" hreflang="uk">українська</a></li></ul>
				</div>
			</div>			</div><!-- close #content_wrapper -->
			<div id="footer">
			<h2 class="section_heading" id="section_footer">
		<img src="http://bits.wikimedia.org/static-1.21wmf3/extensions/MobileFrontend/stylesheets/common/images/logo-copyright-en.png" class="license" alt="Wikipedia ®" />	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Assignment_(computer_science)&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Assignment_(computer_science)&amp;action=history">contributors</a> like you<br>
				Content available under <a href="Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>				<span>| <a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span>
			</li>
		</ul>
		<ul class="links">
						<li>
			<a href='http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Assignment+%28computer+science%29&amp;feedbacksource=MobileFrontend'>
				Contact Wikipedia			</a>
			</li><li>
						<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div><!-- close footer.div / #content_footer -->
	</div><!-- close #footer -->
					</div><!-- close #mw-mf-page-center -->
		</div><!-- close #mw-mf-viewport -->
		
					</body>
	</html>